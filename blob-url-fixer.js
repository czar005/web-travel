// Blob URL Fixer - –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å Blob URL –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
function BlobUrlFixer() {
    this.fixedBlobs = new Set();
    this.init();
}

BlobUrlFixer.prototype.init = function() {
    console.log('üîß Blob URL Fixer initialized');
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Blob URL
    this.patchURLCreateObjectURL();
    
    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    this.monitorImageErrors();
    
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Blob URL
    setInterval(() => this.cleanupUnusedBlobs(), 60000); // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
};

// –ü–∞—Ç—á–∏–º URL.createObjectURL –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö Blob URL
BlobUrlFixer.prototype.patchURLCreateObjectURL = function() {
    const originalCreateObjectURL = URL.createObjectURL;
    const self = this;
    
    URL.createObjectURL = function(blob) {
        const blobUrl = originalCreateObjectURL.call(this, blob);
        console.log('üì∏ Blob URL created:', blobUrl);
        self.fixedBlobs.add(blobUrl);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–≤–æ–∫–∞–µ–º —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
        setTimeout(() => {
            if (self.fixedBlobs.has(blobUrl)) {
                try {
                    URL.revokeObjectURL(blobUrl);
                    self.fixedBlobs.delete(blobUrl);
                    console.log('üßπ Blob URL automatically revoked:', blobUrl);
                } catch (e) {
                    console.warn('‚ö†Ô∏è Could not auto-revoke blob URL:', e);
                }
            }
        }, 300000); // 5 –º–∏–Ω—É—Ç
        
        return blobUrl;
    };
};

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
BlobUrlFixer.prototype.monitorImageErrors = function() {
    document.addEventListener('error', (e) => {
        if (e.target.tagName === 'IMG') {
            const img = e.target;
            const src = img.src;
            
            if (src.startsWith('blob:')) {
                console.warn('‚ö†Ô∏è Blob URL image failed to load:', src);
                
                // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ placeholder —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ Blob URL
                this.replaceBrokenBlobImage(img, src);
            }
        }
    }, true);
};

// –ó–∞–º–µ–Ω—è–µ–º –±–∏—Ç–æ–µ Blob –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
BlobUrlFixer.prototype.replaceBrokenBlobImage = function(imgElement, blobUrl) {
    try {
        // –†–µ–≤–æ–∫–∞–µ–º –±–∏—Ç—ã–π Blob URL
        if (this.fixedBlobs.has(blobUrl)) {
            URL.revokeObjectURL(blobUrl);
            this.fixedBlobs.delete(blobUrl);
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º placeholder
        imgElement.src = 'images/travel-placeholder.svg';
        imgElement.alt = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ';
        imgElement.style.opacity = '0.7';
        
        console.log('üîÑ Replaced broken blob image with placeholder');
        
    } catch (error) {
        console.error('Error replacing broken blob image:', error);
    }
};

// –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Blob URL
BlobUrlFixer.prototype.cleanupUnusedBlobs = function() {
    const blobsToRemove = [];
    
    this.fixedBlobs.forEach(blobUrl => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –µ—â–µ —ç—Ç–æ—Ç Blob URL –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        const isUsed = Array.from(document.images).some(img => img.src === blobUrl);
        
        if (!isUsed) {
            blobsToRemove.push(blobUrl);
        }
    });
    
    // –†–µ–≤–æ–∫–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Blob URL
    blobsToRemove.forEach(blobUrl => {
        try {
            URL.revokeObjectURL(blobUrl);
            this.fixedBlobs.delete(blobUrl);
            console.log('üßπ Cleaned up unused blob URL:', blobUrl);
        } catch (e) {
            console.warn('‚ö†Ô∏è Could not cleanup blob URL:', e);
        }
    });
    
    if (blobsToRemove.length > 0) {
        console.log(`üßπ Cleaned up ${blobsToRemove.length} unused blob URLs`);
    }
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
window.addEventListener('error', function(e) {
    if (e.target.tagName === 'IMG' && e.target.src.startsWith('blob:')) {
        // –ü–æ–¥–∞–≤–ª—è–µ–º –≤—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è Blob URL
        e.preventDefault();
        e.stopPropagation();
    }
}, true);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–∫—Å–µ—Ä–∞
new BlobUrlFixer();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.BlobUrlFixer = BlobUrlFixer;
