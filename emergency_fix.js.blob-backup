const fs = require('fs');
let content = fs.readFileSync('page-editor.html', 'utf8');

// 1. –ù–∞—Ö–æ–¥–∏–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
content = content.replace(
  /updateImageField\(url, fieldId = null\) \{/g,
  'updateImageField(url, fieldId) {'
);

// 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –≤—ã–∑–æ–≤—ã —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
content = content.replace(/this\.updateImageField\([^)]+\)/g, (match) => {
  return match.replace(/= null/g, '');
});

// 3. –£–ø—Ä–æ—â–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - —É–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
content = content.replace(
  /constructor\(\) \{[\s\S]*?this\.init\(\);[\s\S]*?\}/,
  `constructor() {
        this.currentSection = null;
        this.currentData = {};
        this.hasUnsavedChanges = false;
        this.selectedSectionType = 'text';
        this.selectedPosition = 'end';
        this.sections = [];
        this.temporaryUrls = new Map();
        this.sortable = null;
        this.init();
    }`
);

// 4. –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º handleImageUpload –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
content = content.replace(
  /handleImageUpload\(file\) \{[\s\S]*?^\s+\}/gm,
  `handleImageUpload(file) {
        const fileInput = document.getElementById('image-file-input');
        const fieldId = fileInput.getAttribute('data-field');
        
        if (!file || !file.type.startsWith('image/')) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', 'error');
            return;
        }

        if (file.size > 5 * 1024 * 1024) {
            this.showNotification('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB', 'error');
            return;
        }

        // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π URL
        if (this.temporaryUrls.has(fieldId)) {
            const oldUrl = this.temporaryUrls.get(fieldId);
            try {
                URL.revokeObjectURL(oldUrl);
            } catch (e) {
                console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å–≤–æ–±–æ–¥–∏—Ç—å URL');
            }
            this.temporaryUrls.delete(fieldId);
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π URL
        const imageUrl = URL.createObjectURL(file);
        this.temporaryUrls.set(fieldId, imageUrl);
        
        // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
        const field = document.querySelector('[data-field="' + fieldId + '"]');
        if (field) {
            field.value = imageUrl;
            const preview = field.closest('.image-upload-container').querySelector('.image-preview');
            if (preview) {
                preview.innerHTML = '<img src="' + imageUrl + '" alt="Preview" onerror="this.src=\\'images/travel-placeholder.svg\\'">';
                preview.classList.remove('empty');
            }
        }
        
        this.showNotification('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ', 'success');
        this.hasUnsavedChanges = true;
    }`
);

// 5. –£–ø—Ä–æ—â–∞–µ–º updateImageField
content = content.replace(
  /updateImageField\(url, fieldId\) \{[\s\S]*?^\s+\}/gm,
  `updateImageField(url, fieldId) {
        const field = fieldId ? 
            document.querySelector('[data-field="' + fieldId + '"]') :
            document.querySelector('[data-field="image"]');
        
        if (field) {
            field.value = url;
            const preview = field.closest('.image-upload-container').querySelector('.image-preview');
            if (preview) {
                preview.innerHTML = '<img src="' + url + '" alt="Preview" onerror="this.src=\\'images/travel-placeholder.svg\\'">';
                preview.classList.remove('empty');
            }
            this.hasUnsavedChanges = true;
        }
    }`
);

// 6. –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–ª–æ–∂–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ init, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ
content = content.replace(
  /init\(\) \{[\s\S]*?this\.initSortable\(\);[\s\S]*?\}/s,
  `init() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...');
        this.loadCurrentData();
        this.setupFrameListener();
        this.setupTabHandlers();
        this.setupImageUpload();
        this.setupSectionModal();
        this.loadSectionsList();
        this.initSortable();
        
        // –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏
        window.addEventListener('beforeunload', () => {
            this.cleanupTemporaryUrls();
        });
        
        // –ê–≤—Ç–æ-–≤—ã–±–æ—Ä –ø–µ—Ä–≤–æ–π —Å–µ–∫—Ü–∏–∏
        setTimeout(() => {
            if (this.sections.length > 0) {
                this.selectSection(this.sections[0].id);
            }
        }, 1000);
    }`
);

// 7. –£–ø—Ä–æ—â–∞–µ–º cleanupTemporaryUrls
content = content.replace(
  /cleanupTemporaryUrls\(\) \{[\s\S]*?^\s+\}/gm,
  `cleanupTemporaryUrls() {
        this.temporaryUrls.forEach((url, fieldId) => {
            try {
                URL.revokeObjectURL(url);
            } catch (e) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è
            }
        });
        this.temporaryUrls.clear();
    }`
);

// 8. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ - —É–±–∏—Ä–∞–µ–º —Å–ª–æ–∂–Ω—ã–µ —à–∞–±–ª–æ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
content = content.replace(
  /onclick="event\.preventDefault\(\); const input = document\.getElementById\('image-file-input'\); input\.setAttribute\('data-field', '[^']+'\); input\.click\(\);"/g,
  'onclick="var input=document.getElementById(\\'image-file-input\\');input.setAttribute(\\'data-field\\',\\'image\\');input.click();"'
);

fs.writeFileSync('page-editor-fixed.html', content);
console.log('‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
