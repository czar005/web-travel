// –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä —Å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–º–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞–º–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
function EnhancedPageEditorFixed() {
    this.init();
}

EnhancedPageEditorFixed.prototype.init = function() {
    console.log('üöÄ –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –∑–∞–≥—Ä—É–∂–µ–Ω');
    this.patchExistingEditor();
    this.injectEnhancedUI();
};

EnhancedPageEditorFixed.prototype.patchExistingEditor = function() {
    if (!window.editor) {
        setTimeout(() => this.patchExistingEditor(), 100);
        return;
    }

    console.log('üîß Patching editor methods...');

    // –ü–∞—Ç—á–∏–º –º–µ—Ç–æ–¥ showContentEditor –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω—ã—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤
    const originalShowContentEditor = window.editor.showContentEditor;
    window.editor.showContentEditor = function() {
        originalShowContentEditor.call(this);
        setTimeout(() => {
            this.injectEnhancedEditors();
            this.injectImageManagers();
        }, 100);
    };

    // –ü–∞—Ç—á–∏–º –º–µ—Ç–æ–¥ saveChanges –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
    const originalSaveChanges = window.editor.saveChanges;
    window.editor.saveChanges = function() {
        this.saveEnhancedData();
        return originalSaveChanges.call(this);
    };

    // –î–æ–±–∞–≤–ª—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    window.editor.injectEnhancedEditors = function() {
        this.injectUnifiedStatsEditor();
        this.injectUnifiedServicesEditor();
        this.injectFooterEditor();
        this.injectContactsEditor();
    };

    // –û–ë–™–ï–î–ò–ù–ï–ù–ù–´–ô —Ä–µ–¥–∞–∫—Ç–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è —Å–µ–∫—Ü–∏–∏ "–û –∫–æ–º–ø–∞–Ω–∏–∏"
    window.editor.injectUnifiedStatsEditor = function() {
        if (this.currentSection?.id !== 'about') return;
        
        const contentEditor = document.getElementById('content-editor');
        if (!contentEditor) return;

        // –£–¥–∞–ª—è–µ–º –í–°–ï —Å—Ç–∞—Ä—ã–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
        const oldEditors = contentEditor.querySelectorAll('[class*="stats"], [class*="stat"]');
        oldEditors.forEach(editor => {
            if (editor.classList.contains('form-group') && !editor.querySelector('label')) {
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã
                return;
            }
            if (editor.closest('.action-buttons')) {
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
                return;
            }
            // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            if (editor.textContent.includes('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫') || editor.textContent.includes('Stats') || 
                editor.classList.contains('stats-editor') || editor.classList.contains('stats-manager') ||
                editor.classList.contains('stats-editor-enhanced')) {
                editor.remove();
            }
        });

        const stats = this.currentData.content?.about?.stats || [];
        
        const statsHTML = `
            <div class="unified-stats-editor" style="background: #f8f9fa; padding: 25px; border-radius: 10px; margin: 25px 0; border: 2px solid #e9ecef;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                    <h4 style="color: #2c5aa0; margin: 0;">üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π</h4>
                    <button class="btn-admin" onclick="window.editor.addStatData()" style="background: #28a745; color: white; border: none; padding: 10px 15px; border-radius: 5px; cursor: pointer;">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å
                    </button>
                </div>
                
                <div class="admin-hint" style="color: #666; margin-bottom: 20px; font-style: italic; background: white; padding: 12px; border-radius: 6px; border-left: 4px solid #2c5aa0;">
                    üí° –î–æ–±–∞–≤–ª—è–π—Ç–µ –±–ª–æ–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü—É—Å—Ç—ã–µ –±–ª–æ–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞—é—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ.
                </div>
                
                <div id="unified-stats-list">
                    ${stats.length > 0 ? stats.map((stat, index) => `
                        <div class="stat-item-unified" style="display: grid; grid-template-columns: 1fr 1fr auto; gap: 12px; margin-bottom: 15px; align-items: center; padding: 15px; background: white; border-radius: 8px; border: 1px solid #e9ecef; transition: all 0.3s ease;">
                            <div>
                                <label style="display: block; font-size: 12px; color: #666; margin-bottom: 5px;">–ó–Ω–∞—á–µ–Ω–∏–µ</label>
                                <input type="text" class="form-control" value="${stat.value || ''}" placeholder="5000" 
                                       oninput="window.editor.updateStatData(${index}, 'value', this.value)" style="width: 100%;">
                            </div>
                            <div>
                                <label style="display: block; font-size: 12px; color: #666; margin-bottom: 5px;">–ü–æ–¥–ø–∏—Å—å</label>
                                <input type="text" class="form-control" value="${stat.label || ''}" placeholder="–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤" 
                                       oninput="window.editor.updateStatData(${index}, 'label', this.value)" style="width: 100%;">
                            </div>
                            <button class="btn-small danger" onclick="window.editor.removeStatData(${index})" 
                                    style="background: #dc3545; color: white; border: none; padding: 10px 12px; border-radius: 6px; cursor: pointer; align-self: end;">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    `).join('') : `
                        <div style="text-align: center; padding: 40px 20px; color: #666; background: white; border-radius: 8px; border: 2px dashed #ddd;">
                            <i class="fas fa-chart-bar" style="font-size: 3em; margin-bottom: 15px; display: block; color: #ccc;"></i>
                            <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞</p>
                            <small>–ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å" —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å</small>
                        </div>
                    `}
                </div>
                
                ${stats.length > 0 ? `
                <div class="stats-actions" style="display: flex; gap: 10px; margin-top: 20px; padding-top: 20px; border-top: 1px solid #e9ecef;">
                    <button class="btn-admin" onclick="window.editor.addStatData()" style="background: #28a745; color: white; border: none; padding: 12px 20px; border-radius: 6px; cursor: pointer; flex: 1;">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ
                    </button>
                    <button class="btn-admin warning" onclick="window.editor.clearAllStats()" style="background: #ffc107; color: black; border: none; padding: 12px 20px; border-radius: 6px; cursor: pointer; flex: 1;">
                        <i class="fas fa-trash-alt"></i> –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
                    </button>
                </div>
                ` : ''}
            </div>
        `;

        // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è
        const descriptionField = contentEditor.querySelector('[data-field="description"]');
        if (descriptionField) {
            descriptionField.closest('.form-group').insertAdjacentHTML('afterend', statsHTML);
        } else {
            // –ï—Å–ª–∏ –ø–æ–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç, –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            const titleField = contentEditor.querySelector('[data-field="title"]');
            if (titleField) {
                titleField.closest('.form-group').insertAdjacentHTML('afterend', statsHTML);
            }
        }
    };

    // –û–ë–™–ï–î–ò–ù–ï–ù–ù–´–ô —Ä–µ–¥–∞–∫—Ç–æ—Ä —É—Å–ª—É–≥ –¥–ª—è —Å–µ–∫—Ü–∏–∏ "–£—Å–ª—É–≥–∏"
    window.editor.injectUnifiedServicesEditor = function() {
        if (this.currentSection?.id !== 'services') return;
        
        const contentEditor = document.getElementById('content-editor');
        if (!contentEditor) return;

        // –£–¥–∞–ª—è–µ–º –í–°–ï —Å—Ç–∞—Ä—ã–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã —É—Å–ª—É–≥ –µ—Å–ª–∏ –µ—Å—Ç—å
        const oldEditors = contentEditor.querySelectorAll('[class*="service"], [class*="services"]');
        oldEditors.forEach(editor => {
            if (editor.classList.contains('form-group') && !editor.querySelector('label')) {
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã
                return;
            }
            if (editor.closest('.action-buttons')) {
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
                return;
            }
            // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã —É—Å–ª—É–≥
            if (editor.textContent.includes('—É—Å–ª—É–≥') || editor.textContent.includes('Services') || 
                editor.classList.contains('services-editor') || editor.classList.contains('services-manager') ||
                editor.classList.contains('services-editor-enhanced')) {
                editor.remove();
            }
        });

        const services = this.currentData.content?.services?.services || [];
        
        const servicesHTML = `
            <div class="unified-services-editor" style="background: #f8f9fa; padding: 25px; border-radius: 10px; margin: 25px 0; border: 2px solid #e9ecef;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                    <h4 style="color: #2c5aa0; margin: 0;">üéØ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏</h4>
                    <button class="btn-admin" onclick="window.editor.addServiceData()" style="background: #28a745; color: white; border: none; padding: 10px 15px; border-radius: 5px; cursor: pointer;">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å
                    </button>
                </div>
                
                <div class="admin-hint" style="color: #666; margin-bottom: 20px; font-style: italic; background: white; padding: 12px; border-radius: 6px; border-left: 4px solid #2c5aa0;">
                    üí° –î–æ–±–∞–≤–ª—è–π—Ç–µ —É—Å–ª—É–≥–∏ –∫–æ–º–ø–∞–Ω–∏–∏. –ö–∞–∂–¥–∞—è —É—Å–ª—É–≥–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ.
                </div>
                
                <div id="unified-services-list">
                    ${services.length > 0 ? services.map((service, index) => `
                        <div class="service-item-unified" style="margin-bottom: 20px; padding: 20px; background: white; border-radius: 8px; border: 1px solid #e9ecef; transition: all 0.3s ease;">
                            <div style="display: grid; grid-template-columns: 1fr 1fr auto; gap: 12px; margin-bottom: 15px; align-items: start;">
                                <div>
                                    <label style="display: block; font-size: 12px; color: #666; margin-bottom: 5px;">–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏</label>
                                    <input type="text" class="form-control" value="${service.title || ''}" placeholder="–ê–≤–∏–∞–±–∏–ª–µ—Ç—ã" 
                                           oninput="window.editor.updateServiceData(${index}, 'title', this.value)" style="width: 100%;">
                                </div>
                                <div>
                                    <label style="display: block; font-size: 12px; color: #666; margin-bottom: 5px;">–ò–∫–æ–Ω–∫–∞</label>
                                    <input type="text" class="form-control" value="${service.icon || 'fas fa-star'}" placeholder="fas fa-plane" 
                                           oninput="window.editor.updateServiceData(${index}, 'icon', this.value)" style="width: 100%;">
                                </div>
                                <button class="btn-small danger" onclick="window.editor.removeServiceData(${index})" 
                                        style="background: #dc3545; color: white; border: none; padding: 10px 12px; border-radius: 6px; cursor: pointer; margin-top: 25px;">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                            <div>
                                <label style="display: block; font-size: 12px; color: #666; margin-bottom: 5px;">–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏</label>
                                <textarea class="form-control" placeholder="–ü–æ–¥–±–æ—Ä –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª—É—á—à–∏—Ö –∞–≤–∏–∞–ø–µ—Ä–µ–ª–µ—Ç–æ–≤..." 
                                          oninput="window.editor.updateServiceData(${index}, 'description', this.value)"
                                          style="width: 100%; min-height: 80px; resize: vertical;">${service.description || ''}</textarea>
                            </div>
                            ${service.icon ? `
                            <div style="margin-top: 10px; font-size: 12px; color: #666;">
                                <i class="${service.icon}" style="margin-right: 5px;"></i>
                                <span>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∫–æ–Ω–∫–∏</span>
                            </div>
                            ` : ''}
                        </div>
                    `).join('') : `
                        <div style="text-align: center; padding: 40px 20px; color: #666; background: white; border-radius: 8px; border: 2px dashed #ddd;">
                            <i class="fas fa-concierge-bell" style="font-size: 3em; margin-bottom: 15px; display: block; color: #ccc;"></i>
                            <p>–£—Å–ª—É–≥–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã</p>
                            <small>–ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å" —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é —É—Å–ª—É–≥—É</small>
                        </div>
                    `}
                </div>
                
                ${services.length > 0 ? `
                <div class="services-actions" style="display: flex; gap: 10px; margin-top: 20px; padding-top: 20px; border-top: 1px solid #e9ecef;">
                    <button class="btn-admin" onclick="window.editor.addServiceData()" style="background: #28a745; color: white; border: none; padding: 12px 20px; border-radius: 6px; cursor: pointer; flex: 1;">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ
                    </button>
                    <button class="btn-admin warning" onclick="window.editor.clearAllServices()" style="background: #ffc107; color: black; border: none; padding: 12px 20px; border-radius: 6px; cursor: pointer; flex: 1;">
                        <i class="fas fa-trash-alt"></i> –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
                    </button>
                </div>
                ` : ''}
            </div>
        `;

        const titleField = contentEditor.querySelector('[data-field="title"]');
        if (titleField) {
            titleField.closest('.form-group').insertAdjacentHTML('afterend', servicesHTML);
        }
    };

    // –†–µ–¥–∞–∫—Ç–æ—Ä –¥–ª—è —Ñ—É—Ç–µ—Ä–∞
    window.editor.injectFooterEditor = function() {
        if (this.currentSection?.id !== 'footer') return;
        
        const contentEditor = document.getElementById('content-editor');
        if (!contentEditor) return;

        // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–æ–ª—è —Ñ—É—Ç–µ—Ä–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
        const descriptionField = contentEditor.querySelector('[data-field="description"]');
        const copyrightField = contentEditor.querySelector('[data-field="copyright"]');
        
        if (descriptionField) {
            descriptionField.placeholder = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ —Ñ—É—Ç–µ—Ä–µ...";
        }
        if (copyrightField) {
            copyrightField.placeholder = "–¢–µ–∫—Å—Ç –∫–æ–ø–∏—Ä–∞–π—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: &copy; 2024 WorldTravel)...";
        }
    };

    // –†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
    window.editor.injectContactsEditor = function() {
        if (this.currentSection?.id !== 'contact') return;
        
        const contentEditor = document.getElementById('content-editor');
        if (!contentEditor) return;

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        const contactsInfoHTML = `
            <div class="contacts-management" style="background: #e3f2fd; padding: 20px; border-radius: 10px; margin: 25px 0; border-left: 4px solid #2196f3;">
                <h4 style="color: #1976d2; margin-bottom: 15px;">üìû –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏</h4>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 15px;">
                    <div style="background: white; padding: 15px; border-radius: 6px;">
                        <h5 style="color: #333; margin-bottom: 10px;">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:</h5>
                        <ul style="color: #666; font-size: 0.9em; margin: 0; padding-left: 20px;">
                            <li><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> +7 (999) 123-45-67</li>
                            <li><strong>Email:</strong> info@worldtravel.com</li>
                            <li><strong>–ê–¥—Ä–µ—Å:</strong> –ú–æ—Å–∫–≤–∞, —É–ª. –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è, 15</li>
                            <li><strong>–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã:</strong> –ü–Ω-–ü—Ç: 9:00-18:00</li>
                        </ul>
                    </div>
                    <div style="background: white; padding: 15px; border-radius: 6px;">
                        <h5 style="color: #333; margin-bottom: 10px;">–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å:</h5>
                        <p style="color: #666; font-size: 0.9em; margin: 0;">
                            –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å ‚Üí —Ä–∞–∑–¥–µ–ª "–ö–æ–Ω—Ç–∞–∫—Ç—ã" –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
                        </p>
                    </div>
                </div>
            </div>
        `;

        const titleField = contentEditor.querySelector('[data-field="title"]');
        if (titleField) {
            titleField.closest('.form-group').insertAdjacentHTML('afterend', contactsInfoHTML);
        }
    };

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è –≤—Å–µ—Ö —Å–µ–∫—Ü–∏–π
    window.editor.injectImageManagers = function() {
        const contentEditor = document.getElementById('content-editor');
        if (!contentEditor) return;

        // –ù–∞—Ö–æ–¥–∏–º –í–°–ï –ø–æ–ª—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const imageFields = contentEditor.querySelectorAll('input[data-field*="image"], input[data-field*="Image"]');
        
        imageFields.forEach(field => {
            const fieldId = field.getAttribute('data-field');
            const currentValue = field.value;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—è
            if (field.parentNode.querySelector('.unified-image-manager')) {
                return;
            }

            const label = this.getImageFieldLabel(fieldId);
            const sectionType = this.getSectionTypeForImage(fieldId);
            
            const imageManagerHTML = `
                <div class="unified-image-manager" style="margin: 20px 0; padding: 20px; background: #f8f9fa; border-radius: 10px; border: 2px solid #e9ecef;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                        <div>
                            <strong style="color: #2c5aa0; font-size: 1.1em;">${label}</strong>
                            <div style="font-size: 0.9em; color: #666; margin-top: 5px;">
                                ${sectionType}
                            </div>
                        </div>
                        <div style="display: flex; gap: 8px;">
                            <button type="button" class="btn-admin" onclick="window.editor.uploadImage('${fieldId}')" 
                                    style="background: #17a2b8; color: white; border: none; padding: 10px 15px; border-radius: 6px; cursor: pointer; font-size: 0.9em;">
                                <i class="fas fa-upload"></i> –ó–∞–≥—Ä—É–∑–∏—Ç—å
                            </button>
                            <button type="button" class="btn-admin" onclick="window.editor.setImageUrl('${fieldId}')" 
                                    style="background: #6c757d; color: white; border: none; padding: 10px 15px; border-radius: 6px; cursor: pointer; font-size: 0.9em;">
                                <i class="fas fa-link"></i> URL
                            </button>
                            ${currentValue ? `
                            <button type="button" class="btn-admin danger" onclick="window.editor.removeImage('${fieldId}')" 
                                    style="background: #dc3545; color: white; border: none; padding: 10px 15px; border-radius: 6px; cursor: pointer; font-size: 0.9em;">
                                <i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å
                            </button>
                            ` : ''}
                        </div>
                    </div>
                    
                    <div class="image-preview-container" style="display: flex; gap: 20px; align-items: flex-start;">
                        <div class="image-preview" style="flex: 0 0 300px; height: 200px; border: 2px dashed #ddd; border-radius: 8px; display: flex; align-items: center; justify-content: center; overflow: hidden; background: white; transition: all 0.3s ease;">
                            ${currentValue ? 
                                `<img src="${currentValue}" alt="Preview" style="max-width: 100%; max-height: 100%; object-fit: cover;" 
                                      onerror="this.style.display='none'; this.parentNode.innerHTML='<div style=\\'text-align: center; color: #666; padding: 20px;\\'><i class=\\'fas fa-exclamation-triangle\\' style=\\'font-size: 2em; margin-bottom: 10px; color: #dc3545;\\'></i><div>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</div><small style=\\'font-size: 0.8em;\\'>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</small></div>';">` :
                                `<div style="text-align: center; color: #666; padding: 20px;">
                                    <i class="fas fa-image" style="font-size: 3em; display: block; margin-bottom: 10px; color: #ccc;"></i>
                                    <div>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</div>
                                    <small style="font-size: 0.8em;">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</small>
                                </div>`
                            }
                        </div>
                        
                        <div style="flex: 1;">
                            ${currentValue ? `
                            <div style="background: white; padding: 15px; border-radius: 6px; margin-bottom: 10px;">
                                <strong style="display: block; margin-bottom: 8px; color: #333;">–¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</strong>
                                <div style="font-size: 0.85em; color: #666; background: #f8f9fa; padding: 10px; border-radius: 4px; word-break: break-all;">
                                    ${currentValue.length > 80 ? currentValue.substring(0, 80) + '...' : currentValue}
                                </div>
                            </div>
                            ` : ''}
                            
                            <div style="background: #e7f3ff; padding: 12px; border-radius: 6px; border-left: 4px solid #2196f3;">
                                <strong style="display: block; margin-bottom: 5px; color: #1976d2;">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</strong>
                                <ul style="margin: 0; padding-left: 15px; font-size: 0.85em; color: #1565c0;">
                                    <li>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF, WebP</li>
                                    <li>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB</li>
                                    <li>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ: 16:9</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    
                    <input type="hidden" data-field="${fieldId}" value="${currentValue || ''}">
                </div>
            `;
            
            // –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –Ω–∞ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä
            const originalContainer = field.closest('.form-group');
            if (originalContainer) {
                originalContainer.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            }
            
            // –í—Å—Ç–∞–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            if (originalContainer) {
                originalContainer.insertAdjacentHTML('afterend', imageManagerHTML);
            } else {
                field.insertAdjacentHTML('afterend', imageManagerHTML);
            }
        });
    };

    window.editor.getImageFieldLabel = function(fieldId) {
        const labels = {
            'image': 'üì∑ –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
            'heroImage': 'üéØ –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–µ—Ä–æ—è',
            'aboutImage': 'üè¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏',
            'serviceImage': '‚ö° –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ª—É–≥–∏'
        };
        return labels[fieldId] || 'üñºÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º';
    };

    window.editor.getSectionTypeForImage = function(fieldId) {
        const sections = {
            'image': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ–∫—Ü–∏–∏',
            'heroImage': '–§–æ–Ω–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞',
            'aboutImage': '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–µ–∫—Ü–∏–∏ "–û –∫–æ–º–ø–∞–Ω–∏–∏"',
            'serviceImage': '–ò–∫–æ–Ω–∫–∞ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —É—Å–ª—É–≥'
        };
        return sections[fieldId] || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ–∫—Ü–∏–∏';
    };

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    window.editor.addStatData = function() {
        if (!this.currentData.content.about) this.currentData.content.about = {};
        if (!this.currentData.content.about.stats) this.currentData.content.about.stats = [];
        
        this.currentData.content.about.stats.push({ 
            value: '0', 
            label: '–ù–æ–≤—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å' 
        });
        
        this.hasUnsavedChanges = true;
        this.injectUnifiedStatsEditor();
        this.showNotification('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞', 'success');
    };

    window.editor.updateStatData = function(index, field, value) {
        if (!this.currentData.content.about) this.currentData.content.about = {};
        if (!this.currentData.content.about.stats) this.currentData.content.about.stats = [];
        
        if (!this.currentData.content.about.stats[index]) {
            this.currentData.content.about.stats[index] = {};
        }
        
        this.currentData.content.about.stats[index][field] = value;
        this.hasUnsavedChanges = true;
    };

    window.editor.removeStatData = function(index) {
        if (this.currentData.content?.about?.stats?.[index]) {
            this.currentData.content.about.stats.splice(index, 1);
            this.hasUnsavedChanges = true;
            this.injectUnifiedStatsEditor();
            this.showNotification('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∞', 'success');
        }
    };

    window.editor.clearAllStats = function() {
        if (confirm('–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
            if (this.currentData.content?.about?.stats) {
                this.currentData.content.about.stats = [];
                this.hasUnsavedChanges = true;
                this.injectUnifiedStatsEditor();
                this.showNotification('–í—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–∏—â–µ–Ω–∞', 'success');
            }
        }
    };

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Å–ª—É–≥–∞–º–∏
    window.editor.addServiceData = function() {
        if (!this.currentData.content.services) this.currentData.content.services = {};
        if (!this.currentData.content.services.services) this.currentData.content.services.services = [];
        
        this.currentData.content.services.services.push({ 
            title: '–ù–æ–≤–∞—è —É—Å–ª—É–≥–∞', 
            description: '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–π —É—Å–ª—É–≥–∏',
            icon: 'fas fa-star'
        });
        
        this.hasUnsavedChanges = true;
        this.injectUnifiedServicesEditor();
        this.showNotification('–£—Å–ª—É–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞', 'success');
    };

    window.editor.updateServiceData = function(index, field, value) {
        if (!this.currentData.content.services) this.currentData.content.services = {};
        if (!this.currentData.content.services.services) this.currentData.content.services.services = [];
        
        if (!this.currentData.content.services.services[index]) {
            this.currentData.content.services.services[index] = {};
        }
        
        this.currentData.content.services.services[index][field] = value;
        this.hasUnsavedChanges = true;
    };

    window.editor.removeServiceData = function(index) {
        if (this.currentData.content?.services?.services?.[index]) {
            this.currentData.content.services.services.splice(index, 1);
            this.hasUnsavedChanges = true;
            this.injectUnifiedServicesEditor();
            this.showNotification('–£—Å–ª—É–≥–∞ —É–¥–∞–ª–µ–Ω–∞', 'success');
        }
    };

    window.editor.clearAllServices = function() {
        if (confirm('–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —É—Å–ª—É–≥–∏? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
            if (this.currentData.content?.services?.services) {
                this.currentData.content.services.services = [];
                this.hasUnsavedChanges = true;
                this.injectUnifiedServicesEditor();
                this.showNotification('–í—Å–µ —É—Å–ª—É–≥–∏ –æ—á–∏—â–µ–Ω—ã', 'success');
            }
        }
    };

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    window.editor.uploadImage = function(fieldId) {
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = 'image/*';
        input.onchange = (e) => {
            const file = e.target.files[0];
            if (file) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    this.showNotification('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB', 'error');
                    return;
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
                if (!file.type.startsWith('image/')) {
                    this.showNotification('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', 'error');
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = (e) => {
                    this.updateImageField(fieldId, e.target.result);
                    this.showNotification('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ', 'success');
                };
                reader.onerror = () => {
                    this.showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', 'error');
                };
                reader.readAsDataURL(file);
            }
        };
        input.click();
    };

    window.editor.setImageUrl = function(fieldId) {
        const currentValue = this.getCurrentImageValue(fieldId);
        const url = prompt('–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', currentValue || '');
        if (url !== null) {
            if (url === '') {
                this.removeImage(fieldId);
            } else if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith('data:image') || url.startsWith('images/')) {
                this.updateImageField(fieldId, url);
                this.showNotification('URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', 'success');
            } else {
                this.showNotification('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', 'error');
            }
        }
    };

    window.editor.removeImage = function(fieldId) {
        if (confirm('–£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ?')) {
            this.updateImageField(fieldId, '');
            this.showNotification('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ', 'success');
        }
    };

    window.editor.getCurrentImageValue = function(fieldId) {
        const field = document.querySelector(`[data-field="${fieldId}"]`);
        return field ? field.value : '';
    };

    window.editor.updateImageField = function(fieldId, url) {
        const field = document.querySelector(`[data-field="${fieldId}"]`);
        if (field) {
            field.value = url;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            const manager = document.querySelector(`.unified-image-manager input[data-field="${fieldId}"]`)?.closest('.unified-image-manager');
            if (manager) {
                const preview = manager.querySelector('.image-preview');
                const currentImageInfo = manager.querySelector('.image-preview-container > div:last-child > div:first-child');
                
                if (preview) {
                    if (url) {
                        preview.innerHTML = `<img src="${url}" alt="Preview" style="max-width: 100%; max-height: 100%; object-fit: cover;" 
                                                  onerror="this.style.display='none'; this.parentNode.innerHTML='<div style=\\'text-align: center; color: #666; padding: 20px;\\'><i class=\\'fas fa-exclamation-triangle\\' style=\\'font-size: 2em; margin-bottom: 10px; color: #dc3545;\\'></i><div>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</div><small style=\\'font-size: 0.8em;\\'>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</small></div>';">`;
                    } else {
                        preview.innerHTML = `
                            <div style="text-align: center; color: #666; padding: 20px;">
                                <i class="fas fa-image" style="font-size: 3em; display: block; margin-bottom: 10px; color: #ccc;"></i>
                                <div>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</div>
                                <small style="font-size: 0.8em;">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</small>
                            </div>
                        `;
                    }
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
                if (currentImageInfo) {
                    if (url) {
                        currentImageInfo.innerHTML = `
                            <strong style="display: block; margin-bottom: 8px; color: #333;">–¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</strong>
                            <div style="font-size: 0.85em; color: #666; background: #f8f9fa; padding: 10px; border-radius: 4px; word-break: break-all;">
                                ${url.length > 80 ? url.substring(0, 80) + '...' : url}
                            </div>
                        `;
                        currentImageInfo.style.display = 'block';
                    } else {
                        currentImageInfo.style.display = 'none';
                    }
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                const buttonsContainer = manager.querySelector('div:first-child div:last-child');
                if (buttonsContainer) {
                    const deleteBtn = buttonsContainer.querySelector('.btn-admin.danger');
                    if (url) {
                        if (!deleteBtn) {
                            const newDeleteBtn = document.createElement('button');
                            newDeleteBtn.className = 'btn-admin danger';
                            newDeleteBtn.style.background = '#dc3545';
                            newDeleteBtn.style.color = 'white';
                            newDeleteBtn.style.border = 'none';
                            newDeleteBtn.style.padding = '10px 15px';
                            newDeleteBtn.style.borderRadius = '6px';
                            newDeleteBtn.style.cursor = 'pointer';
                            newDeleteBtn.style.fontSize = '0.9em';
                            newDeleteBtn.innerHTML = '<i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å';
                            newDeleteBtn.onclick = () => this.removeImage(fieldId);
                            buttonsContainer.appendChild(newDeleteBtn);
                        }
                    } else {
                        if (deleteBtn) {
                            deleteBtn.remove();
                        }
                    }
                }
            }
            
            this.hasUnsavedChanges = true;
        }
    };

    // –£–ª—É—á—à–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    window.editor.saveEnhancedData = function() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if (this.currentSection?.id === 'about') {
            this.saveStatsData();
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É—Å–ª—É–≥–∏
        if (this.currentSection?.id === 'services') {
            this.saveServicesData();
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ—É—Ç–µ—Ä
        if (this.currentSection?.id === 'footer') {
            this.saveFooterData();
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ –ø–æ–ª—è)
        this.saveImageData();
    };

    window.editor.saveStatsData = function() {
        if (this.currentSection?.id !== 'about') return;
        
        const statsList = document.getElementById('unified-stats-list');
        if (!statsList) return;

        const statItems = statsList.querySelectorAll('.stat-item-unified');
        const stats = [];

        statItems.forEach(item => {
            const inputs = item.querySelectorAll('input');
            if (inputs.length >= 2) {
                const value = inputs[0].value.trim();
                const label = inputs[1].value.trim();
                if (value && label) {
                    stats.push({
                        value: value,
                        label: label
                    });
                }
            }
        });

        console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', stats);
        
        if (!this.currentData.content.about) {
            this.currentData.content.about = {};
        }
        this.currentData.content.about.stats = stats;
    };

    window.editor.saveServicesData = function() {
        if (this.currentSection?.id !== 'services') return;
        
        const servicesList = document.getElementById('unified-services-list');
        if (!servicesList) return;

        const serviceItems = servicesList.querySelectorAll('.service-item-unified');
        const services = [];

        serviceItems.forEach(item => {
            const titleInput = item.querySelector('input[placeholder="–ê–≤–∏–∞–±–∏–ª–µ—Ç—ã"]');
            const iconInput = item.querySelector('input[placeholder="fas fa-plane"]');
            const descTextarea = item.querySelector('textarea');
            
            if (titleInput && descTextarea) {
                const title = titleInput.value.trim();
                const description = descTextarea.value.trim();
                const icon = iconInput ? iconInput.value.trim() : 'fas fa-star';
                
                if (title && description) {
                    services.push({
                        title: title,
                        description: description,
                        icon: icon
                    });
                }
            }
        });

        console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—Å–ª—É–≥:', services);
        
        if (!this.currentData.content.services) {
            this.currentData.content.services = {};
        }
        this.currentData.content.services.services = services;
    };

    window.editor.saveFooterData = function() {
        if (this.currentSection?.id !== 'footer') return;
        
        const descriptionField = document.querySelector('[data-field="description"]');
        const copyrightField = document.querySelector('[data-field="copyright"]');
        
        if (descriptionField && this.currentData.footer) {
            this.currentData.footer.description = descriptionField.value;
        }
        if (copyrightField && this.currentData.footer) {
            this.currentData.footer.copyright = copyrightField.value;
        }
        
        console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞:', this.currentData.footer);
    };

    window.editor.saveImageData = function() {
        // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ–ª—è
        console.log('üíæ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —á–µ—Ä–µ–∑ –ø–æ–ª—è —Ñ–æ—Ä–º—ã');
    };
};

EnhancedPageEditorFixed.prototype.injectEnhancedUI = function() {
    // –î–æ–±–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    const style = document.createElement('style');
    style.textContent = `
        .unified-stats-editor,
        .unified-services-editor,
        .unified-image-manager {
            transition: all 0.3s ease;
        }
        
        .stat-item-unified:hover,
        .service-item-unified:hover {
            border-color: #2c5aa0 !important;
            background: #f8f9fa !important;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        
        .unified-image-manager:hover {
            border-color: #2c5aa0 !important;
        }
        
        .image-preview:hover {
            border-color: #2c5aa0 !important;
        }
        
        .contacts-management {
            transition: all 0.3s ease;
        }
        
        @media (max-width: 768px) {
            .stat-item-unified {
                grid-template-columns: 1fr !important;
                gap: 10px !important;
            }
            
            .unified-image-manager .image-preview-container {
                flex-direction: column !important;
            }
            
            .unified-image-manager .image-preview {
                flex: none !important;
                width: 100% !important;
                max-width: 300px !important;
            }
        }
    `;
    document.head.appendChild(style);
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
new EnhancedPageEditorFixed();
