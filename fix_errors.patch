--- a/page-editor.html
+++ b/page-editor.html
@@ -6,7 +6,7 @@
     <title>Редактор страниц - WorldTravel</title>
     <link rel="stylesheet" href="admin-style.css">
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
-    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.css">
+    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.css">
     <style>
         /* Все существующие стили остаются без изменений */
         * {
@@ -1636,7 +1636,7 @@
     </div>
 
     <!-- Скрытый input для загрузки файлов -->
-    <input type="file" id="image-file-input" accept="image/*" style="display: none;">
+    <input type="file" id="image-file-input" accept="image/*" style="display: none;" data-field="">
 
     <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
     <script>
@@ -1649,6 +1649,7 @@
                 this.selectedSectionType = 'text';
                 this.selectedPosition = 'end';
                 this.sections = [];
+                this.temporaryUrls = new Map(); // Для отслеживания временных URL
                 this.sortable = null;
                 this.init();
             }
@@ -1660,6 +1661,32 @@
                 this.setupImageUpload();
                 this.setupSectionModal();
                 this.loadSectionsList();
+                
+                // Добавляем обработчик для очистки при закрытии страницы
+                window.addEventListener('beforeunload', () => {
+                    this.cleanupTemporaryUrls();
+                });
+                
+                // Добавляем обработчик ошибок для blob URL
+                window.addEventListener('error', (event) => {
+                    if (event.target && event.target.src && event.target.src.startsWith('blob:')) {
+                        console.warn('Ошибка загрузки blob URL:', event.target.src);
+                        // Заменяем сломанный blob на placeholder
+                        if (event.target.tagName === 'IMG') {
+                            event.target.src = 'images/travel-placeholder.svg';
+                        }
+                        event.preventDefault();
+                    }
+                });
+                
+                this.initSortable();
+                
+                // Авто-выбор первой секции
+                setTimeout(() => {
+                    if (this.sections.length > 0) {
+                        this.selectSection(this.sections[0].id);
+                    }
+                }, 1000);
-                this.initSortable();
-                
-                // Авто-выбор первой секции
-                setTimeout(() => {
-                    if (this.sections.length > 0) {
-                        this.selectSection(this.sections[0].id);
-                    }
-                }, 1000);
             }
 
             initSortable() {
@@ -2198,6 +2225,7 @@
 
             setupImageUpload() {
                 const fileInput = document.getElementById('image-file-input');
+                fileInput.removeAttribute('data-field'); // Очищаем атрибут
                 fileInput.addEventListener('change', (e) => {
                     const file = e.target.files[0];
                     if (file) {
@@ -2247,7 +2275,7 @@
 
             getImageEditor(field) {
                 const currentImage = this.getCurrentValue(field);
-                return `
+                const html = `
                     <div class="form-group image-upload-container">
                         <label>${field.label}:</label>
                         <div class="image-preview ${!currentImage ? 'empty' : ''}">
@@ -2258,7 +2286,7 @@
                         </div>
                         <div class="image-actions">
                             <button class="btn btn-primary" onclick="document.getElementById('image-file-input').click()">
-                                <i class="fas fa-upload"></i> Загрузить
+                                <i class="fas fa-upload"></i> Загрузить
                             </button>
                             <button class="btn btn-secondary" onclick="editor.promptImageUrl('${field.id}')">
                                 <i class="fas fa-link"></i> Указать URL
@@ -2268,6 +2296,13 @@
                         <input type="hidden" data-field="${field.id}" value="${currentImage}">
                     </div>
                 `;
+                
+                // Устанавливаем data-field для input при создании редактора
+                setTimeout(() => {
+                    const uploadBtn = document.querySelector('.image-upload-container .btn-primary');
+                    uploadBtn.onclick = () => document.getElementById('image-file-input').setAttribute('data-field', field.id);
+                }, 0);
+                return html;
             }
 
             handleImageUpload(file) {
@@ -2289,29 +2324,29 @@
                 }
 
                 try {
-                    // Создаем временный URL для предпросмотра
+                    // Освобождаем предыдущий временный URL
+                    if (this.temporaryUrls.has(fieldId)) {
+                        const oldUrl = this.temporaryUrls.get(fieldId);
+                        try {
+                            URL.revokeObjectURL(oldUrl);
+                        } catch (e) {
+                            console.warn('Не удалось освободить URL:', e);
+                        }
+                        this.temporaryUrls.delete(fieldId);
+                    }
+
+                    // Создаем новый временный URL
                     const imageUrl = URL.createObjectURL(file);
+                    this.temporaryUrls.set(fieldId, imageUrl);
                     this.updateImageField(imageUrl, fieldId);
                     this.showNotification('Изображение загружено для предпросмотра', 'success');
                     
-                    // Освобождаем память через 30 секунд
-                    setTimeout(() => {
-                        try {
-                            URL.revokeObjectURL(imageUrl);
-                        } catch (e) {
-                            console.warn('Не удалось освободить URL:', e);
-                        }
-                    }, 30000);
-                    
                 } catch (error) {
                     console.error('Ошибка загрузки изображения:', error);
                     this.showNotification('Ошибка загрузки изображения', 'error');
                 }
             }
 
-            // Добавьте это свойство в конструктор
-            this.temporaryUrls = new Set();
-
-            // Добавьте этот метод
             cleanupTemporaryUrls() {
                 this.temporaryUrls.forEach(url => {
                     try {
@@ -2322,31 +2357,6 @@
                 });
                 this.temporaryUrls.clear();
             }
-
-            // Обновите handleImageUpload
-            handleImageUpload(file) {
-                const fieldId = document.getElementById('image-file-input').getAttribute('data-field');
-                
-                if (!file.type.startsWith('image/')) {
-                    this.showNotification('Пожалуйста, выберите файл изображения', 'error');
-                    return;
-                }
-
-                if (file.size > 5 * 1024 * 1024) {
-                    this.showNotification('Размер файла не должен превышать 5MB', 'error');
-                    return;
-                }
-
-                try {
-                    const imageUrl = URL.createObjectURL(file);
-                    this.temporaryUrls.add(imageUrl);
-                    this.updateImageField(imageUrl, fieldId);
-                    this.showNotification('Изображение загружено для предпросмотра', 'success');
-                    
-                } catch (error) {
-                    console.error('Ошибка загрузки изображения:', error);
-                    this.showNotification('Ошибка загрузки изображения', 'error');
-                }
-            }
 
             promptImageUrl(fieldId) {
                 const url = prompt('Введите URL изображения:');
