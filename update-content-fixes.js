// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ContentUpdater

class FixedContentUpdater extends ContentUpdater {
    applyCustomSections(data) {
        if (!data.pageStructure || !data.content) return;

        console.log('üîÑ Applying custom sections with order:', data.pageStructure);

        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º
        let customSectionsContainer = document.getElementById('custom-sections');
        if (!customSectionsContainer) {
            customSectionsContainer = document.createElement('div');
            customSectionsContainer.id = 'custom-sections';
            const footer = document.querySelector('footer');
            const contact = document.querySelector('#contact');
            const insertBefore = footer || document.body.lastElementChild;
            
            if (insertBefore) {
                insertBefore.parentNode.insertBefore(customSectionsContainer, insertBefore);
            } else {
                document.body.appendChild(customSectionsContainer);
            }
        }

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        customSectionsContainer.innerHTML = '';

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        data.pageStructure.forEach(sectionId => {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ (–æ–Ω–∏ —É–∂–µ –µ—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
            const standardSections = ['hero', 'about', 'services', 'destinations', 'contact', 'footer'];
            if (standardSections.includes(sectionId)) return;

            if (data.content[sectionId]) {
                this.renderCustomSection(customSectionsContainer, data.content[sectionId]);
            }
        });

        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        if (customSectionsContainer.children.length > 0) {
            this.ensureCustomStyles();
        }
    }

    applyContentChanges(content) {
        if (!content) return;

        console.log('üìù Applying content changes to page structure');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
        super.applyContentChanges(content);

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
        this.applyCustomSections(this.getCurrentData());
    }

    // –£–ª—É—á—à–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    getCurrentData() {
        // Try multiple sources for data
        if (typeof window.dataManager !== 'undefined' && window.dataManager) {
            const data = window.dataManager.getData();
            if (data && data.pageStructure) {
                console.log('üìÅ Using DataManager data with page structure:', data.pageStructure);
                return data;
            }
        }

        // Try localStorage
        try {
            const localData = localStorage.getItem('worldtravel_data');
            if (localData) {
                const data = JSON.parse(localData);
                if (data.pageStructure) {
                    console.log('üìÅ Using localStorage data with page structure:', data.pageStructure);
                    return data;
                }
            }
        } catch (error) {
            console.error('Error parsing localStorage data:', error);
        }

        return this.getDefaultData();
    }

    getDefaultData() {
        return {
            content: {},
            pageStructure: ['hero', 'about', 'services', 'destinations', 'contact'],
            lastUpdate: new Date().toISOString()
        };
    }
}

// –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π ContentUpdater –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π
window.contentUpdater = new FixedContentUpdater();
