]633;E;for file in $(find . -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.json" | grep -v node_modules | head -20);8764fc8b-4fb0-48e2-9c8e-a9c8b54f8295]633;C=== FILE: ./admin-style.css ===
/* Admin Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', sans-serif;
    background: #f5f5f5;
    color: #333;
}

.admin-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

.admin-header {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.admin-header h1 {
    color: #2c5aa0;
    font-size: 1.5rem;
}

.admin-nav {
    display: flex;
    gap: 10px;
}

.admin-tabs {
    display: flex;
    background: white;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 20px;
    overflow: hidden;
}

.tab-button {
    flex: 1;
    padding: 15px 20px;
    border: none;
    background: transparent;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.3s ease;
}

.tab-button:hover {
    background: #f8f9fa;
}

.tab-button.active {
    background: #2c5aa0;
    color: white;
}

.tab-content {
    background: white;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    padding: 30px;
}

.tab-pane {
    display: none;
}

.tab-pane.active {
    display: block;
}

.admin-section {
    margin-bottom: 30px;
}

.admin-section h3 {
    color: #2c5aa0;
    margin-bottom: 20px;
    font-size: 1.2rem;
}

.admin-hint {
    color: #666;
    font-size: 14px;
    margin-bottom: 15px;
    font-style: italic;
}

.admin-form {
    max-width: 600px;
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: 500;
    color: #333;
}

.form-group input,
.form-group textarea,
.form-group select {
    width: 100%;
    padding: 10px 15px;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 14px;
    transition: border-color 0.3s ease;
}

.form-group input:focus,
.form-group textarea:focus,
.form-group select:focus {
    outline: none;
    border-color: #2c5aa0;
}

.btn-admin {
    background: #2c5aa0;
    color: white;
    border: none;
    padding: 12px 25px;
    border-radius: 5px;
    cursor: pointer;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    font-weight: 500;
    transition: background 0.3s ease;
}

.btn-admin:hover {
    background: #1e3d6f;
}

.btn-admin.secondary {
    background: #6c757d;
}

.btn-admin.secondary:hover {
    background: #545b62;
}

.btn-admin.danger {
    background: #dc3545;
}

.btn-admin.danger:hover {
    background: #c82333;
}

.btn-admin.warning {
    background: #ffc107;
    color: #000;
}

.btn-admin.warning:hover {
    background: #e0a800;
}

.table-container {
    overflow-x: auto;
}

.admin-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 10px;
}

.admin-table th,
.admin-table td {
    padding: 12px 15px;
    text-align: left;
    border-bottom: 1px solid #eee;
}

.admin-table th {
    background: #f8f9fa;
    font-weight: 600;
    color: #333;
}

.admin-table tr:hover {
    background: #f8f9fa;
}

.btn-small {
    padding: 6px 12px;
    border: none;
    border-radius: 3px;
    cursor: pointer;
    font-size: 12px;
    margin-right: 5px;
}

.btn-small.danger {
    background: #dc3545;
    color: white;
}

.btn-small.danger:hover {
    background: #c82333;
}

/* Responsive */
@media (max-width: 768px) {
    .admin-container {
        padding: 10px;
    }
    
    .admin-header {
        flex-direction: column;
        gap: 15px;
        text-align: center;
    }
    
    .admin-tabs {
        flex-direction: column;
    }
    
    .tab-content {
        padding: 20px;
    }
}

/* –°—Ç–∏–ª–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã —Ç—É—Ä–æ–≤ */
.tour-info {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.tour-info small {
    color: #666;
    font-size: 0.8rem;
}

.country-badge {
    background: #e3f2fd;
    color: #1976d2;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 500;
}

.price-tag {
    background: #e8f5e8;
    color: #2e7d32;
    padding: 6px 12px;
    border-radius: 15px;
    font-weight: 700;
    font-size: 0.9rem;
}

.duration-badge {
    background: #fff3e0;
    color: #ef6c00;
    padding: 4px 8px;
    border-radius: 10px;
    font-size: 0.8rem;
    font-weight: 500;
}

.tour-count-badge {
    background: #2c5aa0;
    color: white;
    padding: 4px 8px;
    border-radius: 10px;
    font-size: 0.8rem;
    font-weight: 600;
    min-width: 25px;
    display: inline-block;
    text-align: center;
}

.action-buttons {
    display: flex;
    gap: 5px;
}

.btn-small.warning {
    background: #ffc107;
    color: #000;
}

.btn-small.warning:hover {
    background: #e0a800;
}

/* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º */
.form-group input[type="number"] {
    -moz-appearance: textfield;
}

.form-group input[type="number"]::-webkit-outer-spin-button,
.form-group input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü */
.admin-table tr {
    transition: background-color 0.2s ease;
}

.admin-table tr:hover {
    background-color: #f8f9fa;
}

/* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –∞–¥–º–∏–Ω–∫–∏ */
@media (max-width: 768px) {
    .admin-table {
        font-size: 0.9rem;
    }
    
    .action-buttons {
        flex-direction: column;
    }
    
    .tour-info {
        min-width: 150px;
    }
    
    .country-badge,
    .price-tag,
    .duration-badge {
        font-size: 0.7rem;
        padding: 3px 6px;
    }
}



=== FILE: ./page-editor.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–†–µ–¥–∞–∫—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü - WorldTravel</title>
    <link rel="stylesheet" href="admin-style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #f5f7fa;
            height: 100vh;
            overflow: hidden;
        }

        .editor-container {
            display: flex;
            height: 100vh;
        }

        .preview-panel {
            flex: 1;
            background: white;
            display: flex;
            flex-direction: column;
            position: relative;
        }

        .editor-panel {
            width: 450px;
            background: white;
            border-left: 2px solid #e1e5e9;
            display: flex;
            flex-direction: column;
        }

        .panel-header {
            padding: 20px;
            background: #2c5aa0;
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-shrink: 0;
        }

        .panel-content {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
        }

        .preview-frame-container {
            flex: 1;
            position: relative;
            overflow: hidden;
        }

        .preview-frame {
            width: 100%;
            height: 100%;
            border: none;
        }

        .section-list {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .section-item {
            padding: 15px;
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .section-item:hover {
            border-color: #2c5aa0;
            background: #e3f2fd;
        }

        .section-item.active {
            border-color: #2c5aa0;
            background: #2c5aa0;
            color: white;
        }

        .section-item.dragging {
            opacity: 0.5;
            transform: rotate(5deg);
        }

        .section-title {
            font-weight: 600;
            margin-bottom: 5px;
        }

        .section-desc {
            font-size: 0.9em;
            color: #666;
        }

        .section-item.active .section-desc {
            color: #e0e0e0;
        }

        .section-actions {
            position: absolute;
            top: 10px;
            right: 10px;
            display: flex;
            gap: 5px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .section-item:hover .section-actions {
            opacity: 1;
        }

        .section-item.active .section-actions {
            opacity: 1;
        }

        .btn-section-action {
            background: rgba(255,255,255,0.9);
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            transition: all 0.3s ease;
        }

        .btn-section-action:hover {
            background: white;
            transform: scale(1.1);
        }

        .btn-section-action.delete {
            color: #dc3545;
        }

        .btn-section-action.move {
            color: #17a2b8;
            cursor: grab;
        }

        .btn-section-action.move:active {
            cursor: grabbing;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
            color: #333;
        }

        .form-control {
            width: 100%;
            padding: 12px;
            border: 2px solid #e9ecef;
            border-radius: 6px;
            font-size: 14px;
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: #2c5aa0;
            box-shadow: 0 0 0 3px rgba(44, 90, 160, 0.1);
        }

        textarea.form-control {
            resize: vertical;
            min-height: 100px;
            font-family: inherit;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: #2c5aa0;
            color: white;
        }

        .btn-primary:hover {
            background: #1e3d6f;
            transform: translateY(-1px);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #545b62;
        }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-success:hover {
            background: #218838;
        }

        .btn-warning {
            background: #ffc107;
            color: #000;
        }

        .btn-warning:hover {
            background: #e0a800;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .btn-danger:hover {
            background: #c82333;
        }

        .btn-small {
            padding: 8px 16px;
            font-size: 12px;
        }

        .stats-editor, .services-editor {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            margin: 15px 0;
            border: 2px solid #e9ecef;
        }

        .stat-row, .service-row {
            display: flex;
            gap: 10px;
            margin-bottom: 12px;
            align-items: center;
        }

        .stat-row input, .service-row input {
            flex: 1;
        }

        .service-row textarea {
            flex: 2;
            min-height: 60px;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .empty-state i {
            font-size: 3em;
            margin-bottom: 15px;
            color: #ccc;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 25px;
            padding-top: 20px;
            border-top: 2px solid #f0f0f0;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 16px 20px;
            border-radius: 8px;
            background: #28a745;
            color: white;
            z-index: 10000;
            animation: slideInRight 0.3s ease;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            display: flex;
            align-items: center;
            gap: 10px;
            font-weight: 500;
        }

        .notification.error {
            background: #dc3545;
        }

        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        .tab-buttons {
            display: flex;
            background: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
        }

        .tab-button {
            flex: 1;
            padding: 16px;
            border: none;
            background: transparent;
            cursor: pointer;
            border-bottom: 3px solid transparent;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .tab-button.active {
            border-bottom-color: #2c5aa0;
            background: white;
            color: #2c5aa0;
        }

        .content-header {
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f0f0f0;
        }

        .save-indicator {
            background: #d4edda;
            color: #155724;
            padding: 10px 15px;
            border-radius: 5px;
            margin: 10px 0;
            display: none;
            align-items: center;
            gap: 8px;
        }

        .save-indicator.show {
            display: flex;
        }

        .debug-info {
            background: #f8f9fa;
            padding: 10px;
            border-radius: 5px;
            font-size: 12px;
            color: #666;
            margin-top: 15px;
        }

        .dynamic-items-controls {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }

        /* –°—Ç–∏–ª–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */
        .image-upload-container {
            margin: 15px 0;
        }

        .image-preview {
            width: 100%;
            max-width: 300px;
            height: 200px;
            border: 2px dashed #ddd;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 15px;
            overflow: hidden;
            background: #f8f9fa;
        }

        .image-preview img {
            max-width: 100%;
            max-height: 100%;
            object-fit: cover;
        }

        .image-preview.empty {
            flex-direction: column;
            color: #666;
        }

        .image-preview.empty i {
            font-size: 2em;
            margin-bottom: 10px;
            color: #ccc;
        }

        .upload-btn {
            background: #17a2b8;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: background 0.3s ease;
        }

        .upload-btn:hover {
            background: #138496;
        }

        .image-url-input {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        .image-url-input input {
            flex: 1;
        }

        .current-image-info {
            background: #e9ecef;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
            font-size: 12px;
            color: #666;
        }

        .image-actions {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        /* –°—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∫—Ü–∏–∏ */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 10000;
            align-items: center;
            justify-content: center;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: white;
            padding: 30px;
            border-radius: 12px;
            width: 90%;
            max-width: 500px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid #e9ecef;
        }

        .modal-header h3 {
            margin: 0;
            color: #2c5aa0;
        }

        .close-modal {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #666;
            transition: color 0.3s ease;
        }

        .close-modal:hover {
            color: #dc3545;
        }

        .section-type-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }

        .section-type-card {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: white;
        }

        .section-type-card:hover {
            border-color: #2c5aa0;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .section-type-card.active {
            border-color: #2c5aa0;
            background: #e3f2fd;
        }

        .section-type-icon {
            font-size: 2em;
            margin-bottom: 10px;
            color: #2c5aa0;
        }

        .section-type-name {
            font-weight: 600;
            margin-bottom: 5px;
        }

        .section-type-desc {
            font-size: 0.8em;
            color: #666;
        }

        .position-selector {
            margin: 20px 0;
        }

        .position-options {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
            margin-top: 10px;
        }

        .position-option {
            border: 2px solid #e9ecef;
            border-radius: 6px;
            padding: 15px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: white;
        }

        .position-option:hover {
            border-color: #2c5aa0;
        }

        .position-option.active {
            border-color: #2c5aa0;
            background: #e3f2fd;
        }

        .add-section-btn {
            width: 100%;
            margin-top: 20px;
            background: #28a745;
            color: white;
            border: none;
            padding: 15px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: background 0.3s ease;
        }

        .add-section-btn:hover {
            background: #218838;
        }

        .add-section-btn:disabled {
            background: #6c757d;
            cursor: not-allowed;
        }

        /* Drag and drop —Å—Ç–∏–ª–∏ */
        .sortable-ghost {
            opacity: 0.4;
            background: #c8ebfb;
        }

        .sortable-chosen {
            transform: rotate(5deg);
        }

        .sortable-drag {
            opacity: 0.8;
            background: #e3f2fd;
            border: 2px dashed #2c5aa0;
        }

        .drag-handle {
            cursor: grab;
            padding: 5px;
            margin-right: 10px;
            color: #666;
        }

        .drag-handle:active {
            cursor: grabbing;
        }
    </style>
</head>
<body>
    <div class="editor-container">
        <!-- –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä -->
        <div class="preview-panel">
            <div class="panel-header">
                <h2>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h2>
                <div>
                    <button class="btn btn-warning" onclick="editor.showAddSectionModal()">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å —Å–µ–∫—Ü–∏—é
                    </button>
                    <button class="btn btn-secondary" onclick="editor.safeRefresh()" style="margin-left: 10px;">
                        <i class="fas fa-sync"></i> –û–±–Ω–æ–≤–∏—Ç—å
                    </button>
                    <button class="btn btn-success" onclick="editor.saveAndExit()" style="margin-left: 10px;">
                        <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏
                    </button>
                </div>
            </div>
            
            <div class="save-indicator" id="save-indicator">
                <i class="fas fa-check-circle"></i>
                <span id="save-message">–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã</span>
            </div>

            <div class="preview-frame-container">
                <iframe class="preview-frame" id="preview-frame" src="index.html?editor=true&nocache=1"></iframe>
            </div>
        </div>

        <!-- –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —Ä–µ–¥–∞–∫—Ç–æ—Ä -->
        <div class="editor-panel">
            <div class="panel-header">
                <h2>–†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞</h2>
            </div>
            
            <div class="tab-buttons">
                <button class="tab-button active" data-tab="sections">–°–µ–∫—Ü–∏–∏</button>
                <button class="tab-button" data-tab="content">–ö–æ–Ω—Ç–µ–Ω—Ç</button>
            </div>

            <div class="panel-content" id="sections-tab">
                <div class="content-header">
                    <h3>–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h3>
                    <p style="color: #666; margin-top: 5px; font-size: 0.9em;">–ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–π—Ç–µ —Å–µ–∫—Ü–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞</p>
                </div>
                <div class="section-list" id="section-list">
                    <!-- –°–µ–∫—Ü–∏–∏ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã —á–µ—Ä–µ–∑ JS -->
                </div>
            </div>

            <div class="panel-content" id="content-tab" style="display: none;">
                <div id="content-editor">
                    <div class="empty-state">
                        <i class="fas fa-mouse-pointer"></i>
                        <p>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                        <small>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–°–µ–∫—Ü–∏–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –±–ª–æ–∫</small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∫—Ü–∏–∏ -->
    <div class="modal" id="add-section-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å–µ–∫—Ü–∏—é</h3>
                <button class="close-modal" onclick="editor.hideAddSectionModal()">&times;</button>
            </div>
            
            <div class="form-group">
                <label>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏:</label>
                <input type="text" id="new-section-name" class="form-control" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏">
            </div>

            <div class="form-group">
                <label>–¢–∏–ø —Å–µ–∫—Ü–∏–∏:</label>
                <div class="section-type-grid" id="section-type-grid">
                    <div class="section-type-card" data-type="text">
                        <div class="section-type-icon"><i class="fas fa-text-height"></i></div>
                        <div class="section-type-name">–¢–µ–∫—Å—Ç–æ–≤–∞—è</div>
                        <div class="section-type-desc">–ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫</div>
                    </div>
                    <div class="section-type-card" data-type="image">
                        <div class="section-type-icon"><i class="fas fa-image"></i></div>
                        <div class="section-type-name">–° –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º</div>
                        <div class="section-type-desc">–¢–µ–∫—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º</div>
                    </div>
                    <div class="section-type-card" data-type="features">
                        <div class="section-type-icon"><i class="fas fa-star"></i></div>
                        <div class="section-type-name">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</div>
                        <div class="section-type-desc">–°–ø–∏—Å–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤</div>
                    </div>
                    <div class="section-type-card" data-type="cta">
                        <div class="section-type-icon"><i class="fas fa-bullhorn"></i></div>
                        <div class="section-type-name">–ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é</div>
                        <div class="section-type-desc">–ö–Ω–æ–ø–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ</div>
                    </div>
                    <div class="section-type-card" data-type="contacts">
                        <div class="section-type-icon"><i class="fas fa-address-book"></i></div>
                        <div class="section-type-name">–ö–æ–Ω—Ç–∞–∫—Ç—ã</div>
                        <div class="section-type-desc">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
                    </div>
                </div>
            </div>

            <div class="form-group position-selector">
                <label>–ü–æ–∑–∏—Ü–∏—è —Å–µ–∫—Ü–∏–∏:</label>
                <div class="position-options" id="position-options">
                    <div class="position-option" data-position="start">
                        <i class="fas fa-arrow-up"></i>
                        <div>–í –Ω–∞—á–∞–ª–æ</div>
                    </div>
                    <div class="position-option" data-position="end">
                        <i class="fas fa-arrow-down"></i>
                        <div>–í –∫–æ–Ω–µ—Ü</div>
                    </div>
                    <div class="position-option" data-position="after-hero">
                        <i class="fas fa-arrow-down"></i>
                        <div>–ü–æ—Å–ª–µ –≥–µ—Ä–æ—è</div>
                    </div>
                    <div class="position-option" data-position="before-footer">
                        <i class="fas fa-arrow-up"></i>
                        <div>–ü–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º</div>
                    </div>
                </div>
            </div>

            <button class="add-section-btn" id="create-section-btn" onclick="editor.createNewSection()">
                <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å —Å–µ–∫—Ü–∏—é
            </button>
        </div>
    </div>

    <!-- –°–∫—Ä—ã—Ç—ã–π input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ -->
    <input type="file" id="image-file-input" accept="image/*" style="display: none;">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
    <script>
        class StablePageEditor {
<<<<<<< HEAD
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü

// 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
class FixedPageEditor extends StablePageEditor {
    updatePageStructure() {
        if (!this.currentData.pageStructure) {
            this.currentData.pageStructure = [];
        }
        
        // –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞ —Å–µ–∫—Ü–∏–π
        this.currentData.pageStructure = this.sections
            .filter(section => section.id !== 'footer')
            .map(section => section.id);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ç–µ—Ä –≤ –∫–æ–Ω–µ—Ü
        if (this.sections.find(s => s.id === 'footer')) {
            this.currentData.pageStructure.push('footer');
        }
        
        console.log('ÔøΩÔøΩ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', this.currentData.pageStructure);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        this.saveData();
    }

    // 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π
    saveChanges() {
        if (!this.currentSection) return;

        try {
            const formData = {};
            document.querySelectorAll('#content-editor [data-field]').forEach(input => {
                const fieldId = input.getAttribute('data-field');
                formData[fieldId] = input.value;
            });

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
            this.processSpecialFields(formData);

            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
            Object.keys(formData).forEach(fieldId => {
                if (this.currentSection.id === 'contact' && fieldId !== 'title') {
                    if (!this.currentData.contacts) this.currentData.contacts = {};
                    this.currentData.contacts[fieldId] = formData[fieldId];
                } else if (this.currentSection.id === 'footer') {
                    if (!this.currentData.footer) this.currentData.footer = {};
                    this.currentData.footer[fieldId] = formData[fieldId];
                } else {
                    // –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π
                    if (!this.currentData.content[this.currentSection.id]) {
                        this.currentData.content[this.currentSection.id] = {};
                    }
                    this.currentData.content[this.currentSection.id][fieldId] = formData[fieldId];
                }
            });

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            this.saveData();
            this.hasUnsavedChanges = false;
            this.showSaveIndicator('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
            this.showNotification('–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!', 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
            this.safeRefresh();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
            this.showNotification('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + error.message, 'error');
        }
    }

    // 3. –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    getImageEditor(field) {
        const currentImage = this.getCurrentValue(field);
        return `
            <div class="form-group image-upload-container">
                <label>${field.label}:</label>
                <div class="image-preview ${!currentImage ? 'empty' : ''}" id="image-preview-${field.id}">
                    ${currentImage ? 
                        `<img src="${currentImage}" alt="Preview">` :
                        `<i class="fas fa-image"></i><span>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</span>`
                    }
                </div>
                <div class="image-actions">
                    <button class="btn btn-primary" onclick="document.getElementById('image-file-input').setAttribute('data-field', '${field.id}'); document.getElementById('image-file-input').click()">
                        <i class="fas fa-upload"></i> –ó–∞–≥—Ä—É–∑–∏—Ç—å
                    </button>
                    <button class="btn btn-secondary" onclick="editor.promptImageUrl('${field.id}')">
                        <i class="fas fa-link"></i> –£–∫–∞–∑–∞—Ç—å URL
                    </button>
                    ${currentImage ? `
                    <button class="btn btn-danger" onclick="editor.removeImage('${field.id}')">
                        <i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å
                    </button>
                    ` : ''}
                </div>
                <input type="hidden" data-field="${field.id}" value="${currentImage}" id="image-field-${field.id}">
            </div>
        `;
    }

    removeImage(fieldId) {
        const field = document.querySelector(`[data-field="${fieldId}"]`);
        if (field) {
            field.value = '';
            const preview = document.getElementById(`image-preview-${fieldId}`);
            preview.innerHTML = '<i class="fas fa-image"></i><span>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</span>';
            preview.classList.add('empty');
            this.hasUnsavedChanges = true;
            this.showNotification('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
        }
    }

    // 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    handleImageUpload(file) {
        const fieldId = document.getElementById('image-file-input').getAttribute('data-field');
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        // –î–ª—è –¥–µ–º–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º Object URL
        const imageUrl = URL.createObjectURL(file);
        this.updateImageField(imageUrl, fieldId);
        this.showNotification('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ (–¥–µ–º–æ)');
    }

    updateImageField(url, fieldId) {
        const field = document.querySelector(`[data-field="${fieldId}"]`);
        if (field) {
            field.value = url;
            const preview = document.getElementById(`image-preview-${fieldId}`);
            preview.innerHTML = `<img src="${url}" alt="Preview">`;
            preview.classList.remove('empty');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            const actions = preview.closest('.image-upload-container').querySelector('.image-actions');
            if (!actions.querySelector('.btn-danger')) {
                const deleteBtn = document.createElement('button');
                deleteBtn.className = 'btn btn-danger';
                deleteBtn.innerHTML = '<i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å';
                deleteBtn.onclick = () => this.removeImage(fieldId);
                actions.appendChild(deleteBtn);
            }
            
            this.hasUnsavedChanges = true;
        }
    }

    // 5. –£–ª—É—á—à–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π
    renderCustomSection(container, sectionData) {
        const sectionElement = document.createElement('section');
        sectionElement.className = `custom-section ${sectionData.type}-section`;
        sectionElement.id = sectionData.id;
        sectionElement.setAttribute('data-section-id', sectionData.id);

        console.log('üé® Rendering custom section:', sectionData.id, sectionData.type, sectionData);

        switch (sectionData.type) {
            case 'text':
                sectionElement.innerHTML = `
                    <div class="container">
                        <h2 class="section-title">${sectionData.title || ''}</h2>
                        <div class="section-content">
                            <p>${sectionData.content || ''}</p>
                        </div>
                    </div>
                `;
                break;
            case 'image':
                sectionElement.innerHTML = `
                    <div class="container">
                        <div class="section-content" style="display: flex; gap: 30px; align-items: center; flex-wrap: wrap;">
                            <div class="text-content" style="flex: 1; min-width: 300px;">
                                <h2 class="section-title">${sectionData.title || ''}</h2>
                                <p>${sectionData.content || ''}</p>
                            </div>
                            <div class="image-content" style="flex: 1; min-width: 300px; text-align: center;">
                                ${sectionData.image ? `<img src="${sectionData.image}" alt="${sectionData.title}" style="max-width: 100%; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">` : ''}
                            </div>
                        </div>
                    </div>
                `;
                break;
            case 'features':
                sectionElement.innerHTML = `
                    <div class="container">
                        <h2 class="section-title">${sectionData.title || ''}</h2>
                        <div class="features-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 30px; margin-top: 40px;">
                            ${(sectionData.features || []).map(feature => `
                                <div class="feature-item" style="text-align: center; padding: 30px 20px; background: white; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.1); transition: transform 0.3s ease;">
                                    <div class="feature-icon" style="font-size: 3em; margin-bottom: 20px; color: #2c5aa0;">
                                        <i class="${feature.icon || 'fas fa-star'}"></i>
                                    </div>
                                    <h3 style="margin-bottom: 15px; color: #333;">${feature.title || ''}</h3>
                                    <p style="color: #666; line-height: 1.6;">${feature.description || ''}</p>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                `;
                break;
            case 'cta':
                sectionElement.innerHTML = `
                    <div class="container">
                        <div class="cta-section" style="text-align: center; padding: 60px 40px; background: linear-gradient(135deg, #2c5aa0, #4a7bc8); color: white; border-radius: 15px; margin: 40px 0;">
                            <h2 style="margin-bottom: 20px; font-size: 2.5em;">${sectionData.title || ''}</h2>
                            <p style="margin-bottom: 30px; font-size: 1.2em; opacity: 0.9;">${sectionData.description || ''}</p>
                            ${sectionData.buttonText ? `
                                <a href="${sectionData.buttonUrl || '#'}" class="cta-button" style="background: white; color: #2c5aa0; padding: 15px 40px; border-radius: 30px; text-decoration: none; font-weight: 600; display: inline-block; font-size: 1.1em; transition: all 0.3s ease;">
                                    ${sectionData.buttonText}
                                </a>
                            ` : ''}
                        </div>
                    </div>
                `;
                break;
            case 'contacts':
                sectionElement.innerHTML = `
                    <div class="container">
                        <h2 class="section-title">${sectionData.title || '–ö–æ–Ω—Ç–∞–∫—Ç—ã'}</h2>
                        <div class="contact-content" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 40px; margin-top: 40px;">
                            <div class="contact-info" style="background: white; padding: 30px; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">
                                <h3 style="margin-bottom: 20px; color: #2c5aa0;">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                                ${sectionData.phone ? `
                                    <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-phone" style="color: #2c5aa0;"></i>
                                        <span style="font-weight: 500;">${sectionData.phone}</span>
                                    </div>
                                ` : ''}
                                ${sectionData.email ? `
                                    <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-envelope" style="color: #2c5aa0;"></i>
                                        <span style="font-weight: 500;">${sectionData.email}</span>
                                    </div>
                                ` : ''}
                                ${sectionData.address ? `
                                    <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-map-marker-alt" style="color: #2c5aa0;"></i>
                                        <span style="font-weight: 500;">${sectionData.address}</span>
                                    </div>
                                ` : ''}
                                ${sectionData.hours ? `
                                    <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-clock" style="color: #2c5aa0;"></i>
                                        <span style="font-weight: 500;">${sectionData.hours}</span>
                                    </div>
                                ` : ''}
                            </div>
                        </div>
                    </div>
                `;
                break;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        sectionElement.style.padding = '80px 0';
        sectionElement.style.background = sectionData.type === 'cta' ? 'transparent' : '#f8f9fa';
        
        if (sectionData.type === 'cta') {
            sectionElement.style.padding = '40px 0';
        }

        container.appendChild(sectionElement);
    }
}

// –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π
window.editor = new FixedPageEditor();
=======
>>>>>>> b00c611
            constructor() {
                this.currentSection = null;
                this.currentData = {};
                this.hasUnsavedChanges = false;
                this.selectedSectionType = 'text';
                this.selectedPosition = 'end';
                this.sections = [];
                this.sortable = null;
                this.init();
            }

            init() {
                console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...');
                this.loadCurrentData();
                this.setupFrameListener();
                this.setupTabHandlers();
                this.setupImageUpload();
                this.setupSectionModal();
                this.loadSectionsList();
                this.initSortable();
                
                // –ê–≤—Ç–æ-–≤—ã–±–æ—Ä –ø–µ—Ä–≤–æ–π —Å–µ–∫—Ü–∏–∏
                setTimeout(() => {
                    if (this.sections.length > 0) {
                        this.selectSection(this.sections[0].id);
                    }
                }, 1000);
            }

            initSortable() {
                const sectionList = document.getElementById('section-list');
                this.sortable = new Sortable(sectionList, {
                    animation: 150,
                    ghostClass: 'sortable-ghost',
                    chosenClass: 'sortable-chosen',
                    dragClass: 'sortable-drag',
                    handle: '.drag-handle',
                    onEnd: (evt) => {
                        this.onSectionReorder(evt.oldIndex, evt.newIndex);
                    }
                });
            }

            onSectionReorder(oldIndex, newIndex) {
                if (oldIndex === newIndex) return;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –≤ –¥–∞–Ω–Ω—ã—Ö
                const movedSection = this.sections[oldIndex];
                this.sections.splice(oldIndex, 1);
                this.sections.splice(newIndex, 0, movedSection);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                this.updatePageStructure();
                this.hasUnsavedChanges = true;
                this.showNotification('–ü–æ—Ä—è–¥–æ–∫ —Å–µ–∫—Ü–∏–π –∏–∑–º–µ–Ω–µ–Ω');
            }

            updatePageStructure() {
                if (!this.currentData.pageStructure) {
                    this.currentData.pageStructure = [];
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º pageStructure –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞ —Å–µ–∫—Ü–∏–π
                this.currentData.pageStructure = this.sections
                    .filter(section => section.id !== 'footer')
                    .map(section => section.id);
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ç–µ—Ä –≤ –∫–æ–Ω–µ—Ü
                if (this.sections.find(s => s.id === 'footer')) {
                    this.currentData.pageStructure.push('footer');
                }
                
                console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', this.currentData.pageStructure);
            }

            loadCurrentData() {
                if (typeof window.dataManager !== 'undefined' && window.dataManager) {
                    this.currentData = window.dataManager.getData() || {};
                    console.log('üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ DataManager:', this.currentData);
                } else {
                    console.warn('‚ö†Ô∏è DataManager –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
                    this.currentData = this.getLocalData();
                }
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ–∫—Ü–∏–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö
                this.loadSectionsFromData();
            }

            getLocalData() {
                const localData = localStorage.getItem('worldtravel_data');
                if (localData) {
                    return JSON.parse(localData);
                }
                return {
                    content: {
                        hero: { 
                            id: 'hero',
                            type: 'hero',
                            name: '–ì–ª–∞–≤–Ω—ã–π –±–∞–Ω–Ω–µ—Ä',
                            title: '–û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä —Å WorldTravel', 
                            subtitle: '–ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –û—Ç —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–ª—è–∂–µ–π –¥–æ –≥–æ—Ä–Ω—ã—Ö –≤–µ—Ä—à–∏–Ω - –≤–∞—à–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å.',
                            image: 'images/travel-placeholder.svg'
                        },
                        about: { 
                            id: 'about',
                            type: 'about',
                            name: '–û –∫–æ–º–ø–∞–Ω–∏–∏',
                            title: '–û –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏', 
                            description: 'WorldTravel - —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø–æ —Ç—É—Ä–∏–∑–º—É —Å –±–æ–ª–µ–µ —á–µ–º 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã. –ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö travel-—Ä–µ—à–µ–Ω–∏–π.',
                            image: 'images/travel-placeholder.svg',
                            stats: [
                                { value: '5000', label: '–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤' },
                                { value: '50', label: '–°—Ç—Ä–∞–Ω –º–∏—Ä–∞' },
                                { value: '10 –ª–µ—Ç', label: '–û–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã' }
                            ]
                        },
                        services: { 
                            id: 'services',
                            type: 'services',
                            name: '–£—Å–ª—É–≥–∏',
                            title: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏',
                            services: [
                                { title: '–ê–≤–∏–∞–±–∏–ª–µ—Ç—ã', description: '–ü–æ–¥–±–æ—Ä –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª—É—á—à–∏—Ö –∞–≤–∏–∞–ø–µ—Ä–µ–ª–µ—Ç–æ–≤ –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º', icon: 'fas fa-plane' },
                                { title: '–û—Ç–µ–ª–∏', description: '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–µ–ª–µ–π –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –∫–æ–º—Ñ–æ—Ä—Ç–∞ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É', icon: 'fas fa-hotel' },
                                { title: '–¢—É—Ä—ã', description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∏ –≥—Ä—É–ø–ø–æ–≤—ã–µ —Ç—É—Ä—ã —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –≥–∏–¥–∞–º–∏', icon: 'fas fa-map-marked-alt' },
                                { title: '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ', description: '–ü–æ–ª–Ω–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', icon: 'fas fa-shield-alt' }
                            ]
                        },
                        destinations: { 
                            id: 'destinations',
                            type: 'destinations',
                            name: '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                            title: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è', 
                            subtitle: '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –ª—É—á—à–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏—Ä–∞ —Å –Ω–∞—à–∏–º–∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º–∏ —Ç—É—Ä—ã' 
                        },
                        contact: { 
                            id: 'contact',
                            type: 'contact',
                            name: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
                            title: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏' 
                        }
                    },
                    footer: { 
                        id: 'footer',
                        type: 'footer',
                        name: '–§—É—Ç–µ—Ä',
                        description: '–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –≤ –º–∏—Ä–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π. –ú—ã –¥–µ–ª–∞–µ–º –≤–∞—à–∏ –º–µ—á—Ç—ã –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é.',
                        copyright: '&copy; 2024 WorldTravel. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.'
                    },
                    contacts: {
                        email: 'info@worldtravel.com',
                        phone: '+7 (999) 123-45-67',
                        address: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è, 15',
                        hours: '–ü–Ω-–ü—Ç: 9:00-18:00'
                    },
                    settings: {
                        siteTitle: 'WorldTravel - –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
                        companyName: 'WorldTravel'
                    },
                    pageStructure: ['hero', 'about', 'services', 'destinations', 'contact'],
                    lastUpdate: new Date().toISOString()
                };
            }

            loadSectionsFromData() {
                this.sections = [];
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                const pageStructure = this.currentData.pageStructure || ['hero', 'about', 'services', 'destinations', 'contact'];
                
                pageStructure.forEach(sectionId => {
                    if (this.currentData.content && this.currentData.content[sectionId]) {
                        const sectionData = this.currentData.content[sectionId];
                        this.sections.push({
                            id: sectionId,
                            type: sectionData.type || sectionId,
                            name: sectionData.name || this.getSectionName(sectionId),
                            description: this.getSectionDescription(sectionId),
                            fields: this.getSectionFields(sectionId)
                        });
                    }
                });

                // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ç–µ—Ä
                if (this.currentData.footer) {
                    this.sections.push({
                        id: 'footer',
                        type: 'footer',
                        name: '–§—É—Ç–µ—Ä',
                        description: '–¢–µ–∫—Å—Ç –≤ –ø–æ–¥–≤–∞–ª–µ —Å–∞–π—Ç–∞',
                        fields: [
                            { id: 'description', type: 'textarea', label: '–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏', selector: '.footer-section:first-child p:first-child' },
                            { id: 'copyright', type: 'text', label: '–¢–µ–∫—Å—Ç –∫–æ–ø–∏—Ä–∞–π—Ç–∞', selector: '.footer-bottom p' }
                        ]
                    });
                }
            }

            getSectionName(sectionId) {
                const names = {
                    'hero': '–ì–ª–∞–≤–Ω—ã–π –±–∞–Ω–Ω–µ—Ä',
                    'about': '–û –∫–æ–º–ø–∞–Ω–∏–∏',
                    'services': '–£—Å–ª—É–≥–∏',
                    'destinations': '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                    'contact': '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
                    'footer': '–§—É—Ç–µ—Ä'
                };
                return names[sectionId] || sectionId;
            }

            getSectionDescription(sectionId) {
                const descriptions = {
                    'hero': '–ó–∞–≥–æ–ª–æ–≤–æ–∫, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ',
                    'about': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
                    'services': '–°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –∫–æ–º–ø–∞–Ω–∏–∏',
                    'destinations': '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                    'contact': '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                    'footer': '–¢–µ–∫—Å—Ç –≤ –ø–æ–¥–≤–∞–ª–µ —Å–∞–π—Ç–∞'
                };
                return descriptions[sectionId] || '–°–µ–∫—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã';
            }

            getSectionFields(sectionId) {
                const fields = {
                    'hero': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫', selector: '#home h1, .hero h1, section:first-of-type h1' },
                        { id: 'subtitle', type: 'textarea', label: '–û–ø–∏—Å–∞–Ω–∏–µ', selector: '#home p, .hero p, section:first-of-type p' },
                        { id: 'image', type: 'image', label: '–§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', selector: '.hero-image img, .image-placeholder img' }
                    ],
                    'about': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫', selector: '#about .section-title, .about .section-title, section:nth-of-type(2) .section-title' },
                        { id: 'description', type: 'textarea', label: '–û–ø–∏—Å–∞–Ω–∏–µ', selector: '.about-text p, #about p, .about p, section:nth-of-type(2) p' },
                        { id: 'image', type: 'image', label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏', selector: '.about-image img, .image-placeholder img' },
                        { id: 'stats', type: 'stats', label: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' }
                    ],
                    'services': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫', selector: '#services .section-title, .services .section-title, section:nth-of-type(3) .section-title' },
                        { id: 'services', type: 'services', label: '–£—Å–ª—É–≥–∏' }
                    ],
                    'destinations': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫', selector: '#destinations .section-title, .destinations .section-title, section:nth-of-type(4) .section-title' },
                        { id: 'subtitle', type: 'textarea', label: '–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫', selector: '.destinations .section-subtitle, .section-subtitle, section:nth-of-type(4) .section-subtitle' }
                    ],
                    'contact': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫', selector: '#contact .section-title, .contact .section-title, section:nth-of-type(5) .section-title' },
                        { id: 'email', type: 'text', label: 'Email', selector: '.contact-info .contact-item:nth-child(1) p, .contact-item:first-child p, .footer-section p:nth-child(2)' },
                        { id: 'phone', type: 'text', label: '–¢–µ–ª–µ—Ñ–æ–Ω', selector: '.contact-info .contact-item:nth-child(2) p, .contact-item:nth-child(2) p, .footer-section p:nth-child(3)' },
                        { id: 'address', type: 'text', label: '–ê–¥—Ä–µ—Å', selector: '.contact-info .contact-item:nth-child(3) p, .contact-item:nth-child(3) p, .footer-section p:nth-child(4)' },
                        { id: 'hours', type: 'text', label: '–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã', selector: '.contact-info .contact-item:nth-child(4) p, .contact-item:nth-child(4) p' }
                    ]
                };
                return fields[sectionId] || [];
            }

            setupTabHandlers() {
                const tabButtons = document.querySelectorAll('.tab-button');
                tabButtons.forEach(button => {
                    button.addEventListener('click', (e) => {
                        const tabName = e.target.getAttribute('data-tab');
                        if (tabName) {
                            this.showTab(tabName);
                        }
                    });
                });
            }

            setupImageUpload() {
                const fileInput = document.getElementById('image-file-input');
                fileInput.addEventListener('change', (e) => {
                    const file = e.target.files[0];
                    if (file) {
                        this.handleImageUpload(file);
                    }
                });
            }

            setupSectionModal() {
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å–µ–∫—Ü–∏–∏
                document.querySelectorAll('.section-type-card').forEach(card => {
                    card.addEventListener('click', () => {
                        document.querySelectorAll('.section-type-card').forEach(c => c.classList.remove('active'));
                        card.classList.add('active');
                        this.selectedSectionType = card.getAttribute('data-type');
                    });
                });

                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏
                document.querySelectorAll('.position-option').forEach(option => {
                    option.addEventListener('click', () => {
                        document.querySelectorAll('.position-option').forEach(o => o.classList.remove('active'));
                        option.classList.add('active');
                        this.selectedPosition = option.getAttribute('data-position');
                    });
                });

                // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —Ç–∏–ø –∏ –ø–æ–∑–∏—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                document.querySelector('.section-type-card').classList.add('active');
                document.querySelector('.position-option').classList.add('active');
            }

            loadSectionsList() {
                const container = document.getElementById('section-list');
                container.innerHTML = '';

                if (this.sections.length === 0) {
                    container.innerHTML = `
                        <div class="empty-state">
                            <i class="fas fa-inbox"></i>
                            <p>–°–µ–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                            <small>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Å–µ–∫—Ü–∏—é –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —Å–µ–∫—Ü–∏—é"</small>
                        </div>
                    `;
                    return;
                }

                this.sections.forEach(section => {
                    const sectionElement = document.createElement('div');
                    sectionElement.className = `section-item ${this.currentSection && this.currentSection.id === section.id ? 'active' : ''}`;
                    sectionElement.setAttribute('data-section', section.id);
                    
                    sectionElement.innerHTML = `
                        <div class="section-actions">
                            <button class="btn-section-action move drag-handle" title="–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å">
                                <i class="fas fa-arrows-alt"></i>
                            </button>
                            <button class="btn-section-action delete" title="–£–¥–∞–ª–∏—Ç—å" onclick="editor.deleteSection('${section.id}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                        <div class="section-title">${section.name}</div>
                        <div class="section-desc">${section.description}</div>
                    `;

                    sectionElement.addEventListener('click', (e) => {
                        if (!e.target.closest('.section-actions')) {
                            this.selectSection(section.id);
                        }
                    });

                    container.appendChild(sectionElement);
                });
            }

            showAddSectionModal() {
                document.getElementById('add-section-modal').classList.add('active');
                document.getElementById('new-section-name').value = '';
                document.getElementById('new-section-name').focus();
            }

            hideAddSectionModal() {
                document.getElementById('add-section-modal').classList.remove('active');
            }

            createNewSection() {
                const name = document.getElementById('new-section-name').value.trim();
                if (!name) {
                    this.showNotification('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏', 'error');
                    return;
                }

                const newSectionId = 'section-' + Date.now();
                const newSection = {
                    id: newSectionId,
                    type: this.selectedSectionType,
                    name: name,
                    description: this.getSectionTypeDescription(this.selectedSectionType),
                    fields: this.getSectionTypeFields(this.selectedSectionType)
                };

                // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                this.addSectionToStructure(newSectionId, this.selectedPosition);

                // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
                if (!this.currentData.content) {
                    this.currentData.content = {};
                }
                this.currentData.content[newSectionId] = {
                    id: newSectionId,
                    type: this.selectedSectionType,
                    name: name,
                    title: name,
                    ...this.getDefaultSectionData(this.selectedSectionType)
                };

                // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é –≤ —Å–ø–∏—Å–æ–∫
                this.sections.splice(this.getInsertIndex(this.selectedPosition), 0, newSection);

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                this.saveData();
                this.loadSectionsList();
                this.hideAddSectionModal();
                this.selectSection(newSectionId);
                
                this.showNotification(`–°–µ–∫—Ü–∏—è "${name}" —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!`, 'success');
            }

            getSectionTypeDescription(type) {
                const descriptions = {
                    'text': '–ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫',
                    'image': '–¢–µ–∫—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º',
                    'features': '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π',
                    'cta': '–ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é —Å –∫–Ω–æ–ø–∫–æ–π',
                    'contacts': '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
                };
                return descriptions[type] || '–ù–æ–≤–∞—è —Å–µ–∫—Ü–∏—è';
            }

            getSectionTypeFields(type) {
                const fields = {
                    'text': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫' },
                        { id: 'content', type: 'textarea', label: '–¢–µ–∫—Å—Ç' }
                    ],
                    'image': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫' },
                        { id: 'content', type: 'textarea', label: '–¢–µ–∫—Å—Ç' },
                        { id: 'image', type: 'image', label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' }
                    ],
                    'features': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫' },
                        { id: 'features', type: 'features', label: '–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏' }
                    ],
                    'cta': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫' },
                        { id: 'description', type: 'textarea', label: '–û–ø–∏—Å–∞–Ω–∏–µ' },
                        { id: 'buttonText', type: 'text', label: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏' },
                        { id: 'buttonUrl', type: 'text', label: '–°—Å—ã–ª–∫–∞ –∫–Ω–æ–ø–∫–∏' }
                    ],
                    'contacts': [
                        { id: 'title', type: 'text', label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫' },
                        { id: 'phone', type: 'text', label: '–¢–µ–ª–µ—Ñ–æ–Ω' },
                        { id: 'email', type: 'text', label: 'Email' },
                        { id: 'address', type: 'text', label: '–ê–¥—Ä–µ—Å' },
                        { id: 'hours', type: 'text', label: '–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã' }
                    ]
                };
                return fields[type] || [];
            }

            getDefaultSectionData(type) {
                const defaults = {
                    'text': {
                        title: '–ù–æ–≤–∞—è —Ç–µ–∫—Å—Ç–æ–≤–∞—è —Å–µ–∫—Ü–∏—è',
                        content: '–¢–µ–∫—Å—Ç –Ω–æ–≤–æ–π —Å–µ–∫—Ü–∏–∏...'
                    },
                    'image': {
                        title: '–°–µ–∫—Ü–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º',
                        content: '–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º...',
                        image: 'images/travel-placeholder.svg'
                    },
                    'features': {
                        title: '–ù–∞—à–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏',
                        features: [
                            { title: '–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 1', description: '–û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏', icon: 'fas fa-star' },
                            { title: '–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 2', description: '–û–ø–∏—Å–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏', icon: 'fas fa-check' }
                        ]
                    },
                    'cta': {
                        title: '–ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é',
                        description: '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∑—ã–≤–∞ –∫ –¥–µ–π—Å—Ç–≤–∏—é...',
                        buttonText: '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ',
                        buttonUrl: '#'
                    },
                    'contacts': {
                        title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
                        phone: '+7 (999) 123-45-67',
                        email: 'info@worldtravel.com',
                        address: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è, 15',
                        hours: '–ü–Ω-–ü—Ç: 9:00-18:00'
                    }
                };
                return defaults[type] || {};
            }

            addSectionToStructure(sectionId, position) {
                if (!this.currentData.pageStructure) {
                    this.currentData.pageStructure = ['hero', 'about', 'services', 'destinations', 'contact'];
                }

                const structure = this.currentData.pageStructure;
                let insertIndex = structure.length;

                switch (position) {
                    case 'start':
                        insertIndex = 0;
                        break;
                    case 'after-hero':
                        const heroIndex = structure.indexOf('hero');
                        insertIndex = heroIndex !== -1 ? heroIndex + 1 : 1;
                        break;
                    case 'before-footer':
                        insertIndex = structure.length - 1;
                        break;
                    case 'end':
                    default:
                        insertIndex = structure.length;
                        break;
                }

                structure.splice(insertIndex, 0, sectionId);
            }

            getInsertIndex(position) {
                const structure = this.currentData.pageStructure || ['hero', 'about', 'services', 'destinations', 'contact'];
                
                switch (position) {
                    case 'start':
                        return 0;
                    case 'after-hero':
                        const heroIndex = structure.indexOf('hero');
                        return heroIndex !== -1 ? heroIndex + 1 : 1;
                    case 'before-footer':
                        return structure.length - 1;
                    case 'end':
                    default:
                        return structure.length;
                }
            }

            deleteSection(sectionId) {
                if (!confirm(`–£–¥–∞–ª–∏—Ç—å —Å–µ–∫—Ü–∏—é "${this.getSectionName(sectionId)}"?`)) {
                    return;
                }

                // –£–¥–∞–ª—è–µ–º –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                if (this.currentData.pageStructure) {
                    this.currentData.pageStructure = this.currentData.pageStructure.filter(id => id !== sectionId);
                }

                // –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
                if (this.currentData.content && this.currentData.content[sectionId]) {
                    delete this.currentData.content[sectionId];
                }

                // –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞
                this.sections = this.sections.filter(s => s.id !== sectionId);

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                this.saveData();
                this.loadSectionsList();

                if (this.currentSection && this.currentSection.id === sectionId) {
                    this.currentSection = null;
                    this.showContentEditor();
                }

                this.showNotification('–°–µ–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞', 'success');
            }

            setupFrameListener() {
                const frame = document.getElementById('preview-frame');
                frame.onload = () => {
                    console.log('‚úÖ –§—Ä–µ–π–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω');
                    if (this.currentSection) {
                        setTimeout(() => {
                            this.selectSection(this.currentSection.id);
                        }, 500);
                    }
                };
            }

            selectSection(sectionId) {
                console.log('üéØ –í—ã–±–æ—Ä —Å–µ–∫—Ü–∏–∏:', sectionId);
                
                document.querySelectorAll('.section-item').forEach(item => {
                    item.classList.remove('active');
                });

                const selectedItem = document.querySelector(`[data-section="${sectionId}"]`);
                if (selectedItem) {
                    selectedItem.classList.add('active');
                }

                this.currentSection = this.sections.find(s => s.id === sectionId);
                this.showContentEditor();
                this.showTab('content');
            }

            showTab(tabName) {
                console.log('üìë –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É:', tabName);
                
                document.querySelectorAll('.panel-content').forEach(tab => {
                    tab.style.display = 'none';
                });
                
                const targetTab = document.getElementById(tabName + '-tab');
                if (targetTab) {
                    targetTab.style.display = 'block';
                }
                
                document.querySelectorAll('.tab-button').forEach(btn => {
                    btn.classList.remove('active');
                });
                
                const targetButton = document.querySelector(`[data-tab="${tabName}"]`);
                if (targetButton) {
                    targetButton.classList.add('active');
                }
            }

            showContentEditor() {
                if (!this.currentSection) {
                    const editor = document.getElementById('content-editor');
                    editor.innerHTML = `
                        <div class="empty-state">
                            <i class="fas fa-mouse-pointer"></i>
                            <p>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                            <small>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–°–µ–∫—Ü–∏–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –±–ª–æ–∫</small>
                        </div>
                    `;
                    return;
                }

                const editor = document.getElementById('content-editor');
                
                let editorHTML = `
                    <div class="content-header">
                        <h3>${this.currentSection.name}</h3>
                        <p style="color: #666; margin-top: 5px; font-size: 0.9em;">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–µ–∫—Ü–∏–∏</p>
                    </div>
                `;

                this.currentSection.fields.forEach(field => {
                    if (field.type === 'stats') {
                        editorHTML += this.getStatsEditor();
                    } else if (field.type === 'services') {
                        editorHTML += this.getServicesEditor();
                    } else if (field.type === 'features') {
                        editorHTML += this.getFeaturesEditor();
                    } else if (field.type === 'image') {
                        editorHTML += this.getImageEditor(field);
                    } else {
                        const currentValue = this.getCurrentValue(field);
                        editorHTML += `
                            <div class="form-group">
                                <label>${field.label}:</label>
                                ${field.type === 'textarea' ? 
                                    `<textarea class="form-control" data-field="${field.id}" placeholder="–í–≤–µ–¥–∏—Ç–µ ${field.label.toLowerCase()}...">${currentValue}</textarea>` :
                                    `<input type="text" class="form-control" data-field="${field.id}" value="${currentValue}" placeholder="–í–≤–µ–¥–∏—Ç–µ ${field.label.toLowerCase()}...">`
                                }
                            </div>
                        `;
                    }
                });

                editorHTML += `
                    <div class="action-buttons">
                        <button class="btn btn-primary" id="save-changes-btn">
                            <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                        </button>
                        <button class="btn btn-secondary" id="back-to-sections-btn">
                            <i class="fas fa-arrow-left"></i> –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
                        </button>
                    </div>
                    
                    <div class="debug-info">
                        <strong>–û—Ç–ª–∞–¥–∫–∞:</strong> –°–µ–∫—Ü–∏—è: ${this.currentSection.id} | –¢–∏–ø: ${this.currentSection.type} | –ü–æ–ª—è: ${this.currentSection.fields.length}
                    </div>
                `;

                editor.innerHTML = editorHTML;
                
                document.getElementById('save-changes-btn').addEventListener('click', () => {
                    this.saveChanges();
                });
                
                document.getElementById('back-to-sections-btn').addEventListener('click', () => {
                    this.showTab('sections');
                });
                
                this.hasUnsavedChanges = false;
            }

            getCurrentValue(field) {
                // –î–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                if (this.currentSection.id === 'contact' && field.id !== 'title') {
                    if (this.currentData.contacts && this.currentData.contacts[field.id]) {
                        return this.escapeHtml(this.currentData.contacts[field.id]);
                    }
                }
                
                // –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                if (this.currentSection.type === 'contacts' && field.id !== 'title') {
                    const sectionData = this.currentData.content[this.currentSection.id];
                    if (sectionData && sectionData[field.id]) {
                        return this.escapeHtml(sectionData[field.id]);
                    }
                }
                
                // –î–ª—è —Ñ—É—Ç–µ—Ä–∞
                if (this.currentSection.id === 'footer') {
                    if (this.currentData.footer && this.currentData.footer[field.id]) {
                        return this.escapeHtml(this.currentData.footer[field.id]);
                    }
                }
                
                // –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π
                if (this.currentData.content && this.currentData.content[this.currentSection.id]) {
                    const sectionData = this.currentData.content[this.currentSection.id];
                    if (sectionData[field.id]) {
                        return this.escapeHtml(sectionData[field.id]);
                    }
                }
                
                return '';
            }

            getStatsEditor() {
                const stats = this.currentData.content?.about?.stats || [];
                let html = '<div class="stats-editor"><h4>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h4>';
                
                stats.forEach((stat, index) => {
                    html += `
                        <div class="stat-row">
                            <input type="text" class="form-control" data-stat="${index}" data-field="value" value="${stat.value}" placeholder="–ó–Ω–∞—á–µ–Ω–∏–µ">
                            <input type="text" class="form-control" data-stat="${index}" data-field="label" value="${stat.label}" placeholder="–ü–æ–¥–ø–∏—Å—å">
                            <button class="btn btn-danger btn-small" onclick="editor.removeStat(${index})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    `;
                });
                
                html += `
                    <button class="btn btn-success btn-small" onclick="editor.addStat()">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    </button>
                </div>`;
                
                return html;
            }

            getServicesEditor() {
                const services = this.currentData.content?.services?.services || [];
                let html = '<div class="services-editor"><h4>–£—Å–ª—É–≥–∏</h4>';
                
                services.forEach((service, index) => {
                    html += `
                        <div class="service-row">
                            <input type="text" class="form-control" data-service="${index}" data-field="title" value="${service.title}" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏">
                            <textarea class="form-control" data-service="${index}" data-field="description" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏">${service.description}</textarea>
                            <input type="text" class="form-control" data-service="${index}" data-field="icon" value="${service.icon}" placeholder="–ò–∫–æ–Ω–∫–∞ (fas fa-...)">
                            <button class="btn btn-danger btn-small" onclick="editor.removeService(${index})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    `;
                });
                
                html += `
                    <button class="btn btn-success btn-small" onclick="editor.addService()">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É
                    </button>
                </div>`;
                
                return html;
            }

            getFeaturesEditor() {
                const features = this.currentData.content?.[this.currentSection.id]?.features || [];
                let html = '<div class="stats-editor"><h4>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</h4>';
                
                features.forEach((feature, index) => {
                    html += `
                        <div class="stat-row">
                            <input type="text" class="form-control" data-feature="${index}" data-field="title" value="${feature.title}" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏">
                            <textarea class="form-control" data-feature="${index}" data-field="description" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏">${feature.description}</textarea>
                            <input type="text" class="form-control" data-feature="${index}" data-field="icon" value="${feature.icon}" placeholder="–ò–∫–æ–Ω–∫–∞">
                            <button class="btn btn-danger btn-small" onclick="editor.removeFeature(${index})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    `;
                });
                
                html += `
                    <button class="btn btn-success btn-small" onclick="editor.addFeature()">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å
                    </button>
                </div>`;
                
                return html;
            }

            getImageEditor(field) {
                const currentImage = this.getCurrentValue(field);
                return `
                    <div class="form-group image-upload-container">
                        <label>${field.label}:</label>
                        <div class="image-preview ${!currentImage ? 'empty' : ''}">
                            ${currentImage ? 
                                `<img src="${currentImage}" alt="Preview">` :
                                `<i class="fas fa-image"></i><span>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</span>`
                            }
                        </div>
                        <div class="image-actions">
                            <button class="btn btn-primary" onclick="document.getElementById('image-file-input').click()">
                                <i class="fas fa-upload"></i> –ó–∞–≥—Ä—É–∑–∏—Ç—å
                            </button>
                            <button class="btn btn-secondary" onclick="editor.promptImageUrl('${field.id}')">
                                <i class="fas fa-link"></i> –£–∫–∞–∑–∞—Ç—å URL
                            </button>
                        </div>
                        <input type="hidden" data-field="${field.id}" value="${currentImage}">
                    </div>
                `;
            }

            handleImageUpload(file) {
                // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                // –î–ª—è –¥–µ–º–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º Object URL
                const imageUrl = URL.createObjectURL(file);
                this.updateImageField(imageUrl);
                this.showNotification('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ (–¥–µ–º–æ)');
            }

            promptImageUrl(fieldId) {
                const url = prompt('–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
                if (url) {
                    this.updateImageField(url, fieldId);
                }
            }

            updateImageField(url, fieldId = null) {
                const field = fieldId ? 
                    document.querySelector(`[data-field="${fieldId}"]`) :
                    document.querySelector('[data-field="image"]');
                
                if (field) {
                    field.value = url;
                    const preview = field.closest('.image-upload-container').querySelector('.image-preview');
                    preview.innerHTML = `<img src="${url}" alt="Preview">`;
                    preview.classList.remove('empty');
                    this.hasUnsavedChanges = true;
                }
            }

            addStat() {
                if (!this.currentData.content.about) this.currentData.content.about = {};
                if (!this.currentData.content.about.stats) this.currentData.content.about.stats = [];
                
                this.currentData.content.about.stats.push({ value: '0', label: '–ù–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' });
                this.showContentEditor();
                this.hasUnsavedChanges = true;
            }

            removeStat(index) {
                if (this.currentData.content?.about?.stats) {
                    this.currentData.content.about.stats.splice(index, 1);
                    this.showContentEditor();
                    this.hasUnsavedChanges = true;
                }
            }

            addService() {
                if (!this.currentData.content.services) this.currentData.content.services = {};
                if (!this.currentData.content.services.services) this.currentData.content.services.services = [];
                
                this.currentData.content.services.services.push({ 
                    title: '–ù–æ–≤–∞—è —É—Å–ª—É–≥–∞', 
                    description: '–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏',
                    icon: 'fas fa-star'
                });
                this.showContentEditor();
                this.hasUnsavedChanges = true;
            }

            removeService(index) {
                if (this.currentData.content?.services?.services) {
                    this.currentData.content.services.services.splice(index, 1);
                    this.showContentEditor();
                    this.hasUnsavedChanges = true;
                }
            }

            addFeature() {
                if (!this.currentData.content[this.currentSection.id]) {
                    this.currentData.content[this.currentSection.id] = {};
                }
                if (!this.currentData.content[this.currentSection.id].features) {
                    this.currentData.content[this.currentSection.id].features = [];
                }
                
                this.currentData.content[this.currentSection.id].features.push({ 
                    title: '–ù–æ–≤–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å', 
                    description: '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏',
                    icon: 'fas fa-star'
                });
                this.showContentEditor();
                this.hasUnsavedChanges = true;
            }

            removeFeature(index) {
                if (this.currentData.content?.[this.currentSection.id]?.features) {
                    this.currentData.content[this.currentSection.id].features.splice(index, 1);
                    this.showContentEditor();
                    this.hasUnsavedChanges = true;
                }
            }

            saveChanges() {
                if (!this.currentSection) return;

                try {
                    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
                    const formData = {};
                    document.querySelectorAll('#content-editor [data-field]').forEach(input => {
                        const fieldId = input.getAttribute('data-field');
                        formData[fieldId] = input.value;
                    });

                    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
                    this.processSpecialFields(formData);

                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    this.saveData();
                    this.hasUnsavedChanges = false;
                    this.showSaveIndicator('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
                    this.showNotification('–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!', 'success');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                    this.safeRefresh();
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
                    this.showNotification('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + error.message, 'error');
                }
            }

            processSpecialFields(formData) {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                document.querySelectorAll('[data-stat]').forEach(input => {
                    const index = parseInt(input.getAttribute('data-stat'));
                    const field = input.getAttribute('data-field');
                    if (!this.currentData.content.about) this.currentData.content.about = {};
                    if (!this.currentData.content.about.stats) this.currentData.content.about.stats = [];
                    if (!this.currentData.content.about.stats[index]) {
                        this.currentData.content.about.stats[index] = {};
                    }
                    this.currentData.content.about.stats[index][field] = input.value;
                });

                // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ª—É–≥
                document.querySelectorAll('[data-service]').forEach(input => {
                    const index = parseInt(input.getAttribute('data-service'));
                    const field = input.getAttribute('data-field');
                    if (!this.currentData.content.services) this.currentData.content.services = {};
                    if (!this.currentData.content.services.services) this.currentData.content.services.services = [];
                    if (!this.currentData.content.services.services[index]) {
                        this.currentData.content.services.services[index] = {};
                    }
                    this.currentData.content.services.services[index][field] = input.value;
                });

                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π
                document.querySelectorAll('[data-feature]').forEach(input => {
                    const index = parseInt(input.getAttribute('data-feature'));
                    const field = input.getAttribute('data-field');
                    if (!this.currentData.content[this.currentSection.id]) {
                        this.currentData.content[this.currentSection.id] = {};
                    }
                    if (!this.currentData.content[this.currentSection.id].features) {
                        this.currentData.content[this.currentSection.id].features = [];
                    }
                    if (!this.currentData.content[this.currentSection.id].features[index]) {
                        this.currentData.content[this.currentSection.id].features[index] = {};
                    }
                    this.currentData.content[this.currentSection.id].features[index][field] = input.value;
                });

                // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
                Object.keys(formData).forEach(fieldId => {
                    if (this.currentSection.id === 'contact' && fieldId !== 'title') {
                        if (!this.currentData.contacts) this.currentData.contacts = {};
                        this.currentData.contacts[fieldId] = formData[fieldId];
                    } else if (this.currentSection.id === 'footer') {
                        if (!this.currentData.footer) this.currentData.footer = {};
                        this.currentData.footer[fieldId] = formData[fieldId];
                    } else {
                        if (!this.currentData.content[this.currentSection.id]) {
                            this.currentData.content[this.currentSection.id] = {};
                        }
                        this.currentData.content[this.currentSection.id][fieldId] = formData[fieldId];
                    }
                });
            }

            saveData() {
                try {
                    // –û–±–Ω–æ–≤–ª—è–µ–º timestamp
                    this.currentData.lastUpdate = new Date().toISOString();
                    
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
                    localStorage.setItem('worldtravel_data', JSON.stringify(this.currentData));
                    console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage:', this.currentData);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º DataManager –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
                    if (typeof window.dataManager !== 'undefined' && window.dataManager) {
                        window.dataManager.setData(this.currentData);
                    }
                    
                    return true;
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
                    this.showNotification('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', 'error');
                    return false;
                }
            }

            safeRefresh() {
                if (this.hasUnsavedChanges) {
                    if (!confirm('–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä?')) {
                        return;
                    }
                }
                
                const frame = document.getElementById('preview-frame');
                const currentSrc = frame.src.split('?')[0];
                frame.src = currentSrc + '?editor=true&nocache=1&t=' + Date.now();
                this.showNotification('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±–Ω–æ–≤–ª–µ–Ω');
            }

            saveAndExit() {
                if (this.hasUnsavedChanges) {
                    if (confirm('–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º?')) {
                        if (!this.saveChanges()) {
                            return; // –ù–µ –≤—ã—Ö–æ–¥–∏–º –µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å
                        }
                    }
                }
                
                this.showNotification('–í–æ–∑–≤—Ä–∞—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å...');
                setTimeout(() => {
                    window.location.href = 'admin.html';
                }, 1000);
            }

            showNotification(message, type = 'success') {
                const notification = document.createElement('div');
                notification.className = `notification ${type === 'error' ? 'error' : ''}`;
                notification.innerHTML = `
                    <i class="fas fa-${type === 'error' ? 'exclamation-triangle' : 'check-circle'}"></i>
                    ${message}
                `;
                
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    if (notification.parentElement) {
                        notification.remove();
                    }
                }, 4000);
            }

            showSaveIndicator(message) {
                const indicator = document.getElementById('save-indicator');
                const messageEl = document.getElementById('save-message');
                
                if (indicator && messageEl) {
                    messageEl.textContent = message;
                    indicator.classList.add('show');
                    
                    setTimeout(() => {
                        indicator.classList.remove('show');
                    }, 3000);
                }
            }

            escapeHtml(text) {
                if (!text) return '';
                const div = document.createElement('div');
                div.textContent = text;
                return div.innerHTML;
            }
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        const editor = new StablePageEditor();

        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        window.refreshPreview = () => editor.safeRefresh();
        window.saveAndExit = () => editor.saveAndExit();
    </script>
</body>
</html>



=== FILE: ./admin.js ===
// Improved Admin JavaScript with better error handling and force refresh
console.log('üîÑ Admin JS loading...');

document.addEventListener('DOMContentLoaded', function() {
    console.log('‚úÖ Admin DOM loaded');
    initializeAdmin();
});

function initializeAdmin() {
    console.log('üöÄ Initializing admin...');
    
    // Wait for dataManager to be ready
    const initInterval = setInterval(() => {
        if (window.dataManager) {
            clearInterval(initInterval);
            loadAdminData();
            setupAdminEventListeners();
            loadCountrySelect();
            console.log('‚úÖ Admin initialized successfully');
        }
    }, 100);

    // Fallback timeout
    setTimeout(() => {
        clearInterval(initInterval);
        if (!window.dataManager) {
            console.error('‚ùå DataManager not available, using fallback');
            showAdminNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
        }
    }, 5000);
}

function setupAdminEventListeners() {
    console.log('ÔøΩÔøΩ Setting up admin event listeners...');
    
    // Form handlers
    const addCountryForm = document.getElementById('add-country-form');
    const addTourForm = document.getElementById('add-tour-form');
    const contactForm = document.getElementById('contact-form');
    const settingsForm = document.getElementById('settings-form');
    
    if (addCountryForm) {
        addCountryForm.addEventListener('submit', handleAddCountry);
        console.log('‚úÖ Country form handler added');
    }
    
    if (addTourForm) {
        addTourForm.addEventListener('submit', handleAddTour);
        console.log('‚úÖ Tour form handler added');
    }
    
    if (contactForm) {
        contactForm.addEventListener('submit', handleUpdateContacts);
        console.log('‚úÖ Contact form handler added');
    }
    
    if (settingsForm) {
        settingsForm.addEventListener('submit', handleUpdateSettings);
        console.log('‚úÖ Settings form handler added');
    }
    
    // Tab handlers
    const tabButtons = document.querySelectorAll('.tab-button');
    tabButtons.forEach(button => {
        button.addEventListener('click', function() {
            const tabName = this.getAttribute('data-tab');
            console.log('üìë Switching to tab:', tabName);
            switch(tabName) {
                case 'countries':
                    loadCountriesTable();
                    break;
                case 'tours':
                    loadToursTable();
                    loadCountrySelect();
                    break;
                case 'contacts':
                    loadContactsForm();
                    break;
                case 'settings':
                    loadSettingsForm();
                    break;
            }
        });
    });

    // Force refresh button
    const refreshBtn = document.createElement('button');
    refreshBtn.className = 'btn-admin secondary';
    refreshBtn.innerHTML = '<i class="fas fa-sync-alt"></i> –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ';
    refreshBtn.style.marginLeft = '10px';
    refreshBtn.onclick = forceRefreshData;
    
    const headerActions = document.querySelector('.editor-actions');
    if (headerActions) {
        headerActions.appendChild(refreshBtn);
    }
}

function forceRefreshData() {
    console.log('üîÑ Force refreshing data...');
    if (window.dataManager) {
        window.dataManager.forceRefresh();
        loadAdminData();
        showAdminNotification('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã', 'success');
    } else {
        showAdminNotification('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', 'error');
    }
}

function loadAdminData() {
    console.log('üì• Loading admin data...');
    
    if (!window.dataManager) {
        console.error('‚ùå DataManager not available');
        showAdminNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–∞', 'error');
        return;
    }
    
    const data = window.dataManager.getData();
    console.log('üìä Admin loaded data:', {
        countries: data?.countries?.length || 0,
        tours: data ? window.dataManager.getAllTours().length : 0
    });
    
    if (data) {
        loadCountriesTable();
        loadToursTable();
        loadContactsForm();
        loadSettingsForm();
        showAdminNotification('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
    } else {
        showAdminNotification('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ', 'warning');
        window.dataManager.setDefaultData();
        setTimeout(loadAdminData, 500);
    }
}

function loadCountriesTable() {
    console.log('üåç Loading countries table...');
    
    if (!window.dataManager) return;
    
    const countries = window.dataManager.getCountries();
    const tbody = document.querySelector('#countries-table tbody');
    
    console.log('üìã Countries to display:', countries.length);
    
    if (tbody) {
        if (countries.length > 0) {
            tbody.innerHTML = countries.map(country => `
                <tr>
                    <td><strong>${country.name}</strong></td>
                    <td>${country.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</td>
                    <td><span class="tour-count-badge">${country.tours ? country.tours.length : 0}</span></td>
                    <td>
                        <div class="action-buttons">
                            <button class="btn-small" onclick="editCountry(${country.id})" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn-small danger" onclick="deleteCountry(${country.id})" title="–£–¥–∞–ª–∏—Ç—å">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');
            console.log('‚úÖ Countries table loaded');
        } else {
            tbody.innerHTML = '<tr><td colspan="4" style="text-align: center; color: #999; padding: 40px;">–°—Ç—Ä–∞–Ω—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã</td></tr>';
            console.log('üì≠ No countries to display');
        }
    } else {
        console.error('‚ùå Countries table body not found');
    }
}

function loadToursTable() {
    console.log('üó∫Ô∏è Loading tours table...');
    
    if (!window.dataManager) return;
    
    const allTours = window.dataManager.getAllTours();
    const tbody = document.querySelector('#tours-table tbody');
    
    console.log('üìã Tours to display:', allTours.length);
    
    if (tbody) {
        if (allTours.length > 0) {
            tbody.innerHTML = allTours.map(tour => `
                <tr>
                    <td>
                        <div class="tour-info">
                            <strong>${tour.name}</strong>
                            <small>ID: ${tour.id}</small>
                        </div>
                    </td>
                    <td>
                        <span class="country-badge">${tour.countryName}</span>
                    </td>
                    <td>
                        <span class="price-tag">${tour.price}</span>
                    </td>
                    <td>
                        <span class="duration-badge">${tour.duration}</span>
                    </td>
                    <td>
                        <div class="action-buttons">
                            <button class="btn-small warning" onclick="editTour(${tour.countryId}, ${tour.id})" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn-small danger" onclick="deleteTour(${tour.countryId}, ${tour.id})" title="–£–¥–∞–ª–∏—Ç—å">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');
            console.log('‚úÖ Tours table loaded');
        } else {
            tbody.innerHTML = `
                <tr>
                    <td colspan="5" style="text-align: center; color: #999; padding: 40px;">
                        <i class="fas fa-map-marked-alt" style="font-size: 3rem; margin-bottom: 15px; display: block; color: #ccc;"></i>
                        <p>–¢—É—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                        <small>–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ç—É—Ä –∏—Å–ø–æ–ª—å–∑—É—è —Ñ–æ—Ä–º—É –≤—ã—à–µ</small>
                    </td>
                </tr>
            `;
            console.log('üì≠ No tours to display');
        }
    } else {
        console.error('‚ùå Tours table body not found');
    }
}

function loadContactsForm() {
    console.log('üìû Loading contacts form...');
    
    if (!window.dataManager) return;
    
    const contacts = window.dataManager.getContacts();
    const form = document.getElementById('contact-form');
    
    console.log('üìã Contacts data:', contacts);
    
    if (form) {
        form.querySelector('#contact-phone').value = contacts.phone || '';
        form.querySelector('#contact-email').value = contacts.email || '';
        form.querySelector('#contact-address').value = contacts.address || '';
        form.querySelector('#contact-hours').value = contacts.hours || '';
        console.log('‚úÖ Contacts form loaded');
    }
}

function loadSettingsForm() {
    console.log('‚öôÔ∏è Loading settings form...');
    
    if (!window.dataManager) return;
    
    const settings = window.dataManager.getSettings();
    const form = document.getElementById('settings-form');
    
    console.log('üìã Settings data:', settings);
    
    if (form) {
        form.querySelector('#site-title').value = settings.siteTitle || '';
        form.querySelector('#company-name').value = settings.companyName || '';
        console.log('‚úÖ Settings form loaded');
    }
}

function loadCountrySelect() {
    console.log('üåç Loading country select...');
    
    if (!window.dataManager) return;
    
    const countries = window.dataManager.getCountries();
    const select = document.getElementById('tour-country');
    
    console.log('üìã Countries for select:', countries.length);
    
    if (select) {
        if (countries.length > 0) {
            select.innerHTML = '<option value="">-- –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É --</option>' + 
                countries.map(country => 
                    `<option value="${country.id}">${country.name}</option>`
                ).join('');
            console.log('‚úÖ Country select loaded');
        } else {
            select.innerHTML = '<option value="">–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Å—Ç—Ä–∞–Ω—ã</option>';
            console.log('üì≠ No countries for select');
        }
    }
}

// Form handlers with improved validation
function handleAddCountry(e) {
    e.preventDefault();
    console.log('‚ûï Adding new country...');
    
    const form = e.target;
    const formData = new FormData(form);
    
    const countryData = {
        name: formData.get('name').trim(),
        description: formData.get('description').trim()
    };
    
    if (!countryData.name) {
        showAdminNotification('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã', 'error');
        return;
    }
    
    if (!window.dataManager) {
        showAdminNotification('–û—à–∏–±–∫–∞: DataManager –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }
    
    const result = window.dataManager.addCountry(countryData);
    if (result) {
        form.reset();
        loadCountriesTable();
        loadCountrySelect();
        showAdminNotification(`–°—Ç—Ä–∞–Ω–∞ "${countryData.name}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!`, 'success');
        console.log('‚úÖ Country added:', countryData.name);
    } else {
        showAdminNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω—ã', 'error');
        console.error('‚ùå Failed to add country');
    }
}

function handleAddTour(e) {
    e.preventDefault();
    console.log('‚ûï Adding new tour...');
    
    const form = e.target;
    const formData = new FormData(form);
    
    const tourData = {
        name: formData.get('name').trim(),
        price: formData.get('price').trim(),
        duration: formData.get('duration').trim()
    };
    
    const countryId = parseInt(formData.get('country'));
    
    // Validation
    if (!tourData.name) {
        showAdminNotification('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞', 'error');
        return;
    }
    
    if (!tourData.price) {
        showAdminNotification('–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç—É—Ä–∞', 'error');
        return;
    }
    
    if (!tourData.duration) {
        showAdminNotification('–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—É—Ä–∞', 'error');
        return;
    }
    
    if (!countryId) {
        showAdminNotification('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É', 'error');
        return;
    }
    
    if (!window.dataManager) {
        showAdminNotification('–û—à–∏–±–∫–∞: DataManager –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }
    
    const result = window.dataManager.addTour(countryId, tourData);
    if (result) {
        form.reset();
        loadToursTable();
        showAdminNotification(`–¢—É—Ä "${tourData.name}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!`, 'success');
        console.log('‚úÖ Tour added:', tourData.name);
    } else {
        showAdminNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç—É—Ä–∞', 'error');
        console.error('‚ùå Failed to add tour');
    }
}

function handleUpdateContacts(e) {
    e.preventDefault();
    console.log('üìû Updating contacts...');
    
    const form = e.target;
    const formData = new FormData(form);
    
    const contactData = {
        phone: formData.get('phone').trim(),
        email: formData.get('email').trim(),
        address: formData.get('address').trim(),
        hours: formData.get('hours').trim()
    };
    
    if (!window.dataManager) {
        showAdminNotification('–û—à–∏–±–∫–∞: DataManager –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }
    
    window.dataManager.updateContacts(contactData);
    showAdminNotification('–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!', 'success');
    console.log('‚úÖ Contacts updated');
}

function handleUpdateSettings(e) {
    e.preventDefault();
    console.log('‚öôÔ∏è Updating settings...');
    
    const form = e.target;
    const formData = new FormData(form);
    
    const settingsData = {
        siteTitle: formData.get('siteTitle').trim(),
        companyName: formData.get('companyName').trim()
    };
    
    if (!window.dataManager) {
        showAdminNotification('–û—à–∏–±–∫–∞: DataManager –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }
    
    window.dataManager.updateSettings(settingsData);
    showAdminNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!', 'success');
    console.log('‚úÖ Settings updated');
}

// Country management functions
function editCountry(countryId) {
    console.log('‚úèÔ∏è Editing country:', countryId);
    
    if (!window.dataManager) return;
    
    const countries = window.dataManager.getCountries();
    const country = countries.find(c => c.id === countryId);
    
    if (country) {
        const newName = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã:', country.name);
        if (newName === null) return;
        
        const newDesc = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:', country.description || '');
        if (newDesc === null) return;
        
        if (newName.trim()) {
            window.dataManager.updateCountry(countryId, {
                name: newName.trim(),
                description: newDesc.trim()
            });
            loadCountriesTable();
            loadCountrySelect();
            loadToursTable();
            showAdminNotification('–°—Ç—Ä–∞–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!', 'success');
            console.log('‚úÖ Country updated');
        } else {
            showAdminNotification('–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º', 'error');
        }
    }
}

function deleteCountry(countryId) {
    console.log('üóëÔ∏è Deleting country:', countryId);
    
    if (!window.dataManager) return;
    
    const countries = window.dataManager.getCountries();
    const country = countries.find(c => c.id === countryId);
    
    if (!country) return;
    
    const tourCount = country.tours ? country.tours.length : 0;
    const message = tourCount > 0 
        ? `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É "${country.name}"? –í—Å–µ ${tourCount} —Ç—É—Ä–æ–≤ –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.`
        : `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É "${country.name}"?`;
    
    if (confirm(message)) {
        if (window.dataManager.deleteCountry(countryId)) {
            loadCountriesTable();
            loadToursTable();
            loadCountrySelect();
            showAdminNotification('–°—Ç—Ä–∞–Ω–∞ —É–¥–∞–ª–µ–Ω–∞!', 'success');
            console.log('‚úÖ Country deleted');
        } else {
            showAdminNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω—ã', 'error');
        }
    }
}

// Tour management functions
function editTour(countryId, tourId) {
    console.log('‚úèÔ∏è Editing tour:', tourId, 'in country:', countryId);
    
    if (!window.dataManager) return;
    
    const allTours = window.dataManager.getAllTours();
    const tour = allTours.find(t => t.id === tourId && t.countryId === countryId);
    
    if (tour) {
        const newName = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞:', tour.name);
        if (newName === null) return;
        
        const newPrice = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É:', tour.price);
        if (newPrice === null) return;
        
        const newDuration = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', tour.duration);
        if (newDuration === null) return;
        
        if (newName.trim() && newPrice && newDuration.trim()) {
            // Delete old tour and create new one
            if (window.dataManager.deleteTour(countryId, tourId)) {
                window.dataManager.addTour(countryId, {
                    name: newName.trim(),
                    price: newPrice.trim(),
                    duration: newDuration.trim()
                });
                loadToursTable();
                showAdminNotification('–¢—É—Ä –æ–±–Ω–æ–≤–ª–µ–Ω!', 'success');
                console.log('‚úÖ Tour updated');
            }
        } else {
            showAdminNotification('–í—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã', 'error');
        }
    }
}

function deleteTour(countryId, tourId) {
    console.log('üóëÔ∏è Deleting tour:', tourId, 'from country:', countryId);
    
    if (!window.dataManager) return;
    
    const allTours = window.dataManager.getAllTours();
    const tour = allTours.find(t => t.id === tourId && t.countryId === countryId);
    
    if (tour && confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç—É—Ä "${tour.name}"?`)) {
        if (window.dataManager.deleteTour(countryId, tourId)) {
            loadToursTable();
            showAdminNotification('–¢—É—Ä —É–¥–∞–ª–µ–Ω!', 'success');
            console.log('‚úÖ Tour deleted');
        } else {
            showAdminNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç—É—Ä–∞', 'error');
        }
    }
}

// Notification system
function showAdminNotification(message, type = 'info') {
    console.log(`üì¢ ${type.toUpperCase()}: ${message}`);
    
    // Remove existing notifications
    document.querySelectorAll('.admin-notification').forEach(n => n.remove());
    
    const notification = document.createElement('div');
    const bgColor = type === 'error' ? '#dc3545' : type === 'warning' ? '#ffc107' : type === 'success' ? '#28a745' : '#007bff';
    const textColor = type === 'warning' ? '#000' : '#fff';
    
    notification.className = 'admin-notification';
    notification.innerHTML = `
        <div style="
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${bgColor};
            color: ${textColor};
            padding: 15px 20px;
            border-radius: 10px;
            z-index: 10000;
            animation: slideInRight 0.3s ease;
            max-width: 400px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            display: flex;
            align-items: center;
            gap: 10px;
            font-weight: 500;
        ">
            <i class="fas fa-${type === 'error' ? 'exclamation-triangle' : type === 'warning' ? 'exclamation-circle' : type === 'success' ? 'check-circle' : 'info-circle'}"></i>
            ${message}
            <button onclick="this.parentElement.parentElement.remove()" style="background: none; border: none; color: inherit; cursor: pointer; margin-left: 10px;">
                <i class="fas fa-times"></i>
            </button>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    // Auto-remove after 5 seconds
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 5000);
}

// Add CSS for notifications if not exists
if (!document.querySelector('#admin-notification-styles')) {
    const style = document.createElement('style');
    style.id = 'admin-notification-styles';
    style.textContent = `
        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
    `;
    document.head.appendChild(style);
}

// Debug function
window.debugAdmin = function() {
    console.log('üîç Admin Debug Info:');
    console.log('- DataManager available:', !!window.dataManager);
    if (window.dataManager) {
        window.dataManager.debugData();
    }
    console.log('- Countries table:', document.querySelector('#countries-table tbody')?.children.length || 0, 'rows');
    console.log('- Tours table:', document.querySelector('#tours-table tbody')?.children.length || 0, 'rows');
};

console.log('‚úÖ Admin JS loaded successfully');



=== FILE: ./admin-login.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login - WorldTravel</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }

        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .login-container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 400px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .login-box h2 {
            color: white;
            text-align: center;
            margin-bottom: 30px;
            font-size: 28px;
        }

        .user-box {
            position: relative;
            margin-bottom: 30px;
        }

        .user-box input {
            width: 100%;
            padding: 10px 0;
            font-size: 16px;
            color: white;
            margin-bottom: 30px;
            border: none;
            border-bottom: 1px solid white;
            outline: none;
            background: transparent;
        }

        .user-box label {
            position: absolute;
            top: 0;
            left: 0;
            padding: 10px 0;
            font-size: 16px;
            color: white;
            pointer-events: none;
            transition: 0.5s;
        }

        .user-box input:focus ~ label,
        .user-box input:valid ~ label {
            top: -20px;
            left: 0;
            color: #03e9f4;
            font-size: 12px;
        }

        button {
            background: transparent;
            border: 1px solid white;
            color: white;
            padding: 12px 30px;
            text-transform: uppercase;
            letter-spacing: 2px;
            border-radius: 25px;
            cursor: pointer;
            transition: 0.5s;
            width: 100%;
            font-size: 16px;
            margin-top: 20px;
        }

        button:hover {
            background: white;
            color: #667eea;
        }

        .message {
            padding: 15px;
            margin: 20px 0;
            border-radius: 8px;
            text-align: center;
            font-weight: bold;
        }

        .message.success {
            background: rgba(46, 204, 113, 0.2);
            color: #2ecc71;
            border: 1px solid #2ecc71;
        }

        .message.error {
            background: rgba(231, 76, 60, 0.2);
            color: #e74c3c;
            border: 1px solid #e74c3c;
        }

        .code-inputs {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
        }

        .code-inputs input {
            width: 45px;
            height: 45px;
            text-align: center;
            font-size: 20px;
            border: 2px solid white;
            background: transparent;
            color: white;
            border-radius: 8px;
        }

        .hidden {
            display: none;
        }

        .loading {
            opacity: 0.7;
            pointer-events: none;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-box">
            <h2>Admin Login</h2>
            
            <div id="loginSection">
                <div class="user-box">
                    <input type="text" id="username" required>
                    <label>–õ–æ–≥–∏–Ω</label>
                </div>
                <div class="user-box">
                    <input type="password" id="password" required>
                    <label>–ü–∞—Ä–æ–ª—å</label>
                </div>
                <button type="button" onclick="handleLogin()">–í–æ–π—Ç–∏</button>
            </div>

            <div id="codeSection" class="hidden">
                <div class="message info">
                    –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É narekgrigoryan424@gmail.com
                </div>
                <div class="code-inputs">
                    <input type="text" maxlength="1" oninput="moveToNext(this, 1)">
                    <input type="text" maxlength="1" oninput="moveToNext(this, 2)">
                    <input type="text" maxlength="1" oninput="moveToNext(this, 3)">
                    <input type="text" maxlength="1" oninput="moveToNext(this, 4)">
                    <input type="text" maxlength="1" oninput="moveToNext(this, 5)">
                    <input type="text" maxlength="1" oninput="moveToNext(this, 6)">
                </div>
                <button type="button" onclick="verifyCode()">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥</button>
                <button type="button" onclick="goBackToLogin()" style="background: transparent; margin-top: 10px;">–ù–∞–∑–∞–¥</button>
            </div>

            <div id="message" class="message"></div>
        </div>
    </div>

    <script>
   let currentAuthCode = '';
let currentUsername = '';

async function handleLogin() {
    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;

    if (username !== 'admin' || password !== 'admin') {
        showMessage('–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å', 'error');
        return;
    }

    showMessage('–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É...', 'success');
    setLoadingState(true);

    try {
        currentAuthCode = Math.floor(100000 + Math.random() * 900000).toString();
        currentUsername = username;
        
        console.log('üîê GENERATED CODE:', currentAuthCode);

        // –í–†–ï–ú–ï–ù–ù–û –ü–†–û–ü–£–°–ö–ê–ï–ú –û–¢–ü–†–ê–í–ö–£ EMAIL - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–¥
        console.log('üìß Email sending skipped for testing');
        
        showMessage('‚úÖ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–¥: ' + currentAuthCode, 'success');
        document.getElementById('loginSection').classList.add('hidden');
        document.getElementById('codeSection').classList.remove('hidden');
        clearCodeInputs();
        document.querySelector('.code-inputs input').focus();
        
    } catch (error) {
        console.error('Error:', error);
        showMessage('‚ùå –û—à–∏–±–∫–∞', 'error');
    } finally {
        setLoadingState(false);
    }
}

function moveToNext(input, nextIndex) {
    const inputs = document.querySelectorAll('.code-inputs input');
    
    if (input.value.length === 1 && nextIndex < inputs.length) {
        inputs[nextIndex].focus();
    }
    
    const allFilled = Array.from(inputs).every(input => input.value.length === 1);
    if (allFilled) {
        verifyCode();
    }
}

function verifyCode() {
    const inputs = document.querySelectorAll('.code-inputs input');
    const enteredCode = Array.from(inputs).map(input => input.value).join('');
    
    if (enteredCode.length !== 6) {
        showMessage('–í–≤–µ–¥–∏—Ç–µ –≤—Å–µ 6 —Ü–∏—Ñ—Ä –∫–æ–¥–∞', 'error');
        return;
    }

    setLoadingState(true);

    setTimeout(() => {
        if (enteredCode === currentAuthCode) {
            showMessage('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...', 'success');
            
            // –°–û–•–†–ê–ù–Ø–ï–ú –í SessionStorage (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª—É—á—à–µ)
            sessionStorage.setItem('adminAuthenticated', 'true');
            sessionStorage.setItem('adminUsername', currentUsername);
            sessionStorage.setItem('authTime', Date.now().toString());
            
            // –î–£–ë–õ–ò–†–£–ï–ú –í LocalStorage
            localStorage.setItem('adminAuthenticated', 'true');
            localStorage.setItem('adminUsername', currentUsername);
            localStorage.setItem('authTime', Date.now().toString());
            
            console.log('üíæ SAVED TO STORAGE:');
            console.log('SessionStorage:', {
                auth: sessionStorage.getItem('adminAuthenticated'),
                user: sessionStorage.getItem('adminUsername')
            });
            console.log('LocalStorage:', {
                auth: localStorage.getItem('adminAuthenticated'),
                user: localStorage.getItem('adminUsername')
            });
            
            // –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–Ø–ï–ú –°–†–ê–ó–£
            console.log('üîÑ REDIRECTING TO ADMIN.HTML');
            window.location.href = 'admin.html';
            
        } else {
            showMessage('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
            shakeCodeInputs();
        }
        setLoadingState(false);
    }, 500);
}

function goBackToLogin() {
    document.getElementById('codeSection').classList.add('hidden');
    document.getElementById('loginSection').classList.remove('hidden');
    showMessage('', '');
    currentAuthCode = '';
}

function clearCodeInputs() {
    const inputs = document.querySelectorAll('.code-inputs input');
    inputs.forEach(input => input.value = '');
}

function shakeCodeInputs() {
    const container = document.querySelector('.code-inputs');
    container.style.animation = 'shake 0.5s';
    setTimeout(() => {
        container.style.animation = '';
        clearCodeInputs();
        document.querySelector('.code-inputs input').focus();
    }, 500);
}

function setLoadingState(loading) {
    const buttons = document.querySelectorAll('button');
    buttons.forEach(button => {
        button.disabled = loading;
        button.classList.toggle('loading', loading);
    });
}

function showMessage(text, type) {
    const messageEl = document.getElementById('message');
    messageEl.textContent = text;
    messageEl.className = 'message';
    if (type) {
        messageEl.classList.add(type);
    }
}

// –ê–Ω–∏–º–∞—Ü–∏—è —Ç—Ä—è—Å–∫–∏
const style = document.createElement('style');
style.textContent = `
    @keyframes shake {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        75% { transform: translateX(5px); }
    }
`;
document.head.appendChild(style);

// –ê–≤—Ç–æ—Ñ–æ–∫—É—Å
document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('username').focus();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter
document.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        if (!document.getElementById('codeSection').classList.contains('hidden')) {
            verifyCode();
        } else {
            handleLogin();
        }
    }
});
    </script>
</body>
</html>


=== FILE: ./index.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WorldTravel - –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è</title>
    <link rel="stylesheet" href="style.css?v=4">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <!-- Header -->
    <header class="header">
        <nav class="nav">
            <div class="logo">
                <h2><i class="fas fa-globe-americas"></i> WorldTravel</h2>
            </div>
            <ul class="nav-links">
                <li><a href="#home">–ì–ª–∞–≤–Ω–∞—è</a></li>
                <li><a href="#about">–û –Ω–∞—Å</a></li>
                <li><a href="#services">–£—Å–ª—É–≥–∏</a></li>
                <li><a href="#destinations">–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</a></li>
                <li><a href="#contact">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
                <li>
                    <a href="admin-login.html" class="admin-link"><i class="fas fa-cog"></i> –ê–¥–º–∏–Ω–∫–∞</a>
                </li>
            </ul>
            <div class="hamburger">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </nav>
    </header>

    <!-- Hero Section -->
    <section id="home" class="hero">
        <div class="hero-content">
            <h1 class="animate-fade-in">–û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä —Å WorldTravel</h1>
            <p class="animate-fade-in-delay">–ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –û—Ç —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–ª—è–∂–µ–π –¥–æ –≥–æ—Ä–Ω—ã—Ö –≤–µ—Ä—à–∏–Ω - –≤–∞—à–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å.</p>
            <button class="cta-button animate-bounce" onclick="scrollToDestinations()">–ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ</button>
        </div>
        <div class="hero-image" style="margin-left: 100px;">
            <div class="floating-element element-1"><i class="fas fa-plane"></i></div>
            <div class="floating-element element-2"><i class="fas fa-map-marked-alt"></i></div>
            <div class="floating-element element-3"><i class="fas fa-passport"></i></div>
            <div class="image-placeholder pulse-animation">
                <img src="images/travel-placeholder.svg" alt="–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è" style="width: 100%; height: 100%; object-fit: cover; border-radius: 20px;">
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section id="about" class="about">
        <div class="container">
            <h2 class="section-title">–û –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏</h2>
            <div class="about-content">
                <div class="about-text">
                    <p>WorldTravel - —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø–æ —Ç—É—Ä–∏–∑–º—É —Å –±–æ–ª–µ–µ —á–µ–º 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã. –ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö travel-—Ä–µ—à–µ–Ω–∏–π.</p>
                    <div class="stats">
                        <div class="stat animate-counter" data-target="5000">
                            <h3>5000</h3>
                            <p>–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</p>
                        </div>
                        <div class="stat animate-counter" data-target="50">
                            <h3>50</h3>
                            <p>–°—Ç—Ä–∞–Ω –º–∏—Ä–∞</p>
                        </div>
                        <div class="stat">
                            <h3>10 –ª–µ—Ç</h3>
                            <p>–û–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã</p>
                        </div>
                    </div>
                </div>
                <div class="about-image">
                    <div class="image-placeholder rotate-animation">
                        <img src="images/travel-placeholder.svg" alt="–ö–æ–º–∞–Ω–¥–∞ WorldTravel" style="width: 100%; height: 100%; object-fit: cover; border-radius: 20px;">
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Services Section -->
    <section id="services" class="services">
        <div class="container">
            <h2 class="section-title">–ù–∞—à–∏ —É—Å–ª—É–≥–∏</h2>
            <div class="services-grid">
                <div class="service-card slide-in-left">
                    <div class="service-icon"><i class="fas fa-plane"></i></div>
                    <h3>–ê–≤–∏–∞–±–∏–ª–µ—Ç—ã</h3>
                    <p>–ü–æ–¥–±–æ—Ä –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª—É—á—à–∏—Ö –∞–≤–∏–∞–ø–µ—Ä–µ–ª–µ—Ç–æ–≤ –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º</p>
                </div>
                <div class="service-card slide-in-bottom">
                    <div class="service-icon"><i class="fas fa-hotel"></i></div>
                    <h3>–û—Ç–µ–ª–∏</h3>
                    <p>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–µ–ª–µ–π –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –∫–æ–º—Ñ–æ—Ä—Ç–∞ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É</p>
                </div>
                <div class="service-card slide-in-right">
                    <div class="service-icon"><i class="fas fa-map-marked-alt"></i></div>
                    <h3>–¢—É—Ä—ã</h3>
                    <p>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∏ –≥—Ä—É–ø–ø–æ–≤—ã–µ —Ç—É—Ä—ã —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –≥–∏–¥–∞–º–∏</p>
                </div>
                <div class="service-card slide-in-top">
                    <div class="service-icon"><i class="fas fa-shield-alt"></i></div>
                    <h3>–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ</h3>
                    <p>–ü–æ–ª–Ω–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Destinations Section -->
    <section id="destinations" class="destinations">
        <div class="container">
            <h2 class="section-title">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>
            <p class="section-subtitle">–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –ª—É—á—à–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏—Ä–∞ —Å –Ω–∞—à–∏–º–∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º–∏ —Ç—É—Ä–∞–º–∏</p>
            
            <div class="search-box">
                <input type="text" class="search-input" placeholder="üîç –ü–æ–∏—Å–∫ —Å—Ç—Ä–∞–Ω –∏–ª–∏ —Ç—É—Ä–æ–≤...">
            </div>

            <div class="loading-message" id="destinations-loading">
                <i class="fas fa-spinner fa-spin"></i> –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è...
            </div>
            <div class="destinations-grid" id="destinations-grid">
                <!-- –°—Ç—Ä–∞–Ω—ã –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ JavaScript -->
            </div>
            <div class="error-message" id="destinations-error" style="display: none;">
                <i class="fas fa-exclamation-triangle"></i> –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.
            </div>
        </div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="contact">
        <div class="container">
            <h2 class="section-title">–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</h2>
            <div class="contact-content">
                <div class="contact-info">
                    <h3>–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h3>
                    <div class="contact-item">
                        <strong><i class="fas fa-phone"></i> –¢–µ–ª–µ—Ñ–æ–Ω:</strong>
                        <p>+7 (999) 123-45-67</p>
                    </div>
                    <div class="contact-item">
                        <strong><i class="fas fa-envelope"></i> Email:</strong>
                        <p>info@worldtravel.com</p>
                    </div>
                    <div class="contact-item">
                        <strong><i class="fas fa-map-marker-alt"></i> –ê–¥—Ä–µ—Å:</strong>
                        <p>–ú–æ—Å–∫–≤–∞, —É–ª. –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è, 15</p>
                    </div>
                    <div class="contact-item">
                        <strong><i class="fas fa-clock"></i> –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:</strong>
                        <p>–ü–Ω-–ü—Ç: 9:00-18:00</p>
                    </div>
                </div>
                <form class="contact-form">
                    <input type="text" placeholder="–í–∞—à–µ –∏–º—è" required>
                    <input type="email" placeholder="–í–∞—à email" required>
                    <input type="tel" placeholder="–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω">
                    <textarea placeholder="–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ" rows="5" required></textarea>
                    <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</button>
                </form>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-section">
                    <h3><i class="fas fa-globe-americas"></i> WorldTravel</h3>
                    <p>–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –≤ –º–∏—Ä–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π. –ú—ã –¥–µ–ª–∞–µ–º –≤–∞—à–∏ –º–µ—á—Ç—ã –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é.</p>
                </div>
                <div class="footer-section">
                    <h4>–ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏</h4>
                    <ul>
                        <li><a href="#home">–ì–ª–∞–≤–Ω–∞—è</a></li>
                        <li><a href="#about">–û –Ω–∞—Å</a></li>
                        <li><a href="#services">–£—Å–ª—É–≥–∏</a></li>
                        <li><a href="#destinations">–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</a></li>
                    </ul>
                </div>
                <div class="footer-section">
                    <h4>–ö–æ–Ω—Ç–∞–∫—Ç—ã</h4>
                    <p><i class="fas fa-phone"></i> +7 (999) 123-45-67</p>
                    <p><i class="fas fa-envelope"></i> info@worldtravel.com</p>
                    <p><i class="fas fa-map-marker-alt"></i> –ú–æ—Å–∫–≤–∞, —É–ª. –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è, 15</p>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2024 WorldTravel. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
            </div>
        </div>
    </footer>

    <!-- Scripts in correct order -->
    <script src="data-manager.js?v=4"></script>
    <script src="update-content.js?v=8"></script>
    <script src="script.js?v=4"></script>
</body>
</html>



=== FILE: ./super-admin.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WorldTravel - –ü–æ–ª–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</title>
    <style>
        :root {
            --primary: #2c5aa0;
            --primary-dark: #1e3d72;
            --secondary: #4a7bc8;
            --success: #28a745;
            --warning: #ffc107;
            --danger: #dc3545;
            --light: #f8f9fa;
            --dark: #343a40;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f5f7fb;
            color: #333;
            line-height: 1.6;
        }

        .admin-layout {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        }

        .sidebar-header {
            padding: 2rem 1.5rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar-header h1 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }

        .sidebar-nav {
            padding: 1rem 0;
        }

        .nav-item {
            padding: 1rem 1.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            border-left: 4px solid transparent;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .nav-item:hover, .nav-item.active {
            background: rgba(255,255,255,0.1);
            border-left-color: white;
        }

        .nav-item i {
            width: 20px;
            text-align: center;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .top-header {
            background: white;
            padding: 1rem 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .content-area {
            padding: 2rem;
            flex: 1;
            overflow-y: auto;
        }

        /* Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            text-align: center;
            transition: transform 0.3s ease;
            border-left: 4px solid var(--primary);
        }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-card h3 {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 0.5rem;
        }

        /* Content Sections */
        .content-section {
            background: white;
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--light);
        }

        /* Buttons */
        .btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
        }

        .btn-success {
            background: var(--success);
        }

        .btn-success:hover {
            background: #218838;
        }

        .btn-warning {
            background: var(--warning);
            color: var(--dark);
        }

        .btn-warning:hover {
            background: #e0a800;
        }

        .btn-danger {
            background: var(--danger);
        }

        .btn-danger:hover {
            background: #c82333;
        }

        /* Tables */
        .data-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
        }

        .data-table th,
        .data-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #e1e5ee;
        }

        .data-table th {
            background: var(--light);
            font-weight: 600;
            color: var(--dark);
        }

        .data-table tr:hover {
            background: #f8f9fa;
        }

        /* Forms */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--dark);
        }

        .form-control {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid #e1e5ee;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary);
        }

        /* Tabs */
        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
            animation: fadeIn 0.3s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Cards */
        .card-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-top: 1.5rem;
        }

        .card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            overflow: hidden;
            transition: transform 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card-header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 1.5rem;
        }

        .card-body {
            padding: 1.5rem;
        }

        .card-actions {
            padding: 1rem 1.5rem;
            background: var(--light);
            display: flex;
            gap: 0.5rem;
        }

        /* Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
            align-items: center;
            justify-content: center;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: white;
            padding: 2rem;
            border-radius: 12px;
            width: 90%;
            max-width: 600px;
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--light);
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--dark);
        }

        .form-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
        }

        /* Notification */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: white;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            display: flex;
            align-items: center;
            gap: 1rem;
            z-index: 10000;
            transform: translateX(400px);
            transition: transform 0.3s ease;
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.success {
            border-left: 4px solid var(--success);
            background: #d4edda;
            color: #155724;
        }

        .notification.error {
            border-left: 4px solid var(--danger);
            background: #f8d7da;
            color: #721c24;
        }

        .notification-close {
            background: none;
            border: none;
            font-size: 1.2rem;
            cursor: pointer;
        }

        /* Tour Card */
        .tour-card {
            background: white;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            border-left: 4px solid var(--success);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .tour-header {
            display: flex;
            justify-content: space-between;
            align-items: start;
            margin-bottom: 1rem;
        }

        .tour-country {
            background: var(--primary);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>
    <div class="admin-layout">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <h1><i class="fas fa-globe-americas"></i> WorldTravel</h1>
                <p>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</p>
            </div>
            <nav class="sidebar-nav">
                <div class="nav-item active" data-tab="dashboard">
                    <i class="fas fa-tachometer-alt"></i>
                    <span>–î–∞—à–±–æ—Ä–¥</span>
                </div>
                <div class="nav-item" data-tab="countries">
                    <i class="fas fa-globe"></i>
                    <span>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∞–º–∏</span>
                </div>
                <div class="nav-item" data-tab="tours">
                    <i class="fas fa-map-marked-alt"></i>
                    <span>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–∞–º–∏</span>
                </div>
                <div class="nav-item" data-tab="content">
                    <i class="fas fa-edit"></i>
                    <span>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</span>
                </div>
                <div class="nav-item" data-tab="settings">
                    <i class="fas fa-cog"></i>
                    <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</span>
                </div>
            </nav>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <header class="top-header">
    <div style="display: flex; align-items: center; gap: 1rem;">
        <h2 id="page-title">–î–∞—à–±–æ—Ä–¥</h2>
        <button class="btn" onclick="window.open('/', '_blank')" 
                style="background: #17a2b8; font-size: 0.8rem; padding: 0.5rem 1rem;">
            <i class="fas fa-home"></i> –ù–∞ –≥–ª–∞–≤–Ω—É—é
        </button>
    </div>
    <div class="user-info">
        <span>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</span>
        <button class="btn btn-danger" onclick="admin.logout()">
            <i class="fas fa-sign-out-alt"></i> –í—ã–π—Ç–∏
        </button>
    </div>
</header>
            <div class="content-area">
                <!-- Dashboard Tab -->
                <div id="dashboard" class="tab-content active">
                    <!-- Welcome Message -->
                    <div class="content-section" style="background: linear-gradient(135deg, #d4edda, #c3e6cb); border-left: 4px solid var(--success);">
                        <h3><i class="fas fa-check-circle"></i> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!</h3>
                        <p>–°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –°–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞.</p>
                    </div>

                    <!-- Statistics -->
                    <div class="stats-grid">
                        <div class="stat-card">
                            <i class="fas fa-globe" style="font-size: 2rem; color: var(--primary); margin-bottom: 1rem;"></i>
                            <h3 id="stats-countries">0</h3>
                            <p>–°—Ç—Ä–∞–Ω</p>
                        </div>
                        <div class="stat-card">
                            <i class="fas fa-map-marked-alt" style="font-size: 2rem; color: var(--success); margin-bottom: 1rem;"></i>
                            <h3 id="stats-tours">0</h3>
                            <p>–¢—É—Ä–æ–≤</p>
                        </div>
                        <div class="stat-card">
                            <i class="fas fa-calendar-check" style="font-size: 2rem; color: var(--warning); margin-bottom: 1rem;"></i>
                            <h3>1,247</h3>
                            <p>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π</p>
                        </div>
                        <div class="stat-card">
                            <i class="fas fa-users" style="font-size: 2rem; color: var(--danger); margin-bottom: 1rem;"></i>
                            <h3>543</h3>
                            <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
                        </div>
                    </div>

                    <!-- Quick Actions -->
                    <div class="content-section">
                        <div class="section-header">
                            <h3>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                        </div>
                        <div style="display: flex; gap: 1rem; flex-wrap: wrap;">
                            <button class="btn btn-success" onclick="admin.openCountryModal()">
                                <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—É
                            </button>
                            <button class="btn" onclick="admin.openTourModal()">
                                <i class="fas fa-plus-circle"></i> –°–æ–∑–¥–∞—Ç—å —Ç—É—Ä
                            </button>
                            <button class="btn" onclick="admin.exportData()">
                                <i class="fas fa-download"></i> –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                            </button>
                            <button class="btn btn-warning" onclick="admin.addSampleData()">
                                <i class="fas fa-magic"></i> –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                            </button>
                        </div>
                    </div>

                    <!-- Recent Activity -->
                    <div class="content-section">
                        <div class="section-header">
                            <h3>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
                        </div>
                        <div id="recent-activity">
                            <!-- Activity will be loaded here -->
                        </div>
                    </div>
                </div>

                <!-- Countries Tab -->
                <div id="countries" class="tab-content">
                    <div class="content-section">
                        <div class="section-header">
                            <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∞–º–∏</h3>
                            <button class="btn btn-success" onclick="admin.openCountryModal()">
                                <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—É
                            </button>
                        </div>
                        
                        <div class="card-grid" id="countries-list">
                            <!-- Countries will be loaded here -->
                        </div>
                    </div>
                </div>

                <!-- Tours Tab -->
                <div id="tours" class="tab-content">
                    <div class="content-section">
                        <div class="section-header">
                            <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–∞–º–∏</h3>
                            <button class="btn btn-success" onclick="admin.openTourModal()">
                                <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å —Ç—É—Ä
                            </button>
                        </div>
                        
                        <div id="tours-list">
                            <!-- Tours will be loaded here -->
                        </div>
                    </div>
                </div>

                <!-- Content Tab -->
                <div id="content" class="tab-content">
                    <div class="content-section">
                        <div class="section-header">
                            <h3>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</h3>
                        </div>
                        
                        <div class="form-group">
                            <label>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</label>
                            <input type="text" id="hero-title" class="form-control" value="–û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä —Å WorldTravel">
                        </div>
                        
                        <div class="form-group">
                            <label>–¢–µ–∫—Å—Ç –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º</label>
                            <textarea id="hero-text" class="form-control" rows="3">–ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –û—Ç —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–ª—è–∂–µ–π –¥–æ –≥–æ—Ä–Ω—ã—Ö –≤–µ—Ä—à–∏–Ω - –≤–∞—à–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å.</textarea>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω</label>
                                <input type="text" id="contact-phone" class="form-control" value="+7 (999) 123-45-67">
                            </div>
                            <div class="form-group">
                                <label>Email</label>
                                <input type="email" id="contact-email" class="form-control" value="info@worldtravel.com">
                            </div>
                        </div>

                        <div class="form-group">
                            <label>–ê–¥—Ä–µ—Å</label>
                            <input type="text" id="contact-address" class="form-control" value="–ú–æ—Å–∫–≤–∞, —É–ª. –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è, 15">
                        </div>
                        
                        <button class="btn btn-success" onclick="admin.saveContent()">
                            <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                        </button>
                    </div>
                </div>

                <!-- Settings Tab -->
                <div id="settings" class="tab-content">
                    <div class="content-section">
                        <div class="section-header">
                            <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h3>
                        </div>

                        <div class="form-group">
                            <label>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</label>
                            <input type="text" id="company-name" class="form-control" value="WorldTravel">
                        </div>

                        <div class="form-group">
                            <label>–í–∞–ª—é—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</label>
                            <select id="default-currency" class="form-control">
                                <option value="$">–î–æ–ª–ª–∞—Ä ($)</option>
                                <option value="‚Ç¨">–ï–≤—Ä–æ (‚Ç¨)</option>
                                <option value="‚ÇΩ">–†—É–±–ª—å (‚ÇΩ)</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label>–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</label>
                            <select id="interface-language" class="form-control">
                                <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                                <option value="en">English</option>
                            </select>
                        </div>

                        <button class="btn btn-success" onclick="admin.saveSettings()">
                            <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                        </button>
                    </div>

                    <!-- Data Management -->
                    <div class="content-section">
                        <div class="section-header">
                            <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏</h3>
                        </div>

                        <div style="display: flex; gap: 1rem; flex-wrap: wrap;">
                            <button class="btn" onclick="admin.exportData()">
                                <i class="fas fa-download"></i> –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                            </button>
                            <button class="btn btn-warning" onclick="admin.importData()">
                                <i class="fas fa-upload"></i> –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                            </button>
                            <button class="btn btn-danger" onclick="admin.clearData()">
                                <i class="fas fa-trash"></i> –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Country Modal -->
    <div class="modal" id="countryModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="countryModalTitle">–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—É</h3>
                <button class="modal-close" onclick="admin.closeModal('countryModal')">&times;</button>
            </div>
            <form id="countryForm">
                <div class="form-group">
                    <label>–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã *</label>
                    <input type="text" id="country-name" class="form-control" required>
                </div>
                <div class="form-group">
                    <label>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ *</label>
                    <textarea id="country-short-description" class="form-control" rows="2" required></textarea>
                </div>
                <div class="form-group">
                    <label>–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                    <textarea id="country-description" class="form-control" rows="4"></textarea>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>–¶–µ–Ω–∞ –æ—Ç *</label>
                        <input type="text" id="country-price" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>–°—Ç–æ–ª–∏—Ü–∞</label>
                        <input type="text" id="country-capital" class="form-control">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>–Ø–∑—ã–∫</label>
                        <input type="text" id="country-language" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>–í–∞–ª—é—Ç–∞</label>
                        <input type="text" id="country-currency" class="form-control">
                    </div>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn" onclick="admin.closeModal('countryModal')">–û—Ç–º–µ–Ω–∞</button>
                    <button type="submit" class="btn btn-success">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Tour Modal -->
    <div class="modal" id="tourModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="tourModalTitle">–°–æ–∑–¥–∞—Ç—å —Ç—É—Ä</h3>
                <button class="modal-close" onclick="admin.closeModal('tourModal')">&times;</button>
            </div>
            <form id="tourForm">
                <div class="form-group">
                    <label>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞ *</label>
                    <input type="text" id="tour-name" class="form-control" required>
                </div>
                <div class="form-group">
                    <label>–°—Ç—Ä–∞–Ω–∞ *</label>
                    <select id="tour-country" class="form-control" required>
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É</option>
                    </select>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å *</label>
                        <input type="text" id="tour-duration" class="form-control" placeholder="7 –¥–Ω–µ–π" required>
                    </div>
                    <div class="form-group">
                        <label>–¶–µ–Ω–∞ *</label>
                        <input type="text" id="tour-price" class="form-control" placeholder="$500" required>
                    </div>
                </div>
                <div class="form-group">
                    <label>–û–ø–∏—Å–∞–Ω–∏–µ —Ç—É—Ä–∞</label>
                    <textarea id="tour-description" class="form-control" rows="4"></textarea>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn" onclick="admin.closeModal('tourModal')">–û—Ç–º–µ–Ω–∞</button>
                    <button type="submit" class="btn btn-success">–°–æ–∑–¥–∞—Ç—å —Ç—É—Ä</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // –ü–æ–ª–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
        class SuperAdmin {
            constructor() {
                this.countries = [];
                this.tours = [];
                this.settings = {};
                this.currentEditingId = null;
                
                this.init();
            }

            init() {
                this.loadData();
                this.setupEventListeners();
                this.renderDashboard();
                console.log('üöÄ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
            }

            loadData() {
                try {
                    const data = sessionStorage.getItem('worldtravel_data') || 
                                localStorage.getItem('worldtravel_data');
                    if (data) {
                        const parsed = JSON.parse(data);
                        this.countries = parsed.countries || [];
                        this.tours = parsed.tours || [];
                        this.settings = parsed.settings || {};
                        console.log('üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω–æ:', this.countries.length, '—Å—Ç—Ä–∞–Ω,', this.tours.length, '—Ç—É—Ä–æ–≤');
                    }
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
                    this.countries = [];
                    this.tours = [];
                }
            }

            saveData() {
                const data = {
                    countries: this.countries,
                    tours: this.tours,
                    settings: this.settings,
                    content: this.getContentData(),
                    lastUpdate: new Date().toISOString()
                };

                sessionStorage.setItem('worldtravel_data', JSON.stringify(data));
                localStorage.setItem('worldtravel_data', JSON.stringify(data));

                this.updateStats();
                this.showNotification('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', 'success');
                console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
            }

            setupEventListeners() {
                // –ù–∞–≤–∏–≥–∞—Ü–∏—è
                document.querySelectorAll('.nav-item').forEach(item => {
                    item.addEventListener('click', (e) => {
                        const tab = e.currentTarget.getAttribute('data-tab');
                        this.showTab(tab);
                    });
                });

                // –§–æ—Ä–º—ã
                document.getElementById('countryForm').addEventListener('submit', (e) => {
                    e.preventDefault();
                    this.saveCountry();
                });

                document.getElementById('tourForm').addEventListener('submit', (e) => {
                    e.preventDefault();
                    this.saveTour();
                });
            }

            showTab(tabName) {
                // –°–∫—Ä—ã—Ç—å –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
                document.querySelectorAll('.tab-content').forEach(tab => {
                    tab.classList.remove('active');
                });

                // –£–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
                document.querySelectorAll('.nav-item').forEach(item => {
                    item.classList.remove('active');
                });

                // –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
                const tab = document.getElementById(tabName);
                if (tab) {
                    tab.classList.add('active');
                }

                // –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é
                const navItem = document.querySelector(`[data-tab="${tabName}"]`);
                if (navItem) {
                    navItem.classList.add('active');
                }

                // –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
                document.getElementById('page-title').textContent = 
                    navItem.querySelector('span').textContent;

                // –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
                this.loadTabData(tabName);
            }

            loadTabData(tabName) {
                switch (tabName) {
                    case 'dashboard':
                        this.renderDashboard();
                        break;
                    case 'countries':
                        this.renderCountries();
                        break;
                    case 'tours':
                        this.renderTours();
                        break;
                    case 'content':
                        this.loadContent();
                        break;
                    case 'settings':
                        this.loadSettings();
                        break;
                }
            }

            renderDashboard() {
                this.updateStats();
                this.renderRecentActivity();
            }

            updateStats() {
                document.getElementById('stats-countries').textContent = this.countries.length;
                document.getElementById('stats-tours').textContent = this.tours.length;
            }

            renderRecentActivity() {
                const container = document.getElementById('recent-activity');
                const activities = [
                    { action: '–î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∞', item: '–ò—Ç–∞–ª–∏—è', time: '2 –º–∏–Ω—É—Ç—ã –Ω–∞–∑–∞–¥' },
                    { action: '–°–æ–∑–¥–∞–Ω —Ç—É—Ä', item: '–†–∏–º—Å–∫–∏–µ –∫–∞–Ω–∏–∫—É–ª—ã', time: '5 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥' },
                    { action: '–û–±–Ω–æ–≤–ª–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç', item: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', time: '10 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥' }
                ];

                container.innerHTML = activities.map(activity => `
                    <div class="tour-card">
                        <div class="tour-header">
                            <div>
                                <strong>${activity.action}</strong>
                                <div style="color: #666; margin-top: 0.25rem;">${activity.item}</div>
                            </div>
                            <span style="color: #999; font-size: 0.9rem;">${activity.time}</span>
                        </div>
                    </div>
                `).join('');
            }

            renderCountries() {
                const container = document.getElementById('countries-list');
                
                if (this.countries.length === 0) {
                    container.innerHTML = `
                        <div style="text-align: center; padding: 3rem; color: #666; grid-column: 1 / -1;">
                            <i class="fas fa-globe-americas" style="font-size: 4rem; margin-bottom: 1rem;"></i>
                            <h3>–°—Ç—Ä–∞–Ω –ø–æ–∫–∞ –Ω–µ—Ç</h3>
                            <p>–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω—É –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É –≤—ã—à–µ</p>
                        </div>
                    `;
                    return;
                }

                container.innerHTML = this.countries.map(country => `
                    <div class="card">
                        <div class="card-header">
                            <h4 style="margin: 0; color: white;">${country.name}</h4>
                        </div>
                        <div class="card-body">
                            <p style="color: #666; margin-bottom: 1rem;">${country.shortDescription || country.description || ''}</p>
                            <div style="display: flex; justify-content: space-between; align-items: center;">
                                <strong style="color: var(--primary);">${country.price}</strong>
                                <span style="font-size: 0.9rem; color: #999;">${country.tours ? country.tours.length : 0} —Ç—É—Ä–æ–≤</span>
                            </div>
                        </div>
                        <div class="card-actions">
                            <button class="btn" onclick="admin.editCountry('${country.id}')">
                                <i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                            </button>
                            <button class="btn btn-danger" onclick="admin.deleteCountry('${country.id}')">
                                <i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å
                            </button>
                        </div>
                    </div>
                `).join('');
            }

            renderTours() {
                const container = document.getElementById('tours-list');
                
                if (this.tours.length === 0) {
                    container.innerHTML = `
                        <div style="text-align: center; padding: 3rem; color: #666;">
                            <i class="fas fa-map-marked-alt" style="font-size: 4rem; margin-bottom: 1rem;"></i>
                            <h3>–¢—É—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</h3>
                            <p>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —Ç—É—Ä –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É –≤—ã—à–µ</p>
                        </div>
                    `;
                    return;
                }

                container.innerHTML = this.tours.map(tour => `
                    <div class="tour-card">
                        <div class="tour-header">
                            <div>
                                <h4 style="margin: 0 0 0.5rem 0;">${tour.name}</h4>
                                <span class="tour-country">${tour.country}</span>
                            </div>
                            <div style="text-align: right;">
                                <div style="font-weight: bold; color: var(--primary);">${tour.price}</div>
                                <div style="color: #666; font-size: 0.9rem;">${tour.duration}</div>
                            </div>
                        </div>
                        <p style="color: #666; margin: 0;">${tour.description || ''}</p>
                        <div style="margin-top: 1rem; display: flex; gap: 0.5rem;">
                            <button class="btn" onclick="admin.editTour('${tour.id}')">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-danger" onclick="admin.deleteTour('${tour.id}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                `).join('');
            }

            openCountryModal(countryId = null) {
                this.currentEditingId = countryId;
                const modal = document.getElementById('countryModal');
                const title = document.getElementById('countryModalTitle');

                if (countryId) {
                    title.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω—É';
                    this.fillCountryForm(countryId);
                } else {
                    title.textContent = '–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—É';
                    this.resetCountryForm();
                }

                this.openModal('countryModal');
            }

            fillCountryForm(countryId) {
                const country = this.countries.find(c => c.id === countryId);
                if (country) {
                    document.getElementById('country-name').value = country.name;
                    document.getElementById('country-short-description').value = country.shortDescription || '';
                    document.getElementById('country-description').value = country.description || '';
                    document.getElementById('country-price').value = country.price || '';
                    document.getElementById('country-capital').value = country.capital || '';
                    document.getElementById('country-language').value = country.language || '';
                    document.getElementById('country-currency').value = country.currency || '';
                }
            }

            resetCountryForm() {
                document.getElementById('countryForm').reset();
            }

            saveCountry() {
                const name = document.getElementById('country-name').value;
                const shortDescription = document.getElementById('country-short-description').value;
                const description = document.getElementById('country-description').value;
                const price = document.getElementById('country-price').value;
                const capital = document.getElementById('country-capital').value;
                const language = document.getElementById('country-language').value;
                const currency = document.getElementById('country-currency').value;

                if (!name || !shortDescription || !price) {
                    this.showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
                    return;
                }

                const countryData = {
                    id: this.currentEditingId || this.generateId(name),
                    name: name,
                    shortDescription: shortDescription,
                    description: description,
                    price: price,
                    capital: capital,
                    language: language,
                    currency: currency,
                    images: [],
                    tours: []
                };

                if (this.currentEditingId) {
                    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                    const index = this.countries.findIndex(c => c.id === this.currentEditingId);
                    if (index !== -1) {
                        this.countries[index] = { ...this.countries[index], ...countryData };
                    }
                    this.showNotification('‚úÖ –°—Ç—Ä–∞–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!', 'success');
                } else {
                    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ
                    this.countries.push(countryData);
                    this.showNotification('‚úÖ –°—Ç—Ä–∞–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!', 'success');
                }

                this.saveData();
                this.closeModal('countryModal');
                this.renderCountries();
            }

                        openTourModal(tourId = null) {
                this.currentEditingId = tourId;
                const modal = document.getElementById('tourModal');
                const title = document.getElementById('tourModalTitle');

                // –ó–∞–ø–æ–ª–Ω—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω
                this.populateCountrySelect();

                if (tourId) {
                    title.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä';
                    this.fillTourForm(tourId);
                } else {
                    title.textContent = '–°–æ–∑–¥–∞—Ç—å —Ç—É—Ä';
                    this.resetTourForm();
                }

                this.openModal('tourModal');
            }

            populateCountrySelect() {
                const select = document.getElementById('tour-country');
                select.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É</option>';
                
                this.countries.forEach(country => {
                    const option = document.createElement('option');
                    option.value = country.name;
                    option.textContent = country.name;
                    select.appendChild(option);
                });
            }

            fillTourForm(tourId) {
                const tour = this.tours.find(t => t.id === tourId);
                if (tour) {
                    document.getElementById('tour-name').value = tour.name;
                    document.getElementById('tour-country').value = tour.country;
                    document.getElementById('tour-duration').value = tour.duration;
                    document.getElementById('tour-price').value = tour.price;
                    document.getElementById('tour-description').value = tour.description || '';
                }
            }

            resetTourForm() {
                document.getElementById('tourForm').reset();
            }

            saveTour() {
                const name = document.getElementById('tour-name').value;
                const country = document.getElementById('tour-country').value;
                const duration = document.getElementById('tour-duration').value;
                const price = document.getElementById('tour-price').value;
                const description = document.getElementById('tour-description').value;

                if (!name || !country || !duration || !price) {
                    this.showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
                    return;
                }

                const tourData = {
                    id: this.currentEditingId || this.generateId(name),
                    name: name,
                    country: country,
                    duration: duration,
                    price: price,
                    description: description,
                    createdAt: new Date().toISOString()
                };

                if (this.currentEditingId) {
                    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                    const index = this.tours.findIndex(t => t.id === this.currentEditingId);
                    if (index !== -1) {
                        this.tours[index] = { ...this.tours[index], ...tourData };
                    }
                    this.showNotification('‚úÖ –¢—É—Ä –æ–±–Ω–æ–≤–ª–µ–Ω!', 'success');
                } else {
                    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ
                    this.tours.push(tourData);
                    this.showNotification('‚úÖ –¢—É—Ä —Å–æ–∑–¥–∞–Ω!', 'success');
                }

                this.saveData();
                this.closeModal('tourModal');
                this.renderTours();
            }

            editCountry(countryId) {
                this.openCountryModal(countryId);
            }

            editTour(tourId) {
                this.openTourModal(tourId);
            }

            deleteCountry(countryId) {
                if (confirm('–£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É? –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç—É—Ä—ã —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.')) {
                    // –£–¥–∞–ª—è–µ–º —Ç—É—Ä—ã —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã
                    this.tours = this.tours.filter(t => {
                        const country = this.countries.find(c => c.id === countryId);
                        return !country || t.country !== country.name;
                    });

                    // –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–∞–Ω—É
                    this.countries = this.countries.filter(c => c.id !== countryId);
                    
                    this.saveData();
                    this.renderCountries();
                    this.renderTours();
                    this.showNotification('‚úÖ –°—Ç—Ä–∞–Ω–∞ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç—É—Ä—ã —É–¥–∞–ª–µ–Ω—ã!', 'success');
                }
            }

            deleteTour(tourId) {
                if (confirm('–£–¥–∞–ª–∏—Ç—å —Ç—É—Ä?')) {
                    this.tours = this.tours.filter(t => t.id !== tourId);
                    this.saveData();
                    this.renderTours();
                    this.showNotification('‚úÖ –¢—É—Ä —É–¥–∞–ª–µ–Ω!', 'success');
                }
            }

            loadContent() {
                const data = this.getContentData();
                document.getElementById('hero-title').value = data.heroTitle;
                document.getElementById('hero-text').value = data.heroText;
                document.getElementById('contact-phone').value = data.contactPhone;
                document.getElementById('contact-email').value = data.contactEmail;
                document.getElementById('contact-address').value = data.contactAddress;
            }

            getContentData() {
                const data = sessionStorage.getItem('worldtravel_data') || 
                            localStorage.getItem('worldtravel_data');
                if (data) {
                    const parsed = JSON.parse(data);
                    return parsed.content || this.getDefaultContent();
                }
                return this.getDefaultContent();
            }

            getDefaultContent() {
                return {
                    heroTitle: '–û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä —Å WorldTravel',
                    heroText: '–ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –û—Ç —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–ª—è–∂–µ–π –¥–æ –≥–æ—Ä–Ω—ã—Ö –≤–µ—Ä—à–∏–Ω - –≤–∞—à–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å.',
                    contactPhone: '+7 (999) 123-45-67',
                    contactEmail: 'info@worldtravel.com',
                    contactAddress: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è, 15'
                };
            }

            saveContent() {
                const content = {
                    heroTitle: document.getElementById('hero-title').value,
                    heroText: document.getElementById('hero-text').value,
                    contactPhone: document.getElementById('contact-phone').value,
                    contactEmail: document.getElementById('contact-email').value,
                    contactAddress: document.getElementById('contact-address').value
                };

                this.updateContentData(content);
                this.showNotification('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!', 'success');
            }

            updateContentData(content) {
                const data = sessionStorage.getItem('worldtravel_data') || 
                            localStorage.getItem('worldtravel_data');
                
                let parsed = { countries: [], tours: [], settings: {}, content: {} };
                if (data) {
                    parsed = JSON.parse(data);
                }

                parsed.content = content;
                parsed.lastUpdate = new Date().toISOString();

                sessionStorage.setItem('worldtravel_data', JSON.stringify(parsed));
                localStorage.setItem('worldtravel_data', JSON.stringify(parsed));
            }

            loadSettings() {
                document.getElementById('company-name').value = this.settings.companyName || 'WorldTravel';
                document.getElementById('default-currency').value = this.settings.defaultCurrency || '$';
                document.getElementById('interface-language').value = this.settings.interfaceLanguage || 'ru';
            }

            saveSettings() {
                this.settings = {
                    companyName: document.getElementById('company-name').value,
                    defaultCurrency: document.getElementById('default-currency').value,
                    interfaceLanguage: document.getElementById('interface-language').value
                };

                this.saveData();
                this.showNotification('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', 'success');
            }

            exportData() {
                const data = {
                    countries: this.countries,
                    tours: this.tours,
                    settings: this.settings,
                    content: this.getContentData(),
                    exportDate: new Date().toISOString(),
                    version: '1.0'
                };

                const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `worldtravel-backup-${new Date().toISOString().split('T')[0]}.json`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);

                this.showNotification('‚úÖ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
            }

            importData() {
                const input = document.createElement('input');
                input.type = 'file';
                input.accept = '.json';
                
                input.onchange = (e) => {
                    const file = e.target.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = (event) => {
                            try {
                                const data = JSON.parse(event.target.result);
                                
                                if (confirm('–ó–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏?')) {
                                    this.countries = data.countries || [];
                                    this.tours = data.tours || [];
                                    this.settings = data.settings || {};
                                    
                                    if (data.content) {
                                        this.updateContentData(data.content);
                                    }
                                    
                                    this.saveData();
                                    this.showNotification('‚úÖ –î–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
                                    this.renderDashboard();
                                    this.renderCountries();
                                    this.renderTours();
                                }
                            } catch (error) {
                                this.showNotification('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞', 'error');
                            }
                        };
                        reader.readAsText(file);
                    }
                };
                
                input.click();
            }

            clearData() {
                if (confirm('–í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ (—Å—Ç—Ä–∞–Ω—ã, —Ç—É—Ä—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏). –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
                    this.countries = [];
                    this.tours = [];
                    this.settings = {};
                    
                    sessionStorage.removeItem('worldtravel_data');
                    localStorage.removeItem('worldtravel_data');
                    
                    this.showNotification('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã!', 'success');
                    this.renderDashboard();
                    this.renderCountries();
                    this.renderTours();
                }
            }

            addSampleData() {
                const sampleCountries = [
                    {
                        id: 'france',
                        name: '–§—Ä–∞–Ω—Ü–∏—è',
                        shortDescription: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –§—Ä–∞–Ω—Ü–∏—è —Å –µ—ë –±–æ–≥–∞—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π –∏ –∏–∑—ã—Å–∫–∞–Ω–Ω–æ–π –∫—É—Ö–Ω–µ–π.',
                        description: '–§—Ä–∞–Ω—Ü–∏—è - —Å—Ç—Ä–∞–Ω–∞ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –º–æ–¥—ã –∏ –≥–∞—Å—Ç—Ä–æ–Ω–æ–º–∏–∏. –ü–æ—Å–µ—Ç–∏—Ç–µ –≠–π—Ñ–µ–ª–µ–≤—É –±–∞—à–Ω—é, –õ—É–≤—Ä –∏ –ø—Ä–æ–≤–∞–Ω—Å–∞–ª—å—Å–∫–∏–µ –ø–æ–ª—è –ª–∞–≤–∞–Ω–¥—ã.',
                        price: '–æ—Ç ‚Ç¨800',
                        capital: '–ü–∞—Ä–∏–∂',
                        language: '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π',
                        currency: '–ï–≤—Ä–æ (‚Ç¨)',
                        images: [],
                        tours: []
                    },
                    {
                        id: 'italy',
                        name: '–ò—Ç–∞–ª–∏—è',
                        shortDescription: '–°—Ç—Ä–∞–Ω–∞ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –¥—Ä–µ–≤–Ω–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Å–∞–º–æ–π –≤–∫—É—Å–Ω–æ–π –∫—É—Ö–Ω–∏ –≤ –º–∏—Ä–µ.',
                        description: '–ò—Ç–∞–ª–∏—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º –±–æ–≥–∞—Ç–æ–µ –∫—É–ª—å—Ç—É—Ä–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–∏–µ, –æ—Ç –î—Ä–µ–≤–Ω–µ–≥–æ –†–∏–º–∞ –¥–æ —ç–ø–æ—Ö–∏ –í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è.',
                        price: '–æ—Ç ‚Ç¨750',
                        capital: '–†–∏–º',
                        language: '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π',
                        currency: '–ï–≤—Ä–æ (‚Ç¨)',
                        images: [],
                        tours: []
                    }
                ];

                const sampleTours = [
                    {
                        id: 'paris-weekend',
                        name: '–ü–∞—Ä–∏–∂—Å–∫–∏–µ –≤—ã—Ö–æ–¥–Ω—ã–µ',
                        country: '–§—Ä–∞–Ω—Ü–∏—è',
                        duration: '3 –¥–Ω—è',
                        price: '‚Ç¨450',
                        description: '–≠–∫—Å–ø—Ä–µ—Å—Å-—Ç—É—Ä –ø–æ —Å–∞–º—ã–º –∑–Ω–∞–∫–æ–≤—ã–º –º–µ—Å—Ç–∞–º –ü–∞—Ä–∏–∂–∞',
                        createdAt: new Date().toISOString()
                    },
                    {
                        id: 'rome-classic',
                        name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –†–∏–º',
                        country: '–ò—Ç–∞–ª–∏—è',
                        duration: '5 –¥–Ω–µ–π',
                        price: '‚Ç¨600',
                        description: '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –≥–ª–∞–≤–Ω—ã–º–∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏ –í–µ—á–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞',
                        createdAt: new Date().toISOString()
                    }
                ];

                this.countries = [...this.countries, ...sampleCountries];
                this.tours = [...this.tours, ...sampleTours];
                this.saveData();
                
                this.showNotification('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã!', 'success');
                this.renderDashboard();
                this.renderCountries();
                this.renderTours();
            }

            openModal(modalId) {
                const modal = document.getElementById(modalId);
                if (modal) {
                    modal.classList.add('active');
                }
            }

            closeModal(modalId) {
                const modal = document.getElementById(modalId);
                if (modal) {
                    modal.classList.remove('active');
                }
                this.currentEditingId = null;
            }

            showNotification(message, type = 'success') {
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.innerHTML = `
                    <i class="fas fa-${type === 'success' ? 'check' : 'exclamation'}-circle"></i>
                    <span>${message}</span>
                    <button class="notification-close" onclick="this.parentElement.remove()">&times;</button>
                `;

                document.body.appendChild(notification);

                // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
                setTimeout(() => notification.classList.add('show'), 100);

                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
                setTimeout(() => {
                    if (notification.parentElement) {
                        notification.remove();
                    }
                }, 5000);
            }

            generateId(name) {
                return name.toLowerCase()
                    .replace(/[^a-z0-9–∞-—è—ë]/g, '-')
                    .replace(/-+/g, '-')
                    .replace(/^-|-$/g, '') + '-' + Date.now();
            }

            logout() {
                if (confirm('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏?')) {
                    localStorage.removeItem('adminSession');
                    sessionStorage.removeItem('adminSession');
                    window.location.href = 'admin-login.html';
                }
            }
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        let admin;
        document.addEventListener('DOMContentLoaded', () => {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏
            const session = localStorage.getItem('adminSession') || sessionStorage.getItem('adminSession');
            if (!session) {
                window.location.href = 'admin-login.html';
                return;
            }

            admin = new SuperAdmin();
            window.admin = admin;

            // –ó–∞—â–∏—Ç–∞ –æ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∫–µ
            document.addEventListener('contextmenu', (e) => e.preventDefault());
            document.addEventListener('copy', (e) => e.preventDefault());
            document.addEventListener('cut', (e) => e.preventDefault());
        });
    </script>
</body>
</html>


=== FILE: ./update-content.js ===
// Enhanced content updater with reliable change application and custom sections support
class ContentUpdater {
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ContentUpdater

class FixedContentUpdater extends ContentUpdater {
    applyCustomSections(data) {
        if (!data.pageStructure || !data.content) return;

        console.log('üîÑ Applying custom sections with order:', data.pageStructure);

        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º
        let customSectionsContainer = document.getElementById('custom-sections');
        if (!customSectionsContainer) {
            customSectionsContainer = document.createElement('div');
            customSectionsContainer.id = 'custom-sections';
            const footer = document.querySelector('footer');
            const contact = document.querySelector('#contact');
            const insertBefore = footer || document.body.lastElementChild;
            
            if (insertBefore) {
                insertBefore.parentNode.insertBefore(customSectionsContainer, insertBefore);
            } else {
                document.body.appendChild(customSectionsContainer);
            }
        }

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        customSectionsContainer.innerHTML = '';

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        data.pageStructure.forEach(sectionId => {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ (–æ–Ω–∏ —É–∂–µ –µ—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
            const standardSections = ['hero', 'about', 'services', 'destinations', 'contact', 'footer'];
            if (standardSections.includes(sectionId)) return;

            if (data.content[sectionId]) {
                this.renderCustomSection(customSectionsContainer, data.content[sectionId]);
            }
        });

        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        if (customSectionsContainer.children.length > 0) {
            this.ensureCustomStyles();
        }
    }

    applyContentChanges(content) {
        if (!content) return;

        console.log('üìù Applying content changes to page structure');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
        super.applyContentChanges(content);

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
        this.applyCustomSections(this.getCurrentData());
    }

    // –£–ª—É—á—à–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    getCurrentData() {
        // Try multiple sources for data
        if (typeof window.dataManager !== 'undefined' && window.dataManager) {
            const data = window.dataManager.getData();
            if (data && data.pageStructure) {
                console.log('üìÅ Using DataManager data with page structure:', data.pageStructure);
                return data;
            }
        }

        // Try localStorage
        try {
            const localData = localStorage.getItem('worldtravel_data');
            if (localData) {
                const data = JSON.parse(localData);
                if (data.pageStructure) {
                    console.log('üìÅ Using localStorage data with page structure:', data.pageStructure);
                    return data;
                }
            }
        } catch (error) {
            console.error('Error parsing localStorage data:', error);
        }

        return this.getDefaultData();
    }

    getDefaultData() {
        return {
            content: {},
            pageStructure: ['hero', 'about', 'services', 'destinations', 'contact'],
            lastUpdate: new Date().toISOString()
        };
    }
}

// –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π ContentUpdater –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π
window.contentUpdater = new FixedContentUpdater();
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ContentUpdater

class FixedContentUpdater extends ContentUpdater {
    applyCustomSections(data) {
        if (!data.pageStructure || !data.content) return;

        console.log('üîÑ Applying custom sections with order:', data.pageStructure);

        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º
        let customSectionsContainer = document.getElementById('custom-sections');
        if (!customSectionsContainer) {
            customSectionsContainer = document.createElement('div');
            customSectionsContainer.id = 'custom-sections';
            const footer = document.querySelector('footer');
            const contact = document.querySelector('#contact');
            const insertBefore = footer || document.body.lastElementChild;
            
            if (insertBefore) {
                insertBefore.parentNode.insertBefore(customSectionsContainer, insertBefore);
            } else {
                document.body.appendChild(customSectionsContainer);
            }
        }

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        customSectionsContainer.innerHTML = '';

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        data.pageStructure.forEach(sectionId => {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ (–æ–Ω–∏ —É–∂–µ –µ—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
            const standardSections = ['hero', 'about', 'services', 'destinations', 'contact', 'footer'];
            if (standardSections.includes(sectionId)) return;

            if (data.content[sectionId]) {
                this.renderCustomSection(customSectionsContainer, data.content[sectionId]);
            }
        });

        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        if (customSectionsContainer.children.length > 0) {
            this.ensureCustomStyles();
        }
    }

    applyContentChanges(content) {
        if (!content) return;

        console.log('üìù Applying content changes to page structure');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
        super.applyContentChanges(content);

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
        this.applyCustomSections(this.getCurrentData());
    }

    // –£–ª—É—á—à–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    getCurrentData() {
        // Try multiple sources for data
        if (typeof window.dataManager !== 'undefined' && window.dataManager) {
            const data = window.dataManager.getData();
            if (data && data.pageStructure) {
                console.log('üìÅ Using DataManager data with page structure:', data.pageStructure);
                return data;
            }
        }

        // Try localStorage
        try {
            const localData = localStorage.getItem('worldtravel_data');
            if (localData) {
                const data = JSON.parse(localData);
                if (data.pageStructure) {
                    console.log('üìÅ Using localStorage data with page structure:', data.pageStructure);
                    return data;
                }
            }
        } catch (error) {
            console.error('Error parsing localStorage data:', error);
        }

        return this.getDefaultData();
    }

    getDefaultData() {
        return {
            content: {},
            pageStructure: ['hero', 'about', 'services', 'destinations', 'contact'],
            lastUpdate: new Date().toISOString()
        };
    }
}

// –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π ContentUpdater –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π
window.contentUpdater = new FixedContentUpdater();
    constructor() {
        this.appliedChanges = new Set();
        this.init();
    }

    init() {
        console.log('üöÄ ContentUpdater initialized');
        
        // Apply changes when DOM is ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => {
                setTimeout(() => this.applyAllChanges(), 100);
            });
        } else {
            setTimeout(() => this.applyAllChanges(), 100);
        }

        // Listen for data updates
        window.addEventListener('dataUpdated', (e) => {
            console.log('üîÑ Data update received:', e.detail);
            setTimeout(() => this.applyAllChanges(), 50);
        });

        // Listen for storage changes (from editor)
        window.addEventListener('storage', (e) => {
            if (e.key === 'worldtravel_data') {
                console.log('üì¶ Storage change detected, updating content...');
                setTimeout(() => this.applyAllChanges(), 100);
            }
        });

        // Periodic check for changes
        setInterval(() => this.applyAllChanges(), 3000);

        // Also apply changes when coming from editor
        if (window.location.search.includes('editor=true')) {
            setTimeout(() => this.applyAllChanges(), 500);
        }
    }

    applyAllChanges() {
        const data = this.getCurrentData();
        if (!data) {
            console.log('üì≠ No data available');
            return;
        }

        const changeHash = this.getDataHash(data);
        if (this.appliedChanges.has(changeHash)) {
            return; // Changes already applied
        }

        console.log('üîÑ Applying changes to page...', {
            content: Object.keys(data.content || {}).length,
            contacts: data.contacts ? 'yes' : 'no',
            pageStructure: data.pageStructure ? data.pageStructure.length : 0
        });
        
        this.applyContentChanges(data.content);
        this.applyContactChanges(data.contacts);
        this.applySettingsChanges(data.settings);
        this.applyCustomSections(data);
        
        this.appliedChanges.add(changeHash);
        console.log('‚úÖ Changes applied successfully');
    }

    getCurrentData() {
        // Try multiple sources for data
        if (typeof window.dataManager !== 'undefined' && window.dataManager) {
            const data = window.dataManager.getData();
            if (data) {
                console.log('üìÅ Using DataManager data');
                return data;
            }
        }

        // Try localStorage
        try {
            const localData = localStorage.getItem('worldtravel_data');
            if (localData) {
                const data = JSON.parse(localData);
                console.log('üìÅ Using localStorage data');
                return data;
            }
        } catch (error) {
            console.error('Error parsing localStorage data:', error);
        }

        return null;
    }

    getDataHash(data) {
        return JSON.stringify({
            content: data.content,
            contacts: data.contacts,
            settings: data.settings,
            pageStructure: data.pageStructure,
            timestamp: data.lastUpdate
        });
    }

    applyContentChanges(content) {
        if (!content) return;

        console.log('üìù Applying content changes:', Object.keys(content));

        // Hero section
        if (content.hero) {
            this.updateElement('#home h1, .hero h1, section:first-of-type h1', content.hero.title);
            this.updateElement('#home p, .hero p, section:first-of-type p', content.hero.subtitle);
            if (content.hero.image) {
                this.updateImages('.hero-image img, .image-placeholder img', content.hero.image);
            }
        }

        // About section
        if (content.about) {
            this.updateElement('#about .section-title, .about .section-title, section:nth-of-type(2) .section-title', content.about.title);
            this.updateElement('.about-text p, #about p, .about p, section:nth-of-type(2) p', content.about.description);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            if (content.about.image) {
                this.updateImages('.about-image img, .image-placeholder img', content.about.image);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            this.updateNavigation('about', content.about.title);
            
            if (content.about.stats) {
                this.updateStats(content.about.stats);
            }
        }

        // Services section
        if (content.services) {
            this.updateElement('#services .section-title, .services .section-title, section:nth-of-type(3) .section-title', content.services.title);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            this.updateNavigation('services', content.services.title);
            
            if (content.services.services) {
                this.updateServices(content.services.services);
            }
        }

        // Destinations section
        if (content.destinations) {
            this.updateElement('#destinations .section-title, .destinations .section-title, section:nth-of-type(4) .section-title', content.destinations.title);
            this.updateElement('.destinations .section-subtitle, .section-subtitle, section:nth-of-type(4) .section-subtitle', content.destinations.subtitle);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            this.updateNavigation('destinations', content.destinations.title);
        }

        // Contact section
        if (content.contact) {
            this.updateElement('#contact .section-title, .contact .section-title, section:nth-of-type(5) .section-title', content.contact.title);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            this.updateNavigation('contact', content.contact.title);
        }

        // Footer section
        if (content.footer) {
            this.updateElement('.footer-section:first-child p:first-child', content.footer.description);
            this.updateElement('.footer-bottom p', content.footer.copyright, true);
        }
    }

    applyCustomSections(data) {
        if (!data.pageStructure || !data.content) return;

        console.log('üîÑ Applying custom sections...', data.pageStructure);

        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º
        let customSectionsContainer = document.getElementById('custom-sections');
        if (!customSectionsContainer) {
            customSectionsContainer = document.createElement('div');
            customSectionsContainer.id = 'custom-sections';
            const footer = document.querySelector('footer');
            const contact = document.querySelector('#contact');
            const insertBefore = footer || document.body.lastElementChild;
            
            if (insertBefore) {
                insertBefore.parentNode.insertBefore(customSectionsContainer, insertBefore);
            } else {
                document.body.appendChild(customSectionsContainer);
            }
        }

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        customSectionsContainer.innerHTML = '';

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
        data.pageStructure.forEach(sectionId => {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
            const standardSections = ['hero', 'about', 'services', 'destinations', 'contact', 'footer'];
            if (standardSections.includes(sectionId)) return;

            if (data.content[sectionId]) {
                this.renderCustomSection(customSectionsContainer, data.content[sectionId]);
            }
        });

        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        if (customSectionsContainer.children.length > 0) {
            this.ensureCustomStyles();
        }
    }

    renderCustomSection(container, sectionData) {
        const sectionElement = document.createElement('section');
        sectionElement.className = `custom-section ${sectionData.type}-section`;
        sectionElement.id = sectionData.id;
        sectionElement.setAttribute('data-section-id', sectionData.id);

        console.log('ÔøΩÔøΩ Rendering custom section:', sectionData.id, sectionData.type);

        switch (sectionData.type) {
            case 'text':
                sectionElement.innerHTML = `
                    <div class="container">
                        <h2 class="section-title">${sectionData.title || ''}</h2>
                        <div class="section-content">
                            <p>${sectionData.content || ''}</p>
                        </div>
                    </div>
                `;
                break;
            case 'image':
                sectionElement.innerHTML = `
                    <div class="container">
                        <div class="section-content" style="display: flex; gap: 30px; align-items: center; flex-wrap: wrap;">
                            <div class="text-content" style="flex: 1; min-width: 300px;">
                                <h2 class="section-title">${sectionData.title || ''}</h2>
                                <p>${sectionData.content || ''}</p>
                            </div>
                            <div class="image-content" style="flex: 1; min-width: 300px; text-align: center;">
                                ${sectionData.image ? `<img src="${sectionData.image}" alt="${sectionData.title}" style="max-width: 100%; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">` : ''}
                            </div>
                        </div>
                    </div>
                `;
                break;
            case 'features':
                sectionElement.innerHTML = `
                    <div class="container">
                        <h2 class="section-title">${sectionData.title || ''}</h2>
                        <div class="features-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 30px; margin-top: 40px;">
                            ${(sectionData.features || []).map(feature => `
                                <div class="feature-item" style="text-align: center; padding: 30px 20px; background: white; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.1); transition: transform 0.3s ease;">
                                    <div class="feature-icon" style="font-size: 3em; margin-bottom: 20px; color: #2c5aa0;">
                                        <i class="${feature.icon || 'fas fa-star'}"></i>
                                    </div>
                                    <h3 style="margin-bottom: 15px; color: #333;">${feature.title || ''}</h3>
                                    <p style="color: #666; line-height: 1.6;">${feature.description || ''}</p>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                `;
                break;
            case 'cta':
                sectionElement.innerHTML = `
                    <div class="container">
                        <div class="cta-section" style="text-align: center; padding: 60px 40px; background: linear-gradient(135deg, #2c5aa0, #4a7bc8); color: white; border-radius: 15px; margin: 40px 0;">
                            <h2 style="margin-bottom: 20px; font-size: 2.5em;">${sectionData.title || ''}</h2>
                            <p style="margin-bottom: 30px; font-size: 1.2em; opacity: 0.9;">${sectionData.description || ''}</p>
                            ${sectionData.buttonText ? `
                                <a href="${sectionData.buttonUrl || '#'}" class="cta-button" style="background: white; color: #2c5aa0; padding: 15px 40px; border-radius: 30px; text-decoration: none; font-weight: 600; display: inline-block; font-size: 1.1em; transition: all 0.3s ease;">
                                    ${sectionData.buttonText}
                                </a>
                            ` : ''}
                        </div>
                    </div>
                `;
                break;
            case 'contacts':
                sectionElement.innerHTML = `
                    <div class="container">
                        <h2 class="section-title">${sectionData.title || '–ö–æ–Ω—Ç–∞–∫—Ç—ã'}</h2>
                        <div class="contact-content" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 40px; margin-top: 40px;">
                            <div class="contact-info" style="background: white; padding: 30px; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">
                                <h3 style="margin-bottom: 20px; color: #2c5aa0;">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                                ${sectionData.phone ? `
                                    <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-phone" style="color: #2c5aa0;"></i>
                                        <span style="font-weight: 500;">${sectionData.phone}</span>
                                    </div>
                                ` : ''}
                                ${sectionData.email ? `
                                    <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-envelope" style="color: #2c5aa0;"></i>
                                        <span style="font-weight: 500;">${sectionData.email}</span>
                                    </div>
                                ` : ''}
                                ${sectionData.address ? `
                                    <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-map-marker-alt" style="color: #2c5aa0;"></i>
                                        <span style="font-weight: 500;">${sectionData.address}</span>
                                    </div>
                                ` : ''}
                                ${sectionData.hours ? `
                                    <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-clock" style="color: #2c5aa0;"></i>
                                        <span style="font-weight: 500;">${sectionData.hours}</span>
                                    </div>
                                ` : ''}
                            </div>
                        </div>
                    </div>
                `;
                break;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        sectionElement.style.padding = '80px 0';
        sectionElement.style.background = sectionData.type === 'cta' ? 'transparent' : '#f8f9fa';
        
        if (sectionData.type === 'cta') {
            sectionElement.style.padding = '40px 0';
        }

        container.appendChild(sectionElement);
    }

    ensureCustomStyles() {
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–µ–∫—Ü–∏–π –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
        if (!document.getElementById('custom-sections-styles')) {
            const style = document.createElement('style');
            style.id = 'custom-sections-styles';
            style.textContent = `
                .custom-section {
                    transition: all 0.3s ease;
                }
                .custom-section .feature-item:hover {
                    transform: translateY(-5px);
                }
                .custom-section .cta-button:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 8px 25px rgba(255,255,255,0.3);
                }
                @media (max-width: 768px) {
                    .custom-section .section-content {
                        flex-direction: column;
                    }
                }
            `;
            document.head.appendChild(style);
        }
    }

    applyContactChanges(contacts) {
        if (!contacts) return;

        console.log('üìû Applying contact changes:', contacts);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Å–µ–∫—Ü–∏–∏ contact
        if (contacts.phone) {
            this.updateElement('.contact-info .contact-item:nth-child(1) p, .contact-item:first-child p, .footer-section p:nth-child(2)', contacts.phone);
        }
        if (contacts.email) {
            this.updateElement('.contact-info .contact-item:nth-child(2) p, .contact-item:nth-child(2) p, .footer-section p:nth-child(3)', contacts.email);
        }
        if (contacts.address) {
            this.updateElement('.contact-info .contact-item:nth-child(3) p, .contact-item:nth-child(3) p, .footer-section p:nth-child(4)', contacts.address);
        }
        if (contacts.hours) {
            this.updateElement('.contact-info .contact-item:nth-child(4) p, .contact-item:nth-child(4) p', contacts.hours);
        }
    }

    applySettingsChanges(settings) {
        if (!settings) return;

        console.log('‚öôÔ∏è Applying settings changes:', settings);

        if (settings.siteTitle) {
            document.title = settings.siteTitle;
        }
        if (settings.companyName) {
            this.updateElement('.logo h2', settings.companyName);
        }
    }

    updateElement(selector, value, isHtml = false) {
        const elements = document.querySelectorAll(selector);
        if (elements.length > 0 && value) {
            elements.forEach(element => {
                if (isHtml) {
                    element.innerHTML = value;
                } else {
                    element.textContent = value;
                }
            });
            console.log('‚úÖ Updated element:', selector, value);
        }
    }

    updateImages(selector, imageUrl) {
        const elements = document.querySelectorAll(selector);
        if (elements.length > 0 && imageUrl) {
            elements.forEach(element => {
                element.src = imageUrl;
                element.onerror = () => {
                    console.warn('‚ö†Ô∏è Failed to load image:', imageUrl);
                    element.src = 'images/travel-placeholder.svg';
                };
            });
            console.log('üñºÔ∏è Updated image:', selector, imageUrl);
        }
    }

    updateNavigation(sectionId, title) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        const navLinks = document.querySelectorAll(`a[href="#${sectionId}"]`);
        if (navLinks.length > 0 && title) {
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        }
    }

    updateStats(stats) {
        const statsContainer = document.querySelector('.stats');
        if (statsContainer && stats.length > 0) {
            statsContainer.innerHTML = stats.map(stat => `
                <div class="stat animate-counter" data-target="${stat.value}">
                    <h3>${stat.value}</h3>
                    <p>${stat.label}</p>
                </div>
            `).join('');
            console.log('üìä Updated stats:', stats.length, 'items');
        }
    }

    updateServices(services) {
        const servicesGrid = document.querySelector('.services-grid');
        if (servicesGrid && services.length > 0) {
            servicesGrid.innerHTML = services.map((service, index) => {
                const animations = ['slide-in-left', 'slide-in-bottom', 'slide-in-right', 'slide-in-top'];
                const animationClass = animations[index % animations.length] || 'slide-in-bottom';
                
                return `
                    <div class="service-card ${animationClass}">
                        <div class="service-icon"><i class="${service.icon || 'fas fa-star'}"></i></div>
                        <h3>${service.title}</h3>
                        <p>${service.description}</p>
                    </div>
                `;
            }).join('');
            console.log('üéØ Updated services:', services.length, 'items');
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    forceUpdate() {
        this.appliedChanges.clear();
        this.applyAllChanges();
        console.log('üîÑ Forced content update');
    }
}

// Initialize content updater
const contentUpdater = new ContentUpdater();

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
window.updatePageContent = function() {
    if (window.contentUpdater) {
        window.contentUpdater.forceUpdate();
    }
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
window.addEventListener('storage', function(e) {
    if (e.key === 'worldtravel_data' && window.contentUpdater) {
        setTimeout(() => window.contentUpdater.forceUpdate(), 100);
    }
});

console.log('‚úÖ ContentUpdater ready with auto-refresh functionality');
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ContentUpdater

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥—ã ContentUpdater –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫
ContentUpdater.prototype.applyCustomSections = function(data) {
    if (!data.pageStructure || !data.content) return;

    console.log('üîÑ Applying custom sections with order:', data.pageStructure);

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º
    let customSectionsContainer = document.getElementById('custom-sections');
    if (!customSectionsContainer) {
        customSectionsContainer = document.createElement('div');
        customSectionsContainer.id = 'custom-sections';
        const footer = document.querySelector('footer');
        const contact = document.querySelector('#contact');
        const insertBefore = footer || document.body.lastElementChild;
        
        if (insertBefore) {
            insertBefore.parentNode.insertBefore(customSectionsContainer, insertBefore);
        } else {
            document.body.appendChild(customSectionsContainer);
        }
    }

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    customSectionsContainer.innerHTML = '';

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    data.pageStructure.forEach(sectionId => {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ (–æ–Ω–∏ —É–∂–µ –µ—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
        const standardSections = ['hero', 'about', 'services', 'destinations', 'contact', 'footer'];
        if (standardSections.includes(sectionId)) return;

        if (data.content[sectionId]) {
            this.renderCustomSection(customSectionsContainer, data.content[sectionId]);
        }
    });

    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    if (customSectionsContainer.children.length > 0) {
        this.ensureCustomStyles();
    }
};

ContentUpdater.prototype.applyContentChanges = function(content) {
    if (!content) return;

    console.log('üìù Applying content changes to page structure');

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
    // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ call
    ContentUpdater.prototype.originalApplyContentChanges.call(this, content);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
    this.applyCustomSections(this.getCurrentData());
};

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
ContentUpdater.prototype.originalApplyContentChanges = ContentUpdater.prototype.applyContentChanges;

// –£–ª—É—á—à–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
ContentUpdater.prototype.getCurrentData = function() {
    // Try multiple sources for data
    if (typeof window.dataManager !== 'undefined' && window.dataManager) {
        const data = window.dataManager.getData();
        if (data && data.pageStructure) {
            console.log('üìÅ Using DataManager data with page structure:', data.pageStructure);
            return data;
        }
    }

    // Try localStorage
    try {
        const localData = localStorage.getItem('worldtravel_data');
        if (localData) {
            const data = JSON.parse(localData);
            if (data.pageStructure) {
                console.log('ÔøΩÔøΩ Using localStorage data with page structure:', data.pageStructure);
                return data;
            }
        }
    } catch (error) {
        console.error('Error parsing localStorage data:', error);
    }

    return this.getDefaultData();
};

ContentUpdater.prototype.getDefaultData = function() {
    return {
        content: {},
        pageStructure: ['hero', 'about', 'services', 'destinations', 'contact'],
        lastUpdate: new Date().toISOString()
    };
};



=== FILE: ./page-editor.css ===
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: #f5f5f5;
    height: 100vh;
}

.editor-container {
    display: flex;
    height: 100vh;
}

.preview-panel {
    flex: 1;
    background: white;
    border-right: 2px solid #e0e0e0;
    display: flex;
    flex-direction: column;
}

.preview-header {
    padding: 20px;
    border-bottom: 1px solid #e0e0e0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #fafafa;
}

.page-preview {
    flex: 1;
    padding: 20px;
    overflow-y: auto;
}

.editor-panel {
    width: 400px;
    background: white;
    border-left: 2px solid #e0e0e0;
    display: none;
    flex-direction: column;
}

.editor-panel.active {
    display: flex;
}

.editor-header {
    padding: 20px;
    border-bottom: 1px solid #e0e0e0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #fafafa;
}

.editor-content {
    flex: 1;
    padding: 20px;
    overflow-y: auto;
}

.editor-placeholder {
    text-align: center;
    color: #666;
    padding: 40px 20px;
}

.content-block {
    border: 2px solid transparent;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
}

.content-block:hover {
    border-color: #007bff;
    background: #f8f9fa;
}

.content-block.selected {
    border-color: #007bff;
    background: #e3f2fd;
}

.block-text {
    background: #f8f9fa;
}

.block-image {
    background: #fff3cd;
}

.block-hero {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 60px 20px;
    text-align: center;
}

.block-features {
    background: #d1ecf1;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
}

.block-cta {
    background: #d4edda;
    text-align: center;
    padding: 40px 20px;
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: 500;
    color: #333;
}

.form-group input,
.form-group textarea,
.form-group select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
}

.form-group textarea {
    min-height: 100px;
    resize: vertical;
}

.image-upload {
    border: 2px dashed #ddd;
    padding: 20px;
    text-align: center;
    border-radius: 4px;
    cursor: pointer;
}

.image-upload:hover {
    border-color: #007bff;
}

.btn-primary {
    background: #007bff;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
}

.btn-primary:hover {
    background: #0056b3;
}

.btn-secondary {
    background: #6c757d;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
}

.btn-secondary:hover {
    background: #545b62;
}

.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
    z-index: 1000;
}

.modal.active {
    display: flex;
    justify-content: center;
    align-items: center;
}

.modal-content {
    background: white;
    padding: 0;
    border-radius: 8px;
    width: 500px;
    max-width: 90%;
}

.modal-header {
    padding: 20px;
    border-bottom: 1px solid #e0e0e0;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modal-body {
    padding: 20px;
}

.block-preview {
    margin: 20px 0;
    padding: 15px;
    background: #f8f9fa;
    border-radius: 4px;
}

.feature-item {
    background: white;
    padding: 15px;
    border-radius: 4px;
    text-align: center;
}

.close-modal {
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
}

.form-actions {
    display: flex;
    gap: 10px;
    justify-content: flex-end;
    margin-top: 20px;
}



=== FILE: ./countries/armenia.html ===




=== FILE: ./admin-real.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Panel - WorldTravel</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }

        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .admin-header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            color: white;
        }

        .admin-container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 30px;
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .admin-welcome {
            font-size: 24px;
            margin-bottom: 10px;
            color: white;
        }

        .logout-btn {
            background: rgba(231, 76, 60, 0.8);
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            cursor: pointer;
            transition: 0.3s;
        }

        .logout-btn:hover {
            background: rgba(231, 76, 60, 1);
        }

        .admin-section {
            margin-bottom: 30px;
            padding: 20px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
        }

        .section-title {
            color: white;
            margin-bottom: 15px;
            font-size: 20px;
        }

        .country-item {
            background: rgba(255, 255, 255, 0.1);
            padding: 15px;
            margin: 10px 0;
            border-radius: 8px;
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .country-info h4 {
            margin-bottom: 5px;
            color: #fff;
        }

        .country-actions button {
            background: rgba(52, 152, 219, 0.8);
            border: none;
            color: white;
            padding: 8px 15px;
            margin-left: 10px;
            border-radius: 5px;
            cursor: pointer;
            transition: 0.3s;
        }

        .country-actions button:hover {
            background: rgba(52, 152, 219, 1);
        }

        .country-actions button.delete {
            background: rgba(231, 76, 60, 0.8);
        }

        .country-actions button.delete:hover {
            background: rgba(231, 76, 60, 1);
        }

        .add-country-form {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .add-country-form input {
            flex: 1;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background: rgba(255, 255, 255, 0.9);
        }

        .add-country-form button {
            background: rgba(46, 204, 113, 0.8);
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: 0.3s;
        }

        .add-country-form button:hover {
            background: rgba(46, 204, 113, 1);
        }

        .message {
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            text-align: center;
            font-weight: bold;
        }

        .message.success {
            background: rgba(46, 204, 113, 0.2);
            color: #2ecc71;
            border: 1px solid #2ecc71;
        }

        .message.error {
            background: rgba(231, 76, 60, 0.2);
            color: #e74c3c;
            border: 1px solid #e74c3c;
        }
    </style>
</head>
<body>
    <div class="admin-header">
        <div>
            <h1 class="admin-welcome">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è WorldTravel</h1>
            <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º —Å–∞–π—Ç–∞</p>
        </div>
        <button class="logout-btn" onclick="logout()">–í—ã–π—Ç–∏</button>
    </div>

    <div class="admin-container">
        <div class="admin-section">
            <h2 class="section-title">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∞–º–∏</h2>
            
            <div class="add-country-form">
                <input type="text" id="countryName" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã">
                <input type="text" id="countryDesc" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã">
                <button onclick="addCountry()">–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—É</button>
            </div>

            <div id="countriesList">
                <!-- –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω –±—É–¥–µ—Ç –∑–¥–µ—Å—å -->
            </div>
        </div>

        <div class="admin-section">
            <h2 class="section-title">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
            <div style="color: white;">
                <p>–°—Ç—Ä–∞–Ω –≤ –±–∞–∑–µ: <span id="countriesCount">0</span></p>
                <p>–ì–æ—Ä–æ–¥–æ–≤ –≤ –±–∞–∑–µ: <span id="citiesCount">0</span></p>
            </div>
        </div>
    </div>

    <div id="message" class="message"></div>

    <script>
        // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï–¢ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        document.addEventListener('DOMContentLoaded', function() {
            const isAuthenticated = localStorage.getItem('adminAuthenticated');
            console.log('Auth check:', isAuthenticated);
            
            // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
          //  if (!isAuthenticated || isAuthenticated !== 'true') {
            //    console.log('Redirecting to login...');
              //  window.location.href = 'admin-login.html';
            //} else {
                console.log('Access granted to admin panel');
                loadCountries();
                updateStats();
            }
        );

        function logout() {
            localStorage.removeItem('adminAuthenticated');
            localStorage.removeItem('adminUsername');
            localStorage.removeItem('authTime');
            window.location.href = 'admin-login.html';
        }

        function showMessage(text, type) {
            const messageEl = document.getElementById('message');
            messageEl.textContent = text;
            messageEl.className = 'message ' + type;
            
            setTimeout(() => {
                messageEl.textContent = '';
                messageEl.className = 'message';
            }, 3000);
        }

        async function loadCountries() {
            try {
                // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ LocalStorage
                const savedData = localStorage.getItem('travelData');
                let countries = [];
                
                if (savedData) {
                    const data = JSON.parse(savedData);
                    countries = data.countries || [];
                } else {
                    // –ï—Å–ª–∏ –Ω–µ—Ç –≤ LocalStorage, –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞
                    const response = await fetch('./data/content.json');
                    if (response.ok) {
                        const data = await response.json();
                        countries = data.countries || [];
                    }
                }
                
                displayCountries(countries);
                updateStats();
            } catch (error) {
                console.error('Error loading countries:', error);
                showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö', 'error');
            }
        }

        function displayCountries(countries) {
            const container = document.getElementById('countriesList');
            
            if (countries.length === 0) {
                container.innerHTML = '<p style="color: white; text-align: center;">–°—Ç—Ä–∞–Ω –ø–æ–∫–∞ –Ω–µ—Ç</p>';
                return;
            }
            
            container.innerHTML = countries.map(country => `
                <div class="country-item">
                    <div class="country-info">
                        <h4>${country.name}</h4>
                        <p>${country.description}</p>
                    </div>
                    <div class="country-actions">
                        <button onclick="editCountry(${country.id})">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                        <button class="delete" onclick="deleteCountry(${country.id})">–£–¥–∞–ª–∏—Ç—å</button>
                    </div>
                </div>
            `).join('');
        }

        function addCountry() {
            const name = document.getElementById('countryName').value;
            const desc = document.getElementById('countryDesc').value;
            
            if (!name || !desc) {
                showMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', 'error');
                return;
            }
            
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            const savedData = localStorage.getItem('travelData');
            let data = savedData ? JSON.parse(savedData) : { countries: [], cities: [] };
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω—É
            const newId = data.countries.length > 0 ? Math.max(...data.countries.map(c => c.id)) + 1 : 1;
            
            data.countries.push({
                id: newId,
                name: name,
                description: desc,
                image: "images/travel-placeholder.jpg"
            });
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
            localStorage.setItem('travelData', JSON.stringify(data));
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            displayCountries(data.countries);
            updateStats();
            showMessage('–°—Ç—Ä–∞–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!', 'success');
            
            // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
            document.getElementById('countryName').value = '';
            document.getElementById('countryDesc').value = '';
        }

        function editCountry(id) {
            const savedData = localStorage.getItem('travelData');
            if (!savedData) return;
            
            const data = JSON.parse(savedData);
            const country = data.countries.find(c => c.id === id);
            
            if (country) {
                const newName = prompt('–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã:', country.name);
                const newDesc = prompt('–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:', country.description);
                
                if (newName && newDesc) {
                    country.name = newName;
                    country.description = newDesc;
                    localStorage.setItem('travelData', JSON.stringify(data));
                    displayCountries(data.countries);
                    showMessage('–°—Ç—Ä–∞–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!', 'success');
                }
            }
        }

        function deleteCountry(id) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω—É?')) return;
            
            const savedData = localStorage.getItem('travelData');
            if (!savedData) return;
            
            const data = JSON.parse(savedData);
            data.countries = data.countries.filter(c => c.id !== id);
            
            localStorage.setItem('travelData', JSON.stringify(data));
            displayCountries(data.countries);
            updateStats();
            showMessage('–°—Ç—Ä–∞–Ω–∞ —É–¥–∞–ª–µ–Ω–∞!', 'success');
        }

        function updateStats() {
            const savedData = localStorage.getItem('travelData');
            let countriesCount = 0;
            let citiesCount = 0;
            
            if (savedData) {
                const data = JSON.parse(savedData);
                countriesCount = data.countries ? data.countries.length : 0;
                citiesCount = data.cities ? data.cities.length : 0;
            }
            
            document.getElementById('countriesCount').textContent = countriesCount;
            document.getElementById('citiesCount').textContent = citiesCount;
        }
    </script>
</body>
</html>


=== FILE: ./fix_syntax_errors.js ===
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü

// 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
StablePageEditor.prototype.updatePageStructure = function() {
    if (!this.currentData.pageStructure) {
        this.currentData.pageStructure = [];
    }
    
    // –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞ —Å–µ–∫—Ü–∏–π
    this.currentData.pageStructure = this.sections
        .filter(section => section.id !== 'footer')
        .map(section => section.id);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ç–µ—Ä –≤ –∫–æ–Ω–µ—Ü
    if (this.sections.find(s => s.id === 'footer')) {
        this.currentData.pageStructure.push('footer');
    }
    
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', this.currentData.pageStructure);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    this.saveData();
};

// 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π
StablePageEditor.prototype.saveChanges = function() {
    if (!this.currentSection) return;

    try {
        const formData = {};
        document.querySelectorAll('#content-editor [data-field]').forEach(input => {
            const fieldId = input.getAttribute('data-field');
            formData[fieldId] = input.value;
        });

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
        this.processSpecialFields(formData);

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
        Object.keys(formData).forEach(fieldId => {
            if (this.currentSection.id === 'contact' && fieldId !== 'title') {
                if (!this.currentData.contacts) this.currentData.contacts = {};
                this.currentData.contacts[fieldId] = formData[fieldId];
            } else if (this.currentSection.id === 'footer') {
                if (!this.currentData.footer) this.currentData.footer = {};
                this.currentData.footer[fieldId] = formData[fieldId];
            } else {
                // –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π
                if (!this.currentData.content[this.currentSection.id]) {
                    this.currentData.content[this.currentSection.id] = {};
                }
                this.currentData.content[this.currentSection.id][fieldId] = formData[fieldId];
            }
        });

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        this.saveData();
        this.hasUnsavedChanges = false;
        this.showSaveIndicator('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        this.showNotification('–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!', 'success');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
        this.safeRefresh();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
        this.showNotification('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + error.message, 'error');
    }
};

// 3. –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
StablePageEditor.prototype.getImageEditor = function(field) {
    const currentImage = this.getCurrentValue(field);
    return `
        <div class="form-group image-upload-container">
            <label>${field.label}:</label>
            <div class="image-preview ${!currentImage ? 'empty' : ''}" id="image-preview-${field.id}">
                ${currentImage ? 
                    '<img src="' + currentImage + '" alt="Preview">' :
                    '<i class="fas fa-image"></i><span>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</span>'
                }
            </div>
            <div class="image-actions">
                <button class="btn btn-primary" onclick="document.getElementById(\'image-file-input\').setAttribute(\'data-field\', \'${field.id}\'); document.getElementById(\'image-file-input\').click()">
                    <i class="fas fa-upload"></i> –ó–∞–≥—Ä—É–∑–∏—Ç—å
                </button>
                <button class="btn btn-secondary" onclick="editor.promptImageUrl('${field.id}')">
                    <i class="fas fa-link"></i> –£–∫–∞–∑–∞—Ç—å URL
                </button>
                ${currentImage ? `
                <button class="btn btn-danger" onclick="editor.removeImage('${field.id}')">
                    <i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å
                </button>
                ` : ''}
            </div>
            <input type="hidden" data-field="${field.id}" value="${currentImage}" id="image-field-${field.id}">
        </div>
    `;
};

StablePageEditor.prototype.removeImage = function(fieldId) {
    const field = document.querySelector('[data-field="' + fieldId + '"]');
    if (field) {
        field.value = '';
        const preview = document.getElementById('image-preview-' + fieldId);
        preview.innerHTML = '<i class="fas fa-image"></i><span>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</span>';
        preview.classList.add('empty');
        this.hasUnsavedChanges = true;
        this.showNotification('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
    }
};

// 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
StablePageEditor.prototype.handleImageUpload = function(file) {
    const fieldId = document.getElementById('image-file-input').getAttribute('data-field');
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    // –î–ª—è –¥–µ–º–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º Object URL
    const imageUrl = URL.createObjectURL(file);
    this.updateImageField(imageUrl, fieldId);
    this.showNotification('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ (–¥–µ–º–æ)');
};

StablePageEditor.prototype.updateImageField = function(url, fieldId) {
    const field = document.querySelector('[data-field="' + fieldId + '"]');
    if (field) {
        field.value = url;
        const preview = document.getElementById('image-preview-' + fieldId);
        preview.innerHTML = '<img src="' + url + '" alt="Preview">';
        preview.classList.remove('empty');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        const actions = preview.closest('.image-upload-container').querySelector('.image-actions');
        if (!actions.querySelector('.btn-danger')) {
            const deleteBtn = document.createElement('button');
            deleteBtn.className = 'btn btn-danger';
            deleteBtn.innerHTML = '<i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å';
            deleteBtn.onclick = () => this.removeImage(fieldId);
            actions.appendChild(deleteBtn);
        }
        
        this.hasUnsavedChanges = true;
    }
};

// 5. –£–ª—É—á—à–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π
StablePageEditor.prototype.renderCustomSection = function(container, sectionData) {
    const sectionElement = document.createElement('section');
    sectionElement.className = 'custom-section ' + sectionData.type + '-section';
    sectionElement.id = sectionData.id;
    sectionElement.setAttribute('data-section-id', sectionData.id);

    console.log('üé® Rendering custom section:', sectionData.id, sectionData.type, sectionData);

    let html = '';
    switch (sectionData.type) {
        case 'text':
            html = `
                <div class="container">
                    <h2 class="section-title">${sectionData.title || ''}</h2>
                    <div class="section-content">
                        <p>${sectionData.content || ''}</p>
                    </div>
                </div>
            `;
            break;
        case 'image':
            html = `
                <div class="container">
                    <div class="section-content" style="display: flex; gap: 30px; align-items: center; flex-wrap: wrap;">
                        <div class="text-content" style="flex: 1; min-width: 300px;">
                            <h2 class="section-title">${sectionData.title || ''}</h2>
                            <p>${sectionData.content || ''}</p>
                        </div>
                        <div class="image-content" style="flex: 1; min-width: 300px; text-align: center;">
                            ${sectionData.image ? '<img src="' + sectionData.image + '" alt="' + (sectionData.title || '') + '" style="max-width: 100%; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">' : ''}
                        </div>
                    </div>
                </div>
            `;
            break;
        case 'features':
            const featuresHtml = (sectionData.features || []).map(feature => `
                <div class="feature-item" style="text-align: center; padding: 30px 20px; background: white; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.1); transition: transform 0.3s ease;">
                    <div class="feature-icon" style="font-size: 3em; margin-bottom: 20px; color: #2c5aa0;">
                        <i class="${feature.icon || 'fas fa-star'}"></i>
                    </div>
                    <h3 style="margin-bottom: 15px; color: #333;">${feature.title || ''}</h3>
                    <p style="color: #666; line-height: 1.6;">${feature.description || ''}</p>
                </div>
            `).join('');
            
            html = `
                <div class="container">
                    <h2 class="section-title">${sectionData.title || ''}</h2>
                    <div class="features-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 30px; margin-top: 40px;">
                        ${featuresHtml}
                    </div>
                </div>
            `;
            break;
        case 'cta':
            html = `
                <div class="container">
                    <div class="cta-section" style="text-align: center; padding: 60px 40px; background: linear-gradient(135deg, #2c5aa0, #4a7bc8); color: white; border-radius: 15px; margin: 40px 0;">
                        <h2 style="margin-bottom: 20px; font-size: 2.5em;">${sectionData.title || ''}</h2>
                        <p style="margin-bottom: 30px; font-size: 1.2em; opacity: 0.9;">${sectionData.description || ''}</p>
                        ${sectionData.buttonText ? `
                            <a href="${sectionData.buttonUrl || '#'}" class="cta-button" style="background: white; color: #2c5aa0; padding: 15px 40px; border-radius: 30px; text-decoration: none; font-weight: 600; display: inline-block; font-size: 1.1em; transition: all 0.3s ease;">
                                ${sectionData.buttonText}
                            </a>
                        ` : ''}
                    </div>
                </div>
            `;
            break;
        case 'contacts':
            html = `
                <div class="container">
                    <h2 class="section-title">${sectionData.title || '–ö–æ–Ω—Ç–∞–∫—Ç—ã'}</h2>
                    <div class="contact-content" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 40px; margin-top: 40px;">
                        <div class="contact-info" style="background: white; padding: 30px; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">
                            <h3 style="margin-bottom: 20px; color: #2c5aa0;">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                            ${sectionData.phone ? `
                                <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                    <i class="fas fa-phone" style="color: #2c5aa0;"></i>
                                    <span style="font-weight: 500;">${sectionData.phone}</span>
                                </div>
                            ` : ''}
                            ${sectionData.email ? `
                                <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                    <i class="fas fa-envelope" style="color: #2c5aa0;"></i>
                                    <span style="font-weight: 500;">${sectionData.email}</span>
                                </div>
                            ` : ''}
                            ${sectionData.address ? `
                                <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                    <i class="fas fa-map-marker-alt" style="color: #2c5aa0;"></i>
                                    <span style="font-weight: 500;">${sectionData.address}</span>
                                </div>
                            ` : ''}
                            ${sectionData.hours ? `
                                <div class="contact-item" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
                                    <i class="fas fa-clock" style="color: #2c5aa0;"></i>
                                    <span style="font-weight: 500;">${sectionData.hours}</span>
                                </div>
                            ` : ''}
                        </div>
                    </div>
                </div>
            `;
            break;
    }

    sectionElement.innerHTML = html;

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    sectionElement.style.padding = '80px 0';
    sectionElement.style.background = sectionData.type === 'cta' ? 'transparent' : '#f8f9fa';
    
    if (sectionData.type === 'cta') {
        sectionElement.style.padding = '40px 0';
    }

    container.appendChild(sectionElement);
};



=== FILE: ./check-methods.js ===
const fs = require('fs');
const content = fs.readFileSync('data-manager.js', 'utf8');

const methods = [
    'getDesign',
    'updateDesign', 
    'getContent',
    'updateContent',
    'syncWithMainPage'
];

console.log('Checking methods in data-manager.js:');
methods.forEach(method => {
    if (content.includes(`${method}(`)) {
        console.log(`‚úÖ ${method} - FOUND`);
    } else {
        console.log(`‚ùå ${method} - MISSING`);
    }
});



=== FILE: ./server.js ===
const express = require('express');
const path = require('path');
const fs = require('fs');

const app = express();
const PORT = 3001; // –ñ–µ—Å—Ç–∫–æ –∑–∞–¥–∞–µ–º –ø–æ—Ä—Ç 3001

// ‚úÖ COMPLETE CORS SOLUTION
app.use((req, res, next) => {
    const allowedOrigins = [
        'http://127.0.0.1:5500', 
        'http://localhost:3001', 
        'http://localhost:5500',
        'http://127.0.0.1:3001'
    ];
    const origin = req.headers.origin;
    
    if (allowedOrigins.includes(origin)) {
        res.header('Access-Control-Allow-Origin', origin);
    } else {
        res.header('Access-Control-Allow-Origin', '*');
    }
    
    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS, PATCH');
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Control-Allow-Headers');
    res.header('Access-Control-Allow-Credentials', 'true');
    
    if (req.method === 'OPTIONS') {
        return res.status(200).json({});
    }
    
    next();
});

// Middleware
app.use(express.json());
app.use(express.static('.')); // –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –∫–æ—Ä–Ω—è

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const dataDir = path.join(__dirname, 'data');
if (!fs.existsSync(dataDir)) {
    fs.mkdirSync(dataDir, { recursive: true });
}

// API –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
// –û—Å–Ω–æ–≤–Ω—ã–µ endpoints
app.post('/api/save-data', (req, res) => {
    try {
        const data = req.body;
        console.log('üíæ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', {
            countries: data.countries?.length || 0,
            content: data.content ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
            design: data.design ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'
        });
        
        // –ü—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö
        res.json({ 
            success: true, 
            message: '–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã',
            received: {
                countries: data.countries?.length || 0,
                timestamp: new Date().toISOString()
            }
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
        res.status(500).json({ 
            success: false, 
            message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ' + error.message 
        });
    }
});

app.get('/api/load-data', (req, res) => {
    try {
        // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞
        const filePath = path.join(__dirname, 'data', 'content.json');
        if (fs.existsSync(filePath)) {
            const data = fs.readFileSync(filePath, 'utf8');
            res.json(JSON.parse(data));
        } else {
            res.json({ 
                countries: [], 
                content: {},
                design: {},
                blocks: {},
                lastUpdate: null 
            });
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
        res.status(500).json({ 
            success: false, 
            message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö' 
        });
    }
});

// API –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
app.get('/api/load-data', (req, res) => {
    try {
        const filePath = path.join(__dirname, 'data', 'content.json');
        if (fs.existsSync(filePath)) {
            const data = fs.readFileSync(filePath, 'utf8');
            const parsedData = JSON.parse(data);
            console.log('üìÅ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞:', parsedData.countries?.length, '—Å—Ç—Ä–∞–Ω');
            res.json(parsedData);
        } else {
            console.log('üìÅ –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ');
            res.json({ countries: [], content: {}, lastUpdate: null });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
        res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏' });
    }
});

// API –¥–ª—è –≤—Ö–æ–¥–∞
app.post('/api/login', (req, res) => {
    try {
        const { username, password } = req.body;
        console.log('üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞:', username);
        
        if (username === 'admin' && password === 'WorldTravel2024!') {
            const code = Math.floor(100000 + Math.random() * 900000).toString();
            
            // –õ–æ–≥–∏—Ä—É–µ–º "–æ—Ç–ø—Ä–∞–≤–∫—É" email
            console.log('='.repeat(50));
            console.log('üìß EMAIL –û–¢–ü–†–ê–í–õ–ï–ù –ù–ê: narekgrigoryan424@gmail.com');
            console.log('üîê –ö–û–î –î–õ–Ø –í–•–û–î–ê:', code);
            console.log('‚è∞ –í—Ä–µ–º—è:', new Date().toLocaleString());
            console.log('='.repeat(50));
            
            res.json({
                success: true,
                message: '–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ email',
                debug_code: code,
                requires2FA: true
            });
        } else {
            res.status(401).json({
                success: false,
                message: '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
            });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
        res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
});

// API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ 2FA
app.post('/api/verify-2fa', (req, res) => {
    try {
        const { username, code } = req.body;
        console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ 2FA:', username, code);
        
        // –î–ª—è –¥–µ–º–æ –ø—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥
        if (code && code.length === 6) {
            const sessionId = 'admin_session_' + Date.now();
            res.json({
                success: true,
                message: '–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞',
                sessionId: sessionId
            });
        } else {
            res.status(401).json({
                success: false,
                message: '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥'
            });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ 2FA:', error);
        res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
});

// API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email —Å –∫–æ–¥–æ–º 2FA (–¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞)
app.post('/api/send-2fa-email', (req, res) => {
    try {
        const { email, code } = req.body;
        
        console.log('='.repeat(50));
        console.log('üìß –°–ò–ú–£–õ–Ø–¶–ò–Ø –û–¢–ü–†–ê–í–ö–ò EMAIL:');
        console.log('   –ü–æ–ª—É—á–∞—Ç–µ–ª—å:', email);
        console.log('   –ö–æ–¥ 2FA:', code);
        console.log('   –í—Ä–µ–º—è:', new Date().toLocaleString());
        console.log('='.repeat(50));
        
        res.json({
            success: true,
            message: '–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ email',
            debug: {
                email: email,
                code: code,
                timestamp: new Date().toISOString()
            }
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
        res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email' });
    }
});

// API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏
app.post('/api/verify-session', (req, res) => {
    try {
        const { sessionId } = req.body;
        console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏:', sessionId);
        
        // –î–ª—è –¥–µ–º–æ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö –¥–ª—è –≤–∞–ª–∏–¥–Ω–æ–≥–æ sessionId
        if (sessionId && sessionId.startsWith('admin_session_')) {
            res.json({
                success: true,
                message: '–°–µ—Å—Å–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞',
                user: { username: 'admin' }
            });
        } else {
            res.status(401).json({
                success: false,
                message: '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞—è —Å–µ—Å—Å–∏—è'
            });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏:', error);
        res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
});

// API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
app.get('/api/health', (req, res) => {
    res.json({ 
        status: 'OK', 
        message: 'Server is running on port 3001!',
        port: PORT,
        timestamp: new Date().toISOString()
    });
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
app.get('/api/current-data', (req, res) => {
    try {
        const filePath = path.join(__dirname, 'data', 'content.json');
        if (fs.existsSync(filePath)) {
            const data = fs.readFileSync(filePath, 'utf8');
            const parsedData = JSON.parse(data);
            res.json(parsedData);
        } else {
            res.json({ 
                countries: [], 
                content: {},
                settings: {},
                design: {},
                lastUpdate: null 
            });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö' });
    }
});
// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö (–¥–æ–±–∞–≤—å—Ç–µ –≤ server.js)
app.get('/api/current-data', (req, res) => {
    try {
        const filePath = path.join(__dirname, 'data', 'content.json');
        if (fs.existsSync(filePath)) {
            const data = fs.readFileSync(filePath, 'utf8');
            const parsedData = JSON.parse(data);
            res.json(parsedData);
        } else {
            res.json({ 
                countries: [], 
                content: {},
                settings: {},
                design: {},
                lastUpdate: null 
            });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö' });
    }
});
// –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö HTML —Å—Ç—Ä–∞–Ω–∏—Ü
app.get('*', (req, res) => {
    const filePath = req.path === '/' ? '/index.html' : req.path;
    const fullPath = path.join(__dirname, filePath);
    
    if (fs.existsSync(fullPath) && fullPath.endsWith('.html')) {
        res.sendFile(fullPath);
    } else {
        res.status(404).send('Page not found');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ—Ä—Ç–∞
app.on('error', (error) => {
    if (error.code === 'EADDRINUSE') {
        console.log('='.repeat(50));
        console.log('‚ùå –û–®–ò–ë–ö–ê: –ü–æ—Ä—Ç 3001 —É–∂–µ –∑–∞–Ω—è—Ç!');
        console.log('üîÑ –†–µ—à–µ–Ω–∏–µ:');
        console.log('   –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:');
        console.log('   lsof -ti:3001 | xargs kill -9');
        console.log('   –∏–ª–∏');
        console.log('   pkill -f "node server.js"');
        console.log('='.repeat(50));
        process.exit(1);
    } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('uncaughtException', (error) => {
    console.error('‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
});

process.on('unhandledRejection', (reason, promise) => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –ø—Ä–æ–º–∏—Å:', reason);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 3001
app.listen(PORT, '0.0.0.0', () => {
    console.log('='.repeat(60));
    console.log('üöÄ –°–ï–†–í–ï–† –ó–ê–ü–£–©–ï–ù –ù–ê –ü–û–†–¢–£ 3001!');
    console.log('='.repeat(60));
    console.log('üìç –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:');
    console.log(`   http://localhost:${PORT}`);
    console.log('');
    console.log('üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:');
    console.log(`   http://localhost:${PORT}/admin-login.html`);
    console.log(`   http://localhost:${PORT}/admin.html`);
    console.log('');
    console.log('üë§ –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
    console.log('   –õ–æ–≥–∏–Ω: admin');
    console.log('   –ü–∞—Ä–æ–ª—å: WorldTravel2024!');
    console.log('');
    console.log('üìß 2FA –∫–æ–¥—ã –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞');
    console.log('');
    console.log('‚ö° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞: Ctrl + C');
    console.log('='.repeat(60));
});

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('');
    console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
    process.exit(0);
});

process.on('SIGTERM', () => {
    console.log('');
    console.log('üõë –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É...');
    process.exit(0);
});


=== FILE: ./data-manager.js ===
// Enhanced Data Manager with reliable update triggering
class DataManager {
    constructor() {
        this.storageKey = 'worldtravel_data';
        this.version = '4.0';
        this.updateCallbacks = [];
        this.init();
    }

    init() {
        console.log('üîÑ DataManager initialized version', this.version);
        if (!this.getData()) {
            console.log('üìù Initializing default data...');
            this.setDefaultData();
        }
        
        // Listen for storage changes from other tabs
        window.addEventListener('storage', (e) => {
            if (e.key === this.storageKey) {
                console.log('üîÑ Data changed in another tab');
                this.triggerDataUpdate();
            }
        });

        console.log('‚úÖ DataManager ready');
    }

    getData() {
        try {
            const data = localStorage.getItem(this.storageKey);
            if (!data) {
                console.log('üì≠ No data found in localStorage');
                return null;
            }
            const parsed = JSON.parse(data);
            console.log('üìÅ Data loaded from localStorage:', {
                countries: parsed?.countries?.length || 0,
                content: Object.keys(parsed?.content || {}).length,
                pageStructure: parsed?.pageStructure?.length || 0
            });
            return parsed;
        } catch (error) {
            console.error('‚ùå Error reading data:', error);
            return null;
        }
    }

    setData(data) {
        try {
            data.version = this.version;
            data.lastUpdate = new Date().toISOString();
            
            console.log('üíæ Saving data to localStorage:', {
                countries: data?.countries?.length || 0,
                content: Object.keys(data?.content || {}).length,
                pageStructure: data?.pageStructure?.length || 0
            });
            
            localStorage.setItem(this.storageKey, JSON.stringify(data));
            console.log('‚úÖ Data saved successfully');
            
            this.triggerDataUpdate();
            return true;
        } catch (error) {
            console.error('‚ùå Error saving data:', error);
            return false;
        }
    }

    setDefaultData() {
        const defaultData = {
            countries: [
                {
                    id: 1,
                    name: "–§—Ä–∞–Ω—Ü–∏—è",
                    description: "–°—Ç—Ä–∞–Ω–∞ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –º–æ–¥—ã –∏ –∏–∑—ã—Å–∫–∞–Ω–Ω–æ–π –∫—É—Ö–Ω–∏. –ü–æ—Å–µ—Ç–∏—Ç–µ –≠–π—Ñ–µ–ª–µ–≤—É –±–∞—à–Ω—é, –õ—É–≤—Ä –∏ –ø—Ä–æ–≤–∞–Ω—Å–∞–ª—å—Å–∫–∏–µ –ø–æ–ª—è.",
                    price: "–æ—Ç $800",
                    image: "images/travel-placeholder.svg",
                    tours: [
                        {
                            id: 1,
                            name: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ü–∞—Ä–∏–∂",
                            price: "$500",
                            duration: "3 –¥–Ω—è"
                        },
                        {
                            id: 2,
                            name: "–ì–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ç—É—Ä –ø–æ –ü—Ä–æ–≤–∞–Ω—Å—É",
                            price: "$700",
                            duration: "5 –¥–Ω–µ–π"
                        }
                    ]
                },
                {
                    id: 2,
                    name: "–ò—Ç–∞–ª–∏—è",
                    description: "–°—Ç—Ä–∞–Ω–∞ –¥—Ä–µ–≤–Ω–µ–π –∏—Å—Ç–æ—Ä–∏–∏, –∏—Å–∫—É—Å—Å—Ç–≤–∞ –∏ –∫—É–ª–∏–Ω–∞—Ä–Ω—ã—Ö —Ç—Ä–∞–¥–∏—Ü–∏–π. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –†–∏–º, –í–µ–Ω–µ—Ü–∏—é –∏ –§–ª–æ—Ä–µ–Ω—Ü–∏—é.",
                    price: "–æ—Ç $750",
                    image: "images/travel-placeholder.svg",
                    tours: [
                        {
                            id: 3,
                            name: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –†–∏–º",
                            price: "$600",
                            duration: "4 –¥–Ω—è"
                        },
                        {
                            id: 4,
                            name: "–í–µ–Ω–µ—Ü–∏–∞–Ω—Å–∫–∏–µ –∫–∞–Ω–∞–ª—ã",
                            price: "$550",
                            duration: "3 –¥–Ω—è"
                        }
                    ]
                }
            ],
            contacts: {
                phone: '+7 (999) 123-45-67',
                email: 'info@worldtravel.com',
                address: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è, 15',
                hours: '–ü–Ω-–ü—Ç: 9:00-18:00'
            },
            settings: {
                siteTitle: 'WorldTravel - –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
                companyName: 'WorldTravel'
            },
            content: {
                hero: {
                    id: 'hero',
                    type: 'hero',
                    name: '–ì–ª–∞–≤–Ω—ã–π –±–∞–Ω–Ω–µ—Ä',
                    title: '–û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä —Å WorldTravel',
                    subtitle: '–ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –û—Ç —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–ª—è–∂–µ–π –¥–æ –≥–æ—Ä–Ω—ã—Ö –≤–µ—Ä—à–∏–Ω - –≤–∞—à–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å.',
                    image: 'images/travel-placeholder.svg'
                },
                about: {
                    id: 'about',
                    type: 'about',
                    name: '–û –∫–æ–º–ø–∞–Ω–∏–∏',
                    title: '–û –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏',
                    description: 'WorldTravel - —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø–æ —Ç—É—Ä–∏–∑–º—É —Å –±–æ–ª–µ–µ —á–µ–º 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã. –ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö travel-—Ä–µ—à–µ–Ω–∏–π.',
                    image: 'images/travel-placeholder.svg',
                    stats: [
                        { value: "5000", label: "–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤" },
                        { value: "50", label: "–°—Ç—Ä–∞–Ω –º–∏—Ä–∞" },
                        { value: "10 –ª–µ—Ç", label: "–û–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã" }
                    ]
                },
                services: {
                    id: 'services',
                    type: 'services',
                    name: '–£—Å–ª—É–≥–∏',
                    title: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏',
                    services: [
                        { title: '–ê–≤–∏–∞–±–∏–ª–µ—Ç—ã', description: '–ü–æ–¥–±–æ—Ä –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª—É—á—à–∏—Ö –∞–≤–∏–∞–ø–µ—Ä–µ–ª–µ—Ç–æ–≤ –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º', icon: 'fas fa-plane' },
                        { title: '–û—Ç–µ–ª–∏', description: '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–µ–ª–µ–π –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –∫–æ–º—Ñ–æ—Ä—Ç–∞ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É', icon: 'fas fa-hotel' },
                        { title: '–¢—É—Ä—ã', description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∏ –≥—Ä—É–ø–ø–æ–≤—ã–µ —Ç—É—Ä—ã —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –≥–∏–¥–∞–º–∏', icon: 'fas fa-map-marked-alt' },
                        { title: '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ', description: '–ü–æ–ª–Ω–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', icon: 'fas fa-shield-alt' }
                    ]
                },
                destinations: {
                    id: 'destinations',
                    type: 'destinations',
                    name: '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                    title: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                    subtitle: '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –ª—É—á—à–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏—Ä–∞ —Å –Ω–∞—à–∏–º–∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º–∏ —Ç—É—Ä–∞–º–∏'
                },
                contact: {
                    id: 'contact',
                    type: 'contact',
                    name: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
                    title: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏'
                }
            },
            footer: {
                id: 'footer',
                type: 'footer',
                name: '–§—É—Ç–µ—Ä',
                description: '–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –≤ –º–∏—Ä–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π. –ú—ã –¥–µ–ª–∞–µ–º –≤–∞—à–∏ –º–µ—á—Ç—ã –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é.',
                copyright: '&copy; 2024 WorldTravel. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.'
            },
            pageStructure: ['hero', 'about', 'services', 'destinations', 'contact'],
            lastUpdate: new Date().toISOString()
        };
        return this.setData(defaultData);
    }

    // Content management
    getContent() {
        const data = this.getData();
        return data?.content || {};
    }

    updateContent(section, updates) {
        const data = this.getData();
        if (!data) return false;
        
        if (!data.content) data.content = {};
        data.content[section] = { ...data.content[section], ...updates };
        
        console.log('üìù Updating content for section:', section, updates);
        return this.setData(data);
    }

    updateStats(stats) {
        console.log('üìä Updating stats:', stats);
        return this.updateContent('about', { stats });
    }

    // Contacts management
    getContacts() {
        const data = this.getData();
        return data?.contacts || {};
    }

    updateContacts(updates) {
        const data = this.getData();
        if (!data) return false;
        
        data.contacts = { ...data.contacts, ...updates };
        console.log('üìû Updating contacts:', updates);
        return this.setData(data);
    }

    // Settings management
    getSettings() {
        const data = this.getData();
        return data?.settings || {};
    }

    updateSettings(updates) {
        const data = this.getData();
        if (!data) return false;
        
        data.settings = { ...data.settings, ...updates };
        console.log('‚öôÔ∏è Updating settings:', updates);
        return this.setData(data);
    }

    // Page structure management
    getPageStructure() {
        const data = this.getData();
        return data?.pageStructure || [];
    }

    updatePageStructure(structure) {
        const data = this.getData();
        if (!data) return false;
        
        data.pageStructure = structure;
        console.log('üèóÔ∏è Updating page structure:', structure);
        return this.setData(data);
    }

    // Countries management
    getCountries() {
        const data = this.getData();
        return data?.countries || [];
    }

    addCountry(countryData) {
        const data = this.getData();
        if (!data) return null;
        
        const newCountry = {
            id: Date.now(),
            image: 'images/travel-placeholder.svg',
            tours: [],
            ...countryData
        };
        
        if (!data.countries) data.countries = [];
        data.countries.push(newCountry);
        
        return this.setData(data) ? newCountry : null;
    }

    updateCountry(id, updates) {
        const data = this.getData();
        if (!data) return null;
        
        const countryIndex = data.countries.findIndex(c => c.id === id);
        if (countryIndex !== -1) {
            data.countries[countryIndex] = { ...data.countries[countryIndex], ...updates };
            return this.setData(data) ? data.countries[countryIndex] : null;
        }
        return null;
    }

    deleteCountry(id) {
        const data = this.getData();
        if (!data) return false;
        
        data.countries = data.countries.filter(c => c.id !== id);
        return this.setData(data);
    }

    // Tours management
    addTour(countryId, tourData) {
        const data = this.getData();
        if (!data) return null;
        
        const country = data.countries.find(c => c.id === countryId);
        if (country) {
            const newTour = { 
                id: Date.now(),
                ...tourData 
            };
            
            if (!country.tours) country.tours = [];
            country.tours.push(newTour);
            
            return this.setData(data) ? newTour : null;
        }
        return null;
    }

    deleteTour(countryId, tourId) {
        const data = this.getData();
        if (!data) return false;
        
        const country = data.countries.find(c => c.id === countryId);
        if (country && country.tours) {
            country.tours = country.tours.filter(t => t.id !== tourId);
            return this.setData(data);
        }
        return false;
    }

    getAllTours() {
        const countries = this.getCountries();
        const allTours = [];
        countries.forEach(country => {
            if (country.tours) {
                country.tours.forEach(tour => {
                    allTours.push({
                        ...tour,
                        countryName: country.name,
                        countryId: country.id
                    });
                });
            }
        });
        return allTours;
    }

    // Update triggering with multiple methods for reliability
    triggerDataUpdate() {
        console.log('üîÑ Triggering data update...');
        
        // Method 1: Custom event (most reliable)
        window.dispatchEvent(new CustomEvent('dataUpdated', {
            detail: { 
                timestamp: new Date().toISOString(),
                source: 'dataManager'
            }
        }));
        
        // Method 2: Call registered callbacks
        this.updateCallbacks.forEach(callback => {
            try {
                callback(this.getData());
            } catch (error) {
                console.error('Error in update callback:', error);
            }
        });
        
        // Method 3: Storage event for other tabs
        const event = new StorageEvent('storage', {
            key: this.storageKey,
            newValue: localStorage.getItem(this.storageKey),
            oldValue: localStorage.getItem(this.storageKey),
            storageArea: localStorage,
            url: window.location.href
        });
        window.dispatchEvent(event);

        // Method 4: Force page content update
        if (typeof window.updatePageContent === 'function') {
            setTimeout(() => window.updatePageContent(), 100);
        }
    }

    onUpdate(callback) {
        this.updateCallbacks.push(callback);
    }

    // Force refresh
    forceRefresh() {
        console.log('üîÑ Force refreshing all data...');
        this.triggerDataUpdate();
        return this.getData();
    }

    // Debug
    debug() {
        const data = this.getData();
        console.log('üîç DataManager Debug:', {
            countries: data?.countries?.length || 0,
            tours: this.getAllTours().length,
            content: data?.content ? Object.keys(data.content).length + ' sections' : '‚úó',
            contacts: data?.contacts ? '‚úì' : '‚úó',
            settings: data?.settings ? '‚úì' : '‚úó',
            pageStructure: data?.pageStructure?.length || 0,
            lastUpdate: data?.lastUpdate || 'never',
            version: data?.version || 'unknown'
        });
        return data;
    }
}

// Global instance
window.dataManager = new DataManager();

// Auto-debug on load
setTimeout(() => {
    if (window.dataManager) {
        window.dataManager.debug();
    }
}, 1000);



=== FILE: ./fix_update_content.js ===
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ContentUpdater

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥—ã ContentUpdater –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫
ContentUpdater.prototype.applyCustomSections = function(data) {
    if (!data.pageStructure || !data.content) return;

    console.log('üîÑ Applying custom sections with order:', data.pageStructure);

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º
    let customSectionsContainer = document.getElementById('custom-sections');
    if (!customSectionsContainer) {
        customSectionsContainer = document.createElement('div');
        customSectionsContainer.id = 'custom-sections';
        const footer = document.querySelector('footer');
        const contact = document.querySelector('#contact');
        const insertBefore = footer || document.body.lastElementChild;
        
        if (insertBefore) {
            insertBefore.parentNode.insertBefore(customSectionsContainer, insertBefore);
        } else {
            document.body.appendChild(customSectionsContainer);
        }
    }

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    customSectionsContainer.innerHTML = '';

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    data.pageStructure.forEach(sectionId => {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ (–æ–Ω–∏ —É–∂–µ –µ—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
        const standardSections = ['hero', 'about', 'services', 'destinations', 'contact', 'footer'];
        if (standardSections.includes(sectionId)) return;

        if (data.content[sectionId]) {
            this.renderCustomSection(customSectionsContainer, data.content[sectionId]);
        }
    });

    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    if (customSectionsContainer.children.length > 0) {
        this.ensureCustomStyles();
    }
};

ContentUpdater.prototype.applyContentChanges = function(content) {
    if (!content) return;

    console.log('üìù Applying content changes to page structure');

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
    // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ call
    ContentUpdater.prototype.originalApplyContentChanges.call(this, content);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
    this.applyCustomSections(this.getCurrentData());
};

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
ContentUpdater.prototype.originalApplyContentChanges = ContentUpdater.prototype.applyContentChanges;

// –£–ª—É—á—à–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
ContentUpdater.prototype.getCurrentData = function() {
    // Try multiple sources for data
    if (typeof window.dataManager !== 'undefined' && window.dataManager) {
        const data = window.dataManager.getData();
        if (data && data.pageStructure) {
            console.log('üìÅ Using DataManager data with page structure:', data.pageStructure);
            return data;
        }
    }

    // Try localStorage
    try {
        const localData = localStorage.getItem('worldtravel_data');
        if (localData) {
            const data = JSON.parse(localData);
            if (data.pageStructure) {
                console.log('ÔøΩÔøΩ Using localStorage data with page structure:', data.pageStructure);
                return data;
            }
        }
    } catch (error) {
        console.error('Error parsing localStorage data:', error);
    }

    return this.getDefaultData();
};

ContentUpdater.prototype.getDefaultData = function() {
    return {
        content: {},
        pageStructure: ['hero', 'about', 'services', 'destinations', 'contact'],
        lastUpdate: new Date().toISOString()
    };
};



=== FILE: ./page-editor-fixed.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–†–µ–¥–∞–∫—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü - WorldTravel</title>
    <link rel="stylesheet" href="admin-style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.css">
    <style>
        /* –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç–∏–ª–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #f5f7fa;
            height: 100vh;
            overflow: hidden;
        }

        .editor-container {
            display: flex;
            height: 100vh;
        }

        /* ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ ... */

    </style>
</head>
<body>
    <!-- HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π -->
    <div class="editor-container">
        <!-- –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä -->
        <div class="preview-panel">
            <div class="panel-header">
                <h2>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h2>
                <div>
                    <button class="btn btn-warning" onclick="window.editor.showAddSectionModal()">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å —Å–µ–∫—Ü–∏—é
                    </button>
                    <button class="btn btn-secondary" onclick="window.editor.safeRefresh()" style="margin-left: 10px;">
                        <i class="fas fa-sync"></i> –û–±–Ω–æ–≤–∏—Ç—å
                    </button>
                    <button class="btn btn-success" onclick="window.editor.saveAndExit()" style="margin-left: 10px;">
                        <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏
                    </button>
                </div>
            </div>
            
            <div class="save-indicator" id="save-indicator">
                <i class="fas fa-check-circle"></i>
                <span id="save-message">–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã</span>
            </div>

            <div class="preview-frame-container">
                <iframe class="preview-frame" id="preview-frame" src="index.html?editor=true&nocache=1"></iframe>
            </div>
        </div>

        <!-- –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —Ä–µ–¥–∞–∫—Ç–æ—Ä -->
        <div class="editor-panel">
            <div class="panel-header">
                <h2>–†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞</h2>
            </div>
            
            <div class="tab-buttons">
                <button class="tab-button active" data-tab="sections">–°–µ–∫—Ü–∏–∏</button>
                <button class="tab-button" data-tab="content">–ö–æ–Ω—Ç–µ–Ω—Ç</button>
            </div>

            <div class="panel-content" id="sections-tab">
                <div class="content-header">
                    <h3>–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h3>
                    <p style="color: #666; margin-top: 5px; font-size: 0.9em;">–ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–π—Ç–µ —Å–µ–∫—Ü–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞</p>
                </div>
                <div class="section-list" id="section-list">
                    <!-- –°–µ–∫—Ü–∏–∏ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã —á–µ—Ä–µ–∑ JS -->
                </div>
            </div>

            <div class="panel-content" id="content-tab" style="display: none;">
                <div id="content-editor">
                    <div class="empty-state">
                        <i class="fas fa-mouse-pointer"></i>
                        <p>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                        <small>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–°–µ–∫—Ü–∏–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –±–ª–æ–∫</small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∫—Ü–∏–∏ -->
    <div class="modal" id="add-section-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å–µ–∫—Ü–∏—é</h3>
                <button class="close-modal" onclick="window.editor.hideAddSectionModal()">&times;</button>
            </div>
            
            <div class="form-group">
                <label>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏:</label>
                <input type="text" id="new-section-name" class="form-control" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏">
            </div>

            <div class="form-group">
                <label>–¢–∏–ø —Å–µ–∫—Ü–∏–∏:</label>
                <div class="section-type-grid" id="section-type-grid">
                    <div class="section-type-card" data-type="text">
                        <div class="section-type-icon"><i class="fas fa-text-height"></i></div>
                        <div class="section-type-name">–¢–µ–∫—Å—Ç–æ–≤–∞—è</div>
                        <div class="section-type-desc">–ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫</div>
                    </div>
                    <div class="section-type-card" data-type="image">
                        <div class="section-type-icon"><i class="fas fa-image"></i></div>
                        <div class="section-type-name">–° –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º</div>
                        <div class="section-type-desc">–¢–µ–∫—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º</div>
                    </div>
                    <div class="section-type-card" data-type="features">
                        <div class="section-type-icon"><i class="fas fa-star"></i></div>
                        <div class="section-type-name">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</div>
                        <div class="section-type-desc">–°–ø–∏—Å–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤</div>
                    </div>
                    <div class="section-type-card" data-type="cta">
                        <div class="section-type-icon"><i class="fas fa-bullhorn"></i></div>
                        <div class="section-type-name">–ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é</div>
                        <div class="section-type-desc">–ö–Ω–æ–ø–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ</div>
                    </div>
                    <div class="section-type-card" data-type="contacts">
                        <div class="section-type-icon"><i class="fas fa-address-book"></i></div>
                        <div class="section-type-name">–ö–æ–Ω—Ç–∞–∫—Ç—ã</div>
                        <div class="section-type-desc">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
                    </div>
                </div>
            </div>

            <div class="form-group position-selector">
                <label>–ü–æ–∑–∏—Ü–∏—è —Å–µ–∫—Ü–∏–∏:</label>
                <div class="position-options" id="position-options">
                    <div class="position-option" data-position="start">
                        <i class="fas fa-arrow-up"></i>
                        <div>–í –Ω–∞—á–∞–ª–æ</div>
                    </div>
                    <div class="position-option" data-position="end">
                        <i class="fas fa-arrow-down"></i>
                        <div>–í –∫–æ–Ω–µ—Ü</div>
                    </div>
                    <div class="position-option" data-position="after-hero">
                        <i class="fas fa-arrow-down"></i>
                        <div>–ü–æ—Å–ª–µ –≥–µ—Ä–æ—è</div>
                    </div>
                    <div class="position-option" data-position="before-footer">
                        <i class="fas fa-arrow-up"></i>
                        <div>–ü–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º</div>
                    </div>
                </div>
            </div>

            <button class="add-section-btn" id="create-section-btn" onclick="window.editor.createNewSection()">
                <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å —Å–µ–∫—Ü–∏—é
            </button>
        </div>
    </div>

    <!-- –°–∫—Ä—ã—Ç—ã–π input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ -->
    <input type="file" id="image-file-input" accept="image/*" style="display: none;">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
    <script>
        // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥ StablePageEditor –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        class StablePageEditor {
            constructor() {
                this.currentSection = null;
                this.currentData = {};
                this.hasUnsavedChanges = false;
                this.selectedSectionType = 'text';
                this.selectedPosition = 'end';
                this.sections = [];
                this.sortable = null;
                this.init();
            }

            // ... –≤–µ—Å—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥ –∫–ª–∞—Å—Å–∞ StablePageEditor ...

        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        const editor = new StablePageEditor();
        window.editor = editor; // –î–µ–ª–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º

        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        window.refreshPreview = () => editor.safeRefresh();
        window.saveAndExit = () => editor.saveAndExit();
    </script>

    <!-- –î–æ–±–∞–≤–ª—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞ -->
    <script>
        // –í—Å—Ç–∞–≤–ª—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–æ–¥–æ–≤ StablePageEditor
        // ... –∫–æ–¥ –∏–∑ fix_syntax_errors.js ...
    </script>
</body>
</html>



=== FILE: ./data/content.json ===
{
  "countries": [
    {
      "id": "country-1",
      "name": "–§—Ä–∞–Ω—Ü–∏—è",
      "description": "–°—Ç—Ä–∞–Ω–∞ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –º–æ–¥—ã –∏ –∏–∑—ã—Å–∫–∞–Ω–Ω–æ–π –∫—É—Ö–Ω–∏",
      "price": "–æ—Ç $500",
      "image": "images/france.jpg"
    },
    {
      "id": "country-2", 
      "name": "–ò—Ç–∞–ª–∏—è",
      "description": "–°—Ç—Ä–∞–Ω–∞ –¥—Ä–µ–≤–Ω–µ–π –∏—Å—Ç–æ—Ä–∏–∏, –∏—Å–∫—É—Å—Å—Ç–≤–∞ –∏ –∫—É–ª–∏–Ω–∞—Ä–Ω—ã—Ö —Ç—Ä–∞–¥–∏—Ü–∏–π",
      "price": "–æ—Ç $450",
      "image": "images/italy.jpg"
    }
  ],
  "content": {
    "heroTitle": "–û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä —Å WorldTravel",
    "heroText": "–ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –û—Ç —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–ª—è–∂–µ–π –¥–æ –≥–æ—Ä–Ω—ã—Ö –≤–µ—Ä—à–∏–Ω ‚Äì –≤–∞—à–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å.",
    "contactPhone": "+7 (999) 123-45-67",
    "contactEmail": "info@worldtravel.com",
    "contactAddress": "–ú–æ—Å–∫–≤–∞, —É–ª. –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è, 15",
    "contactHours": "–ü–Ω-–ü—Ç: 9:00-18:00"
  },
  "design": {
    "blocks": {
      "hero": true,
      "destinations": true,
      "contact": true
    }
  },
  "settings": {
    "companyName": "WorldTravel",
    "primaryColor": "#2c5aa0",
    "secondaryColor": "#4a7bc8",
    "language": "ru"
  }
}



=== FILE: ./style-backup.css ===
/* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', sans-serif;
    line-height: 1.6;
    color: #333;
    overflow-x: hidden;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

/* –°–µ–∫—Ü–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π */
.destinations {
    padding: 80px 0;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    position: relative;
}

.destinations::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, #2c5aa0, transparent);
}

.section-title {
    text-align: center;
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 20px;
    background: linear-gradient(135deg, #2c5aa0, #4a7bc8);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    position: relative;
}

.section-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(90deg, #2c5aa0, #4a7bc8);
    border-radius: 2px;
}

.section-subtitle {
    text-align: center;
    font-size: 1.1rem;
    color: #666;
    margin-bottom: 50px;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
}

/* –°–µ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω */
.destinations-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 30px;
    margin-top: 40px;
}

/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å—Ç—Ä–∞–Ω—ã */
.country-card {
    background: white;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    cursor: pointer;
}

.country-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent, rgba(44, 90, 160, 0.1));
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 1;
}

.country-card:hover {
    transform: translateY(-15px) scale(1.02);
    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
}

.country-card:hover::before {
    opacity: 1;
}

.country-card:hover .country-image {
    transform: scale(1.1);
}

.country-card:hover .country-content {
    transform: translateY(-5px);
}

.country-card:hover .explore-btn {
    transform: translateY(0);
    opacity: 1;
}

/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã */
.country-image {
    position: relative;
    height: 250px;
    overflow: hidden;
    transition: transform 0.6s ease;
}

.country-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.6s ease;
}

.country-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, transparent 40%, rgba(0,0,0,0.7));
    display: flex;
    align-items: flex-end;
    padding: 20px;
}

.country-name {
    color: white;
    font-size: 1.5rem;
    font-weight: 700;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
    margin-bottom: 5px;
}

/* –ö–æ–Ω—Ç–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ */
.country-content {
    padding: 25px;
    position: relative;
    transition: transform 0.3s ease;
    background: white;
}

.country-description {
    color: #666;
    margin-bottom: 20px;
    line-height: 1.6;
    font-size: 0.95rem;
}

/* –¢—É—Ä—ã –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ */
.country-tours {
    border-top: 1px solid #f0f0f0;
    padding-top: 20px;
    margin-top: 15px;
}

.country-tours h4 {
    color: #2c5aa0;
    font-size: 1rem;
    margin-bottom: 15px;
    display: flex;
    align-items: center;
    gap: 8px;
}

.country-tours h4::before {
    content: '‚úàÔ∏è';
    font-size: 1.1rem;
}

.tour-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 0;
    border-bottom: 1px solid #f8f9fa;
    transition: background-color 0.3s ease;
}

.tour-item:hover {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 12px;
    margin: 0 -12px;
}

.tour-item:last-child {
    border-bottom: none;
}

.tour-name {
    flex: 2;
    font-weight: 500;
    color: #333;
    font-size: 0.9rem;
}

.tour-price {
    flex: 1;
    color: #2c5aa0;
    font-weight: 700;
    font-size: 1rem;
    text-align: center;
}

.tour-duration {
    flex: 1;
    color: #666;
    font-size: 0.8rem;
    text-align: center;
    background: #f8f9fa;
    padding: 4px 8px;
    border-radius: 12px;
}

/* –ö–Ω–æ–ø–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è */
.explore-btn {
    position: absolute;
    bottom: 20px;
    right: 25px;
    background: linear-gradient(135deg, #2c5aa0, #4a7bc8);
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 25px;
    cursor: pointer;
    font-weight: 600;
    font-size: 0.9rem;
    transform: translateY(10px);
    opacity: 0;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(44, 90, 160, 0.3);
}

.explore-btn:hover {
    background: linear-gradient(135deg, #1e3d6f, #2c5aa0);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(44, 90, 160, 0.4);
}

/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É */
.btn-small {
    background: linear-gradient(135deg, #28a745, #20c997);
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 20px;
    cursor: pointer;
    font-size: 0.8rem;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 2px 10px rgba(40, 167, 69, 0.3);
}

.btn-small:hover {
    background: linear-gradient(135deg, #218838, #1e7e34);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(40, 167, 69, 0.4);
}

/* –°–æ–æ–±—â–µ–Ω–∏—è */
.loading-message, .error-message, .no-countries-message {
    text-align: center;
    padding: 60px 20px;
    grid-column: 1 / -1;
}

.loading-message {
    color: #2c5aa0;
    font-size: 1.2rem;
}

.error-message {
    color: #dc3545;
    background: #ffe6e6;
    padding: 30px;
    border-radius: 15px;
    border-left: 4px solid #dc3545;
}

.no-countries-message {
    background: white;
    border-radius: 20px;
    padding: 60px 40px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
}

.no-countries-message i {
    font-size: 4rem;
    color: #ccc;
    margin-bottom: 20px;
    display: block;
}

.no-countries-message h3 {
    color: #666;
    margin-bottom: 15px;
    font-size: 1.5rem;
}

.no-countries-message p {
    color: #888;
    margin-bottom: 25px;
    font-size: 1rem;
}

/* –ê–Ω–∏–º–∞—Ü–∏–∏ */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes pulse {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
}

.country-card {
    animation: fadeInUp 0.6s ease forwards;
    opacity: 0;
}

.country-card:nth-child(1) { animation-delay: 0.1s; }
.country-card:nth-child(2) { animation-delay: 0.2s; }
.country-card:nth-child(3) { animation-delay: 0.3s; }
.country-card:nth-child(4) { animation-delay: 0.4s; }
.country-card:nth-child(5) { animation-delay: 0.5s; }
.country-card:nth-child(6) { animation-delay: 0.6s; }

.pulse-animation {
    animation: pulse 2s infinite;
}

.float-animation {
    animation: float 3s ease-in-out infinite;
}

/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */
.destinations-filters {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-bottom: 30px;
    flex-wrap: wrap;
}

.filter-btn {
    background: white;
    border: 2px solid #e9ecef;
    padding: 10px 20px;
    border-radius: 25px;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s ease;
    color: #666;
}

.filter-btn:hover, .filter-btn.active {
    background: #2c5aa0;
    color: white;
    border-color: #2c5aa0;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(44, 90, 160, 0.3);
}

.search-box {
    max-width: 400px;
    margin: 0 auto 40px;
    position: relative;
}

.search-input {
    width: 100%;
    padding: 15px 50px 15px 20px;
    border: 2px solid #e9ecef;
    border-radius: 30px;
    font-size: 1rem;
    transition: all 0.3s ease;
    background: white;
}

.search-input:focus {
    outline: none;
    border-color: #2c5aa0;
    box-shadow: 0 5px 15px rgba(44, 90, 160, 0.1);
}

.search-icon {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    color: #666;
}

/* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
@media (max-width: 768px) {
    .destinations {
        padding: 50px 0;
    }
    
    .section-title {
        font-size: 2rem;
    }
    
    .destinations-grid {
        grid-template-columns: 1fr;
        gap: 20px;
    }
    
    .country-card {
        margin: 0 10px;
    }
    
    .tour-item {
        flex-direction: column;
        gap: 8px;
        text-align: center;
    }
    
    .tour-name, .tour-price, .tour-duration {
        flex: none;
        width: 100%;
    }
    
    .destinations-filters {
        gap: 10px;
    }
    
    .filter-btn {
        padding: 8px 16px;
        font-size: 0.9rem;
    }
}

@media (max-width: 480px) {
    .country-content {
        padding: 20px;
    }
    
    .country-image {
        height: 200px;
    }
    
    .explore-btn {
        position: relative;
        bottom: auto;
        right: auto;
        transform: none;
        opacity: 1;
        margin-top: 15px;
        width: 100%;
    }
}

/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */
.destinations::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, rgba(44, 90, 160, 0.3), transparent);
}

.country-card::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #2c5aa0, #4a7bc8, #2c5aa0);
    transform: scaleX(0);
    transition: transform 0.3s ease;
}

.country-card:hover::after {
    transform: scaleX(1);
}



=== FILE: ./fix_sortable_css.html ===
<!-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Sortable CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.css">



=== FILE: ./package-lock.json ===
{
  "name": "worldtravel-admin",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "worldtravel-admin",
      "version": "1.0.0",
      "license": "ISC",
      "dependencies": {
        "body-parser": "^1.20.2",
        "cors": "^2.8.5",
        "crypto": "^1.0.1",
        "dotenv": "^16.6.1",
        "express": "^4.21.2",
        "nodemailer": "^6.10.1"
      },
      "devDependencies": {
        "nodemon": "^3.0.1"
      }
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "license": "MIT",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
      "license": "MIT"
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/body-parser": {
      "version": "1.20.3",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.5",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.13.0",
        "raw-body": "2.5.2",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
      "license": "MIT"
    },
    "node_modules/cors": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
      "license": "MIT",
      "dependencies": {
        "object-assign": "^4",
        "vary": "^1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/crypto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/crypto/-/crypto-1.0.1.tgz",
      "integrity": "sha512-VxBKmeNcqQdiUQUW2Tzq0t377b54N2bMtXO/qiLa+6eRRmmC4qT3D4OnTGoT/U6O9aklQ/jTwbOtRMTTY8G0Ig==",
      "deprecated": "This package is no longer supported. It's now a built-in Node module. If you've depended on crypto, you should switch to the one that's built-in.",
      "license": "ISC"
    },
    "node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/dotenv": {
      "version": "16.6.1",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.6.1.tgz",
      "integrity": "sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://dotenvx.com"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
      "license": "MIT"
    },
    "node_modules/encodeurl": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
      "license": "MIT"
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/express": {
      "version": "4.21.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.3",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.7.1",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.3.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.3",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.12",
        "proxy-addr": "~2.0.7",
        "qs": "6.13.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.19.0",
        "serve-static": "1.16.2",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/express"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "license": "MIT",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ignore-by-default": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
      "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "license": "ISC"
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/nodemailer": {
      "version": "6.10.1",
      "resolved": "https://registry.npmjs.org/nodemailer/-/nodemailer-6.10.1.tgz",
      "integrity": "sha512-Z+iLaBGVaSjbIzQ4pX6XV41HrooLsQ10ZWPUehGmuantvzWoDVBnmsdUcOIDM1t+yPor5pDhVlDESgOMEGxhHA==",
      "license": "MIT-0",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/nodemon": {
      "version": "3.1.10",
      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-3.1.10.tgz",
      "integrity": "sha512-WDjw3pJ0/0jMFmyNDp3gvY2YizjLmmOUQo6DEBY+JgdvW/yQ9mEeSw6H5ythl5Ny2ytb7f9C2nIbjSxMNzbJXw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "chokidar": "^3.5.2",
        "debug": "^4",
        "ignore-by-default": "^1.0.1",
        "minimatch": "^3.1.2",
        "pstree.remy": "^1.1.8",
        "semver": "^7.5.3",
        "simple-update-notifier": "^2.0.0",
        "supports-color": "^5.5.0",
        "touch": "^3.1.0",
        "undefsafe": "^2.0.5"
      },
      "bin": {
        "nodemon": "bin/nodemon.js"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/nodemon"
      }
    },
    "node_modules/nodemon/node_modules/debug": {
      "version": "4.4.3",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.3.tgz",
      "integrity": "sha512-RGwwWnwQvkVfavKVt22FGLw+xYSdzARwm0ru6DhTVA3umU5hZc28V3kO4stgYryrTlLpuvgI9GiijltAjNbcqA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/nodemon/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "license": "MIT",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
      "license": "MIT"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "license": "MIT",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/pstree.remy": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
      "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/qs": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.0.6"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
      "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "license": "MIT"
    },
    "node_modules/semver": {
      "version": "7.7.3",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.3.tgz",
      "integrity": "sha512-SdsKMrI9TdgjdweUSR9MweHA4EJ8YxHn8DFaDisvhVlUOe4BF1tLD7GAj0lIqWVl+dPb/rExr0Btby5loQm20Q==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/send": {
      "version": "0.19.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/send/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/serve-static": {
      "version": "1.16.2",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
      "license": "MIT",
      "dependencies": {
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.19.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "license": "ISC"
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/simple-update-notifier": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-2.0.0.tgz",
      "integrity": "sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "semver": "^7.5.3"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/touch": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.1.tgz",
      "integrity": "sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "nodetouch": "bin/nodetouch.js"
      }
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "license": "MIT",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/undefsafe": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
      "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    }
  }
}



